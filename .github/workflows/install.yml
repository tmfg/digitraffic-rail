name: Install
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        type: environment
        default: 'beta'
      app:
        description: Application
        required: true
        type: choice
        options:
          - AvoinDataServer
          - AvoinDataUpdater
jobs:
  install:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    environment: ${{ github.event.inputs.env }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.CONFIG_REPO_SSH_KEY }}
      - name: Checkout config repo
        run: |
          git clone ${{ secrets.CONFIG_REPO_NAME }} config
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: gh-actions-install-rail-${{ github.event.inputs.env }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - name: Set app name env variables
        run: |
          CONFIG_FILE_NAME=$(echo ${{ github.event.inputs.app }} | awk '{print tolower($0)}')
          echo "CONFIG_FILE_NAME=$CONFIG_FILE_NAME" >> $GITHUB_ENV
          SERVICE_NAME=$(echo ${{ github.event.inputs.app }} | awk '{print substr($0, 0, 9) "-" substr($0, 10)}' })
          echo "SERVICE_NAME=$SERVICE_NAME" >> $GITHUB_ENV
      - name: Build ${{ github.event.inputs.app }}
        run: |
          cd ${{ github.event.inputs.app }}
          mvn install -DskipTests=true -Ddependency-check.skip=true
          cp target/${{ github.event.inputs.app }}-0.0.1-SNAPSHOT.jar ../config/aws/app.jar
          cd ../config/aws
          docker build --no-cache \
            --build-arg ENV=${{ github.event.inputs.env }} \
            --build-arg JAR_FILE=train-history-backend.jar \
            --build-arg PROPERTY_FILE=conf/${{ env.CONFIG_FILE_NAME }}-${{ github.event.inputs.env }}.properties}} \
            --build-arg LOGCONF_FILE=conf/${{ env.CONFIG_FILE_NAME }}-logback.xml
            -t ${{ secrets.ECR_URL }}/${{ env.SERVICE_NAME }}:${GITHUB_SHA} \
            --pull=true --file=Dockerfile-rail-${{ env.CONFIG_FILE_NAME }} .
