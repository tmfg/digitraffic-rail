name: 'S3 poll'
on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Environment'
        required: true
        type: environment
        default: 'beta'
      bucket-name:
        description: 'Bucket name'
        required: true
        type: string

jobs:
  update_applications:
    environment: ${{ github.event.inputs.env }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.S3_ROLE }}
          role-session-name: gh-actions-deploy-rail-${{ github.event.inputs.env }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Get version files from S3
        run: |
          aws s3 ls s3://${{ github.event.inputs.bucket-name }}
          aws s3 sync s3://${{ github.event.inputs.bucket-name }} .
          ls -lha
        shell: bash
      - name: Check file count
        id: file_count
        run: |
          echo "file_count=$(ls -1q | grep -c "")" >> $GITHUB_OUTPUT
        shell: bash
      - name: Get etj2 schema version
        if: ${{ steps.file_count.outputs.file_count > 0 }}
        id: etj2_schema_version
        run: |          
          # set version from file to output
          echo "schema_version=$(cat etj2_*.imported|cut -d'_' -f 3)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Get infra schema version
        if: ${{ steps.file_count.outputs.file_count > 0 }}
        id: infra_schema_version
        run: |
          # set version from file to output
          echo "schema_version=$(cat infra_*.imported|cut -d'_' -f 3)" >> $GITHUB_OUTPUT
        shell: bash
      - name: Checkout
        if: ${{ steps.file_count.outputs.file_count > 0 }}
        uses: actions/checkout@v3
      - name: Update etj2-api
        if: ${{ steps.file_count.outputs.file_count > 0 }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo updating etj2-api to version ${{ steps.etj2_schema_version.outputs.schema_version }}
          gh workflow run deploy-from-repo.yml -f env=${{ github.event.inputs.env }} -f application-name=etj2-api -f config-branch=master -f suffix=${{ steps.etj2_schema_version.outputs.schema_version }}
        shell: bash
      - name: Update infra-api
        if: ${{ steps.file_count.outputs.file_count > 0 }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo updating infra-api to version ${{ steps.infra_schema_version.outputs.schema_version }}
          gh workflow run deploy-from-repo.yml -f env=${{ github.event.inputs.env }} -f application-name=infra-api -f config-branch=master -f suffix=${{ steps.etj2_schema_version.outputs.schema_version }}
        shell: bash
      - name: Remove schema version files
        if: ${{ steps.file_count.outputs.file_count > 0 }}
        run: |
          for file in *.imported; do asw s3 rm s3://${{ github.event.inputs.bucket-name }}/${file}; done
        shell: bash