name: Build
on: 
  push:
  workflow_dispatch:
jobs:
  build:
    if: github.repository != 'tmfg/digitraffic-rail'
    runs-on: ubuntu-22.04
    services:
      dt-rail-mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_ROOT_PASSWORD:
        # Set health checks to wait until mysql has started
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto
          cache: maven
      - name: Compile
        run: mvn -f pom.xml install -e -U -DskipTests=true -Ddependency-check.skip=true
      - name: Setup database
        run: mysql --protocol=TCP --host=localhost --port=3306 --user=root --execute="CREATE DATABASE avoindata_test;"
      # Creates database, has to be run before AvoinDataServer tests
      - name: Run AvoinDataUpdater tests
        run: |
          mvn org.jacoco:jacoco-maven-plugin:prepare-agent org.jacoco:jacoco-maven-plugin:report -pl AvoinDataUpdater test
      - name: Run AvoinDataServer tests
        run: |
          mvn org.jacoco:jacoco-maven-plugin:prepare-agent org.jacoco:jacoco-maven-plugin:report -pl AvoinDataServer test
      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: jUnit tests
          path: AvoinDataUpdater/target/surefire-reports/*.xml,AvoinDataServer/target/surefire-reports/*.xml
          reporter: java-junit
      - name: Notify Slack
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: FAILED Rail build
          fields: repo, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
