{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "situationExchangeDeliveryMessage",
  "description": "Situation  - Kafka topics - This swagger is not a REST API description but it's a description of the messages exchanged by RAMI topics",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "headers": {
      "type": "object",
      "description": "Headers of the message.",
      "properties": {
        "e2eId": {
          "type": "string",
          "description": "unique identifier - logging correlation id - e.g 'b71adc48-fcf4-11e7-8290-0242ac110005'"
        },
        "organisation": {
          "type": "string",
          "description": "Data Type for Identifier of an OrganisationCode."
        },
        "eventId": {
          "type": "string",
          "description": "event unique identifier - e.g 'c9472941-fcf4-11e7-8290-0242ac110005'"
        },
        "eventType": {
          "type": "string",
          "description": "Type of event"
        },
        "partitionKey": {
          "type": "string",
          "description": "Value of partition key. It is present if setted by producer."
        },
        "source": {
          "type": "string",
          "description": "Unique identifier of the source module that publishes the data"
        },
        "recordedAtTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which VEHICLE data was recorded. Date and time in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)."
        }
      },
      "required": [
        "e2eId",
        "eventId",
        "eventType",
        "source",
        "recordedAtTime"
      ]
    },
    "payload": {
      "type": "object",
      "description": "An incident or deviation affecting the planned Public Transport service operation.",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "countryRef": {
              "type": "string",
              "description": "Country code of the Participant. IANA code."
            },
            "participantRef": {
              "type": "string",
              "description": "Identifier of participant system that creates the Situation."
            },
            "situationNumber": {
              "type": "string",
              "description": "Unique Identifier of the Situation generated by RAMI."
            },
            "version": {
              "type": "string",
              "description": "Version of the Situation element."
            }
          },
          "required": [
            "participantRef"
          ]
        },
        {
          "type": "object",
          "properties": {
            "verification": {
              "type": "string",
              "enum": [
                "unknown",
                "unverified",
                "verified",
                "verifiedAsDuplicate"
              ],
              "description": "Describes whether the Situation has been verified. Values are based on TPEG pti32:\n  * unknown - Status is unknown (pti32_0)\n  * unverified - Situation is not verified (pti32_1)\n  * verified - Situation has been verified (pti32_255)\n  * verifiedAsDuplicate - Situation has been verified as a duplicate"
            },
            "progress": {
              "type": "string",
              "enum": [
                "draft",
                "pendingApproval",
                "approvedDraft",
                "open",
                "published",
                "closing",
                "closed"
              ],
              "description": "Describes the Life Cycle status of the Situation. The values are based on TPEG pti32. The Progress status allows distributed workflow applications to coordinate their handling of live situations:\n  * draft - Content is being drafted\n  * pendingApproval - Content is pending approval\n  * approvedDraft - Content is approved\n  * open - Situation is open\n  * published - Situation is open and published\n  * closing - Situation is in the process of closing\n  * closed - Situation is closed\n  \nThe following state transitions are allowed:\n  - draft -> pending approval or open\n  - pending approval -> draft or  approved draft\n  - approved draft -> open\n  - open -> closing or closed\n  - closing -> closed or open\n  - closed -> open\n  \nIf the staus is \"open\", the Situation is processed and published to the specific IMS Kafka topic.\n\nNB: The cancelled Situation - in Progress closed - has to be Verification and Reality with the following values: Verification: unverified, Reality: unconfirmed.        \n  "
            },
            "qualityIndex": {
              "type": "string",
              "enum": [
                "certain",
                "veryReliable",
                "reliable",
                "probablyReliable",
                "improbable"
              ],
              "description": "QualityIndex ascribes a certainty level to the information. The values are based on those used in Trident and can be equated to the Datex2 ProbabilityOfOccurrence:\n  * certain - Information is certain\n  * veryReliable - Certainty is Very Reliable\n  * reliable - Certainty is Reliable\n  * probablyReliable - Certainty is Probably Reliable (probable)\n  * improbable - Not confirmed (unconfirmed)"
            },
            "reality": {
              "type": "string",
              "enum": [
                "real",
                "securityExercise",
                "technicalExercise",
                "test",
                "unconfirmed"
              ],
              "description": "States whether the situation is real, or is a test of either just the information system, or a process and the information system. The values are based on those used in Datex2 InformationStatus:\n  * real - Situation is real\n  * securityExercise - Situation is a real-world security exercise\n  * technicalExercise - Situation is a real-world technical exercise\n  * test - Situation is not real\n  * unconfirmed - Uncertain "
            },
            "likelihood": {
              "type": "string",
              "enum": [
                "certain",
                "probable",
                "riskOf",
                "improbable"
              ],
              "description": "Ascribes a certainty level to a future event. The values are the same as those used in Datex2 ProbabilityOfOccurrence:\n  * certain - Event  will definitely happen\n  * probable - Event is likely or is very likely\n  * riskOf - Risk of event happening\n  * improbable - Uncertain "
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "validityPeriod": {
              "type": "array",
              "description": "On or more Overall inclusive Period of applicability of situation",
              "items": {
                "type": "object",
                "description": "Type for a range of date times. Start time must be specified, end time is optional.",
                "properties": {
                  "start": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The (inclusive) start time stamp. Date and time in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)."
                  },
                  "end": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The (inclusive) end time stamp. If omitted, the range end is open-ended, that is, it should be interpreted as \"forever\". Date and time in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)."
                  }
                }
              }
            },
            "repetitions": {
              "type": "array",
              "description": "Situation applies only on the repeated day types within the overall validity period(s). For example Sunday.",
              "items": {
                "type": "string",
                "enum": [
                  "unknown",
                  "monday",
                  "tuesday",
                  "wednesday",
                  "thursday",
                  "friday",
                  "saturday",
                  "sunday",
                  "weekdays",
                  "weekends",
                  "holiday",
                  "publicHoliday",
                  "religiousHoliday",
                  "federalHoliday",
                  "regionalHoliday",
                  "nationalHoliday",
                  "mondayToFriday",
                  "mondayToSaturday",
                  "sundaysAndPublicHolidays",
                  "schoolDays",
                  "everyDay",
                  "undefinedDayType"
                ],
                "description": "Specifies a day on which the Situation may apply within the validity period. This can be used for example to specify the temporal scope of engineering works which repeat every repeating weekend within a six month period. The values are based on TPEG pti34:\n  * unknown - Unknown (pti34_0)\n  * monday - Monday (pti34_1)\n  * tuesday - Tuesday (pti34_2)\n  * wednesday - Wednesday (pti34_3)\n  * thursday - Thursday (pti34_4)\n  * friday - Friday (pti34_5)\n  * saturday - Saturday (pti34_6)\n  * sunday - Sunday (pti34_7)\n  * weekdays - Weekdays (pti34_8)\n  * weekends - Weekends (pti34_9)\n  * holiday - Holiday (pti34_10)\n  * publicHoliday - Public Holiday (pti34_11)\n  * religiousHoliday - Religious Holiday (pti34_12)\n  * federalHoliday - Federal Holiday (pti34_13)\n  * regionalHoliday - Regional Holiday (pti34_14)\n  * nationalHoliday - National Holiday (pti34_15)\n  * mondayToFriday - Monday To Friday (pti34_16)\n  * mondayToSaturday - Monday To Saturday (pti34_17)\n  * sundaysAndPublicHolidays - Sundays & Public Holidays (pti34_18)\n  * schoolDays - School Days (pti34_19)\n  * everyDay - Every Day (pti34_20)\n  * undefinedDayType - Undefined DayType (pti34_255)"
              }
            },
            "publicationWindow": {
              "type": "object",
              "description": "Publication Window for situation if different from validity period. Period during which audience is informed of situation may start before or after situation.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Type for a range of date times. Start time must be specified, end time is optional.",
                  "properties": {
                    "start": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The (inclusive) start time stamp. Date and time in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)."
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The (inclusive) end time stamp. If omitted, the range end is open-ended, that is, it should be interpreted as \"forever\". Date and time in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)."
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "reasonType": {
              "type": "string",
              "enum": [
                "unknownReason",
                "miscellaneousReason",
                "personnelReason",
                "equipmentReason",
                "environmentReason",
                "undefinedReason"
              ],
              "description": "There are six main Reason types as described by TPEG Pti18. Allowed values:\n  * unknownReason - Unknown (pti18_0)\n  * miscellaneousReason - Miscellaneous event reason (pti18_1)\n  * personnelReason - Personnel event reason (pti18_2) \n  * equipmentReason - Equipment event reason (pti18_3)\n  * environmentReason - Environment event reason (pti18_4)\n  * undefinedReason - Undefined event reason (pti18_255)"
            },
            "miscellaneousReason": {
              "type": "string",
              "enum": [
                "unknown",
                "incident",
                "bombExplosion",
                "securityAlert",
                "fire",
                "vandalism",
                "accident",
                "overcrowded",
                "insufficientDemand",
                "lightingFailure",
                "leaderBoardFailure",
                "serviceIndicatorFailure",
                "serviceFailure",
                "operatorCeasedTrading",
                "operatorSuspended",
                "congestion",
                "routeBlockage",
                "personOnTheLine",
                "vehicleOnTheLine",
                "objectOnTheLine",
                "animalOnTheLine",
                "routeDiversion",
                "roadClosed",
                "roadworks",
                "specialEvent",
                "bridgeStrike",
                "overheadObstruction",
                "undefinedProblem"
              ],
              "description": "TPEG Pti19 (Miscellaneous Event Type) enumerates miscellaneous reasons for situations. Allowed values:\n  * unknown - (pti19_0) unknown\n  * incident - (pti19_1) incident\n  * bombExplosion - (pti19_2) bomb explosion\n  * securityAlert - (pti19_3) security alert\n  * fire - (pti19_4) fire\n  * vandalism - (pti19_5) vandalism\n  * accident - (pti19_6) accident\n  * overcrowded - (pti19_7) overcrowded\n  * insufficientDemand - (pti19_8) insufficient demand\n  * lightingFailure - (pti19_9) lighting failure\n  * leaderBoardFailure - (pti19_10) leader board failure\n  * serviceIndicatorFailure - (pti19_11) service indicator failure\n  * serviceFailure - (pti19_12) service failure\n  * operatorCeasedTrading - (pti19_13) operator ceased trading\n  * operatorSuspended - (pti19_14) operator suspended\n  * congestion - (pti19_15) congestion\n  * routeBlockage - (pti19_16) route blockage\n  * personOnTheLine - (pti19_17) person on the line\n  * vehicleOnTheLine - (pti19_18) vehicle on the line\n  * objectOnTheLine - (pti19_19) object on the line\n  * animalOnTheLine - (pti19_20) animal on the line\n  * routeDiversion - (pti19_21) route diversion\n  * roadClosed - (pti19_22) road closed\n  * roadworks - (pti19_23) roadworks\n  * specialEvent - (pti19_24) special event\n  * bridgeStrike - (pti19_25) bridge strike\n  * overheadObstruction - (pti19_26) overhead obstruction\n  * undefinedProblem - (pti19_255) undefined problem"
            },
            "personnelReason": {
              "type": "string",
              "enum": [
                "unknown",
                "staffSickness",
                "staffAbsence",
                "staffInWrongPlace",
                "staffShortage",
                "industrialAction",
                "workToRule",
                "undefinedPersonnelProblem"
              ],
              "description": "TPEG Pti20 (Personnel Problem) enumerates Personnel reasons for situations. Allowed values:\n  * unknown - (pti20_0) unknown\n  * staffSickness - (pti20_1) staff sickness\n  * staffAbsence - (pti20_2) staff absence\n  * staffInWrongPlace - (pti20_3) staff in wrong place\n  * staffShortage - (pti20_4) staff shortage\n  * industrialAction - (pti20_5) industrial action (strike)\n  * workToRule - (pti20_6) work to rule (go slow operation)\n  * undefinedPersonnelProblem - (pti20_255) undefined personnel problem"
            },
            "equipmentReason": {
              "type": "string",
              "enum": [
                "unknown",
                "pointsProblem",
                "pointsFailure",
                "signalProblem",
                "signalFailure",
                "derailment",
                "engineFailure",
                "breakDown",
                "technicalProblem",
                "repairWork",
                "constructionWork",
                "maintenanceWork",
                "powerProblem",
                "fuelProblem",
                "swingBridgeFailure",
                "escalatorFailure",
                "liftFailure",
                "gangwayProblem",
                "closedForMaintenance",
                "fuelShortage",
                "deicingWork",
                "wheelProblem",
                "luggageCarouselProblem",
                "undefinedEquipmentProblem"
              ],
              "description": "TPEG Pti21 (Equipment Event Type) enumerates Equipment reasons for situations. Allowed values:\n  * unknown - (pti21_0) unknown\n  * pointsProblem - (pti21_1) points problem\n  * pointsFailure - (pti21_2) points failure\n  * signalProblem - (pti21_3) signal problem\n  * signalFailure - (pti21_4) signal failure\n  * derailment - (pti21_5) derailment\n  * engineFailure - (pti21_6) engine failure\n  * breakDown - (pti21_7) break down\n  * technicalProblem - (pti21_8) technical problem\n  * repairWork - (pti21_9) repair work\n  * constructionWork - (pti21_10) construction work\n  * maintenanceWork - (pti21_11) maintenance work\n  * powerProblem - (pti21_12) power problem\n  * fuelProblem - (pti21_13) fuel problem\n  * swingBridgeFailure - (pti21_14) swing bridge failure\n  * escalatorFailure - (pti21_15) escalator failure\n  * liftFailure - (pti21_16) lift failure\n  * gangwayProblem - (pti21_17) gangway problem\n  * closedForMaintenance - (pti21_18) closed for maintenance\n  * fuelShortage - (pti21_19) fuel shortage\n  * deicingWork - (pti21_20) de-icing work\n  * wheelProblem - (pti21_21) wheel problem\n  * luggageCarouselProblem - (pti21_22) luggage carousel problem\n  * undefinedEquipmentProblem - (pti21_255) undefined equipment problem"
            },
            "environmentReason": {
              "type": "string",
              "enum": [
                "unknown",
                "fog",
                "roughSea",
                "heavySnowFall",
                "heavyRain",
                "strongWinds",
                "tidalRestrictions",
                "highTide",
                "lowTide",
                "ice",
                "frozen",
                "hail",
                "highTemperatures",
                "flooding",
                "waterlogged",
                "lowWaterLevel",
                "highWaterLevel",
                "fallenLeaves",
                "fallenTree",
                "landslide",
                "undefinedEnvironmentalProblem"
              ],
              "description": "TPEG Pti22 (Environment Event Type) enumerates Environmental reasons for situations. Allowed values:\n  * unknown - (pti22_0) unknown\n  * fog - (pti22_1) fog\n  * roughSea - (pti22_2) rough sea\n  * heavySnowFall - (pti22_3) heavy snow fall\n  * heavyRain - (pti22_4) heavy rain\n  * strongWinds - (pti22_5) strong winds\n  * tidalRestrictions - (pti22_6) tidal restrictions\n  * highTide - (pti22_7) high tide\n  * lowTide - (pti22_8) low tide\n  * ice - (pti22_9) ice\n  * frozen - (pti22_10) frozen\n  * hail - (pti22_11) hail\n  * highTemperatures - (pti22_12) high temperatures\n  * flooding - (pti22_13) flooding flooding\n  * waterlogged - (pti22_14) waterlogged\n  * lowWaterLevel - (pti22_15) low water level\n  * highWaterLevel - (pti22_16) high water level\n  * fallenLeaves - (pti22_17) fallen leaves\n  * fallenTree - (pti22_18) fallen tree \n  * landslide - (pti22_19) landslide \n  * undefinedEnvironmentalProblem - (pti22_255) poor weather"
            },
            "publicEventReason": {
              "type": "string",
              "enum": [
                "athleticsMeeting",
                "ballGame",
                "baseballGame",
                "basketballGame",
                "bicycleRace",
                "boatRace",
                "boxingTournament",
                "bullFight",
                "ceremonialEvent",
                "concert",
                "cricketMatch",
                "exhibition",
                "fair",
                "festival",
                "filmTVMaking",
                "footballMatch",
                "funfair",
                "golfTournament",
                "hockeyGame",
                "horseRaceMeeting",
                "internationalSportsMeeting",
                "majorEvent",
                "marathon",
                "market",
                "match",
                "motorSportRaceMeeting",
                "parade",
                "raceMeeting",
                "rugbyMatch",
                "severalMajorEvents",
                "show",
                "showJumping",
                "sportsMeeting",
                "stateOccasion",
                "tennisTournament",
                "tournament",
                "tradeFair",
                "waterSportsMeeting",
                "winterSportsMeeting",
                "other"
              ],
              "description": "Taxonomic information about a public event which may be the cause or affect the situations. Allowed values of Public Event Type based on Datex2 (Empty):\n  * athleticsMeeting - Athletics Meeting\n  * ballGame - Ball Game\n  * baseballGame - Baseball Game\n  * basketballGame Basketball Game\n  * bicycleRace - Bicycle Race\n  * boatRace - Boat Race\n  * boxingTournament - Boxing Tournament\n  * bullFight - Bull Fight\n  * ceremonialEvent - Ceremonial Event\n  * concert - Concert\n  * cricketMatch - Cricket Match\n  * exhibition - Exhibition\n  * fair - Fair\n  * festival - Festival\n  * filmTVMaking - Film or TV on location\n  * footballMatch - Football Match\n  * funfair - Funfair\n  * golfTournament - Golf Tournament\n  * hockeyGame - Hockey Game\n  * horseRaceMeeting - Horserace Meeting\n  * internationalSportsMeeting - International Sports Meeting\n  * majorEvent - Major Event\n  * marathon - Marathon\n  * market - Market\n  * match - Match\n  * motorSportRaceMeeting - Motor Sport Race Meeting\n  * parade - Parade\n  * raceMeeting - Race Meeting\n  * rugbyMatch - Rugby Match\n  * severalMajorEvents - Several Major Events\n  * show - Show\n  * showJumping - Show Jumping\n  * sportsMeeting - Sports Meeting\n  * stateOccasion - State Occasion\n  * tennisTournament - Tennis Tournament\n  * tournament - Tournament\n  * tradeFair - Trade Fair\n  * waterSportsMeeting - Water Sports Meeting\n  * winterSportsMeeting - Winter Sports Meeting\n  * other - Other"
            },
            "reasonName": {
              "type": "string",
              "description": "Text explanation of situation reason. Not normally needed."
            },
            "miscellaneousSubReason": {
              "type": "string",
              "enum": [
                "previousDisturbances",
                "safetyViolation",
                "nearMiss",
                "signalPassedAtDanger",
                "stationOverrun",
                "trainDoor",
                "emergencyServicesCall",
                "policeRequest",
                "fireBrigadeSafetyChecks",
                "unattendedBag",
                "telephonedThreat",
                "suspectVehicle",
                "civilEmergency",
                "airRaid",
                "sabotage",
                "bombAlert",
                "attack",
                "evacuation",
                "terroristIncident",
                "gunfireOnRoadway",
                "explosion",
                "explosionHazard",
                "securityIncident",
                "fireBrigadeOrder",
                "fatality",
                "personUnderTrain",
                "personHitByTrain",
                "personIllOnVehicle",
                "emergencyServices",
                "collision",
                "linesideFire",
                "fallenTreeOnTheLine",
                "vegetation",
                "trainStruckAnimal",
                "trainStruckObject",
                "levelCrossingIncident",
                "sewerageMaintenance",
                "roadMaintenance",
                "asphalting",
                "paving",
                "march",
                "procession",
                "demonstration",
                "publicDisturbance",
                "filterBlockade",
                "sightseersObstructingAccess",
                "viaductFailure",
                "passengerAction",
                "staffAssault",
                "railwayCrime",
                "assault",
                "theft",
                "altercation",
                "illVehicleOccupants",
                "problemsOnLocalRoad",
                "speedRestrictions",
                "logisticProblems"
              ],
              "description": "Additional refinements TPEG miscellaneous event reason.  Allowed values:\n  * previousDisturbances - (pti19:0_1) TPEG unknown\n  * safetyViolation - (pti19:1_1) TPEG incident\n  * nearMiss - (pti19:1_2) TPEG incident\n  * signalPassedAtDanger - (pti19:1_3) TPEG incident\n  * stationOverrun - (pti19:1_4) TPEG incident\n  * trainDoor - (pti19:1_5) TPEG incident\n  * emergencyServicesCall - (pti19:1_6) TPEG incident\n  * policeRequest - (pti19:3_1) TPEG security alert\n  * fireBrigadeSafetyChecks - (pti19:3_2) TPEG security alert\n  * unattendedBag - (pti19:3_3) TPEG security alert\n  * telephonedThreat - (pti19:3_4) TPEG security alert\n  * suspectVehicle - (pti19:3_5) TPEG security alert\n  * civilEmergency - (pti19:3_6) TPEG security alert\n  * airRaid - (pti19:3_7) TPEG security alert\n  * sabotage - (pti19:3_8) TPEG security alert\n  * bombALert - (pti19:3_9) TPEG security alert\n  * attack - (pti19:3_10) TPEG security alert\n  * evacuation - (pti19:3_11) TPEG security alert\n  * terroristIncident - (pti19:3_12) TPEG security alert        \n  * gunfireOnRoadway - (pti19:3_13) TPEG security alert         \n  * explosion - (pti19:3_14) TPEG security alert\n  * explosionHazard - (pti19:3_15) TPEG security alert\n  * securityIncident - (pti19:3_16) TPEG security alert\n  * fireBrigadeOrder - (pti19:3_17) TPEG security alert\n  * fatality - (pti19:6_1) TPEG security alert\n  * personUnderTrain - (pti19:6_2) TPEG accident\n  * personHitByTrain - (pti19:6_3) TPEG accident\n  * personIllOnVehicle - (pti19:6_4) TPEG accident\n  * emergencyServices - (pti19:6_5) TPEG accident \n  * collision - (pti19:6_6) TPEG accident\n  * linesideFire - (pti19:4_1) TPEG fire\n  * fallenTreeOnTheLine - (pti19:19_1) TPEG object on the line\n  * vegetation - (pti19:19_2) TPEG object on the line\n  * trainStruckAnimal - (pti19:19_3) TPEG object on the line\n  * trainStruckObject - (pti19:19_4) TPEG object on the line\n  * levelCrossingIncident - (pti19:18_1) TPEG object on the line\n  * sewerageMaintenance - (pti19:23_1) TPEG roadworks\n  * roadMaintenance - (pti19:23_2) TPEG roadworks\n  * asphalting - (pti19:23_3) TPEG roadworks\n  * paving - (pti19:23_4) TPEG roadworks\n  * march - (pti19:24_1) TPEG special event\n  * procession - (pti19:24_2) TPEG roadworks\n  * demonstration - (pti19:24_3) TPEG special event\n  * publicDisturbance - (pti19:24_4) TPEG special event\n  * filterBlockade - (pti19:24_5) TPEG special event\n  * sightseersObstructingAccess - (pti19:24_6) TPEG special event\n  * viaductFailure - (pti19:25_1) TPEG bridgeStrike\n  * passengerAction - (pti19:5_1) TPEG vandalism\n  * staffAssault - (pti19:5_2) TPEG vandalism\n  * railwayCrime - (pti19:5_3) TPEG vandalism\n  * assault - (pti19:5_4) TPEG vandalism\n  * theft - (pti19:5_5) TPEG vandalism\n  * altercation - (pti19:1_7) TPEG incident\n  * illVehicleOccupants - (pti19:1_8) TPEG incident\n  * problemsOnLocalRoad - (pti19:255_3) TPEG incident\n  * speedRestrictions - (pti19:255_1) TPEG incident\n  * logisticProblems - (pti19:255_2) TPEG incident"
            },
            "personnelSubReason": {
              "type": "string",
              "enum": [
                "staffInjury",
                "unofficialIndustrialAction"
              ],
              "description": "TPEG Pti20 (Personnel Problem) enumerates Personnel reasons for situations. Allowed values:\n  * staffInjury - (pti20:1_1) staff injury\n  * unofficialIndustrialAction - (pti20:1_1) unofficial industrial action"
            },
            "equipmentSubReason": {
              "type": "string",
              "enum": [
                "tractionFailure",
                "defectiveTrain",
                "slipperyTrack",
                "trainWarningSystemProblem",
                "trackCircuitProblem",
                "signalAndSwitchFailure",
                "brokenRail",
                "poorRailConditions",
                "wheelImpactLoad",
                "lackOfOperationalStock",
                "defectiveFireAlarmEquipment",
                "defectivePlatformEdgeDoors",
                "defectiveCctv",
                "defectivePublicAnnouncementSystem",
                "ticketingSystemNotAvailable",
                "levelCrossingFailure",
                "trafficManagementSystemFailure",
                "emergencyEngineeringWork",
                "lateFinishToEngineeringWork",
                "overheadWireFailure"
              ],
              "description": "Additional refinements TPEG Equipment event reason. Allowed values: \n  * tractionFailure (pti21:6_1) TPEG engine failure\n  * defectiveTrain (pti21:6_2) TPEG engine failure\n  * slipperyTrack (pti21:21_1) TPEG wheelProblem failure\n  * trainWarningSystemProblem (pti21:3_1) TPEG signal problem\n  * trackCircuitProblem (pti21:3_2) TPEG signal problem\n  * signalAndSwitchFailure (pti21:4_1) TPEG signal failure\n  * brokenRail (pti21:8_1) TPEG technical problem\n  * poorRailConditions (pti21:8_2) TPEG technical problem\n  * wheelImpactLoad (pti21:8_3) TPEG technical problem\n  * lackOfOperationalStock (pti21:8_4) TPEG technical problem\n  * defectiveFireAlarmEquipment (pti21:8_5) TPEG technical problem\n  * defectivePlatformEdgeDoors (pti21:8_6) TPEG technical problem\n  * defectiveCctv (pti21:8_7) TPEG technical problem\n  * defectivePublicAnnouncementSystem (pti21:8_8) TPEG technical problem\n  * ticketingSystemNotAvailable (pti21:8_9) TPEG technical problem\n  * levelCrossingFailure (pti21:8_10) TPEG technical problem\n  * trafficManagementSystemFailure (pti21:8_11) TPEG technical problem\n  * emergencyEngineeringWork (pti21:11_1) TPEG maintenance work\n  * lateFinishToEngineeringWork (pti21:11_2) TPEG maintenance work\n  * overheadWireFailure (pti21:12_1)"
            },
            "environmentSubReason": {
              "type": "string",
              "enum": [
                "driftingSnow",
                "blizzardConditions",
                "stormDamage",
                "stormConditions",
                "slipperiness",
                "iceDrift",
                "glazedFrost",
                "lightningStrike",
                "avalanches",
                "flashFloods",
                "mudslide",
                "rockfalls",
                "subsidence",
                "earthquakeDamage",
                "sewerOverflow",
                "grassFire"
              ],
              "description": "Additional refinements TPEG Environmentevent reason. Allowed values:\n  * driftingSnow (pti22:3_1) TPEG heavy snow fall\n  * blizzardConditions (pti22:3_2) TPEG heavy snow fall\n  * stormDamage (pti22:5_1) TPEG strong winds\n  * stormConditions (pti22:5_1) TPEG strong winds\n  * slipperiness (pti22:9_1) TPEG ice\n  * iceDrift (pti22:9_2) TPEG ice\n  * glazedFrost (pti22:9_3) TPEG ice\n  * lightningStrike (pti22:255_1) TPEG undefined environmental problem\n  * avalanches (pti22:3_1) TPEG heavy snow fall\n  * flashFloods (pti22:13_1) TPEG flooding\n  * mudslide (pti22:19_1) TPEG landslide\n  * rockfalls (pti22:19_2) TPEG landslide\n  * subsidence (pti22:19_3) TPEG landslide subsidence\n  * earthquakeDamage (pti22:19_4) TPEG landslide earthquakeDamage\n  * sewerOverflow (pti22:255_2) TPEG undefined environmental problem sewerOverflow\n  * grassFire (pti22:255_3) TPEG undefined environmental problem"
            },
            "severity": {
              "type": "string",
              "enum": [
                "unknown",
                "verySlight",
                "slight",
                "normal",
                "severe",
                "verySevere",
                "noImpact"
              ],
              "default": "normal",
              "description": "Severity of the Situation. Corresponds to TPEG Pti26 severities:\n  * unknown - Unknown (pti26_0)\n  * verySlight - Very Slight (pti26_1)\n  * slight - Slight (pti26_2)\n  * normal - Normal (pti26_3)\n  * severe - Severe (pti26_4)\n  * verySevere - Very severe (pti26_5)\n  * noImpact - No impact (pti26_6)\n  * normal - Normal (pti26_255)"
            },
            "priority": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "description": "Arbitrary rating of priority of message if different from severity 1-High. We use the following values:\n  * 1 - high\n  * 2 - above normal\n  * 3 - normal\n  * 4 - low"
            },
            "sensitivity": {
              "type": "string",
              "enum": [
                "veryHigh",
                "high",
                "medium",
                "low",
                "veryLow"
              ],
              "description": "Confidentiality of the Situation. This can be used to filter or route the distribution to interested parties. Allowed values:\n  * veryHigh - Situation is very sensitive\n  * high - Situation is sensitive\n  * medium - Situation is of average sensitiveness\n  * low - Situation is not very sensitive\n  * veryLow - Situation is not of a sensitive nature "
            },
            "audience": {
              "type": "string",
              "enum": [
                "public",
                "emergencyServices",
                "staff",
                "stationStaff",
                "management",
                "authorities",
                "infoServices",
                "transportOperators"
              ],
              "description": "Intended audience of the Situation. This can be used to filter or route the distribution to interested parties. Allowed values:\n  * public - Of interest to public.\n  * emergencyServices - Primarily of interest for emergency services.\n  * staff - Primarily of interest for operator staff.\n  * stationStaff - Primarily of interest for station staff.\n  * management - Primarily of interest for operator management.\n  * authorities - Transport Authorities.\n  * infoServices - Transport and Traffic operators and information service providers.\n  * transportOperators - Transport and Traffic operators."
            },
            "reportType": {
              "type": "string",
              "enum": [
                "unknown",
                "route",
                "network",
                "point",
                "individualService",
                "undefined"
              ],
              "description": "Report type of the Situation. The values are based on TPEG pti27:\n  * unknown - (pti27_1)\n  * route - Situation concerns a route (pti27_2)\n  * network - Situation concerns a network (pti27_3)\n  * point - Situation concerns a point  (pti27_4)\n  * individualService - Situation concerns an individual service (pti27_255)\n  * undefined - (pti27_1) "
            },
            "scopeType": {
              "type": "string",
              "enum": [
                "general",
                "operator",
                "network",
                "route",
                "line",
                "place",
                "stopPlace",
                "stopPlaceComponent",
                "stopPoint",
                "vehicleJourney",
                "datedVehicleJourney",
                "connectionLink",
                "interchange"
              ],
              "description": "Scope type of the Situation. Further describes the nature of the Situation.  This can be used to filter or route the distribution to interested parties and to construct descriptions. It can be regarded a expanding on the ReportType and summarising the nature of the references included in the AffectsScope element. Allowed values:\n  * general - Situation has a general scope\n  * operator - Situation scope is a specific OPERATOR\n  * network - Situation scope is whole network\n  * route - Situation scope is a specific route\n  * line - Situation scope is a specific LINE\n  * place - Situation scope is a specific PLACE\n  * stopPlace - Situation scope is a specific STOP PLACE\n  * stopPlaceComponent - Situation scope is a specific STOP PLACE COMPONENT\n  * stopPoint - Situation scope is a specific STOP POINT\n  * vehicleJourney - Situation scope is a specific VEHICLE JOURNEY\n  * datedVehicleJourney - Situation scope is a specific DATED VEHICLE JOURNEY\n  * connectionLink - Situation scope is a specific CONNECTION LINK\n  * interchange - Situation scope is a specific Interchange between journeys "
            },
            "planned": {
              "type": "boolean",
              "default": false,
              "description": "Whether the situation was planned (e.g. engineering works) or unplanned (e.g. service alteration). Default is false, i.e. unplanned. "
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "language": {
              "type": "string",
              "description": "Default langauge of descriptions."
            },
            "summary": {
              "type": "string",
              "description": "Summary of Situation. If absent should be generated from structure elements / and or by condensing Description."
            },
            "description": {
              "type": "string",
              "description": "Description of Situation. Should not repeat any strap line included in Summary."
            },
            "detail": {
              "type": "string",
              "description": "Additional descriptive details about the Situation."
            },
            "advice": {
              "type": "string",
              "description": "Further advice to passengers."
            },
            "internal": {
              "type": "string",
              "description": "Any images associated with the Situation."
            }
          }
        },
        {
          "properties": {
            "creationTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time of creation of the Situation. Date and time in [ISO 8601. Used in GET but not used in POST/PUT. format](https://en.wikipedia.org/wiki/ISO_8601)."
            },
            "references": {
              "type": "array",
              "description": "Associations with other Situations.",
              "items": {
                "type": "object",
                "description": "A reference to another Situation with an indication of the nature of the association, e.g. a cause, a result.",
                "properties": {
                  "relatedToRef": {
                    "type": "object",
                    "description": "Cross-reference with other Situations",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "countryRef": {
                            "type": "string",
                            "description": "Country code of the Participant. IANA code."
                          },
                          "participantRef": {
                            "type": "string",
                            "description": "Identifier of participant system that creates the Situation."
                          },
                          "situationNumber": {
                            "type": "string",
                            "description": "Unique Identifier of the Situation generated by RAMI."
                          },
                          "version": {
                            "type": "string",
                            "description": "Version of the Situation element."
                          }
                        },
                        "required": [
                          "participantRef"
                        ]
                      },
                      {
                        "properties": {
                          "creationTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time of creation of the Situation. Date and time in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)."
                          },
                          "relatedAs": {
                            "type": "string",
                            "enum": [
                              "cause",
                              "effect",
                              "correctionTo",
                              "update",
                              "supercedes",
                              "supercededBy",
                              "associated"
                            ],
                            "description": "Describes the nature of the relationship of the Situation Element with the referenced Situation:\n  * cause - Referenced situation was a cause of the referencing Situation. \n  * effect - Referenced situation was a result of the referencing Situation.\n  * correctionTo - Referenced situation contained erroneous data which is corrected by the referencing situation.\n  * update - Referenced situation provides update information to the base Situation of the referencing Situation Update.\n  * supercedes - Referenced situation supersedes the referencing Situation. \n  * supercededBy - Referenced situation is superceded by the referencing Situation. \n  * associated - Referenced situation is associated with the referencing Situation non causally "
                          }
                        }
                      }
                    ]
                  }
                }
              }
            },
            "source": {
              "type": "object",
              "description": "Where the information about the Situation came from.The concatenation of the externalCode and agentReference uniquely identify a Situation (the resulting string must not exceed 50 characters). Receiving a Situation with the same externalCode and agentReference of an existing one in the RAMI DB  will be handled as an update.",
              "properties": {
                "timeOfCommunication": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time of communication of the Situation."
                },
                "timeOfObeservation": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time of observation of the Situation, if earlier than time of communication."
                },
                "externalCode": {
                  "type": "string",
                  "description": "External system reference to situation."
                },
                "agentReference": {
                  "type": "string",
                  "description": "Identifier of the source of the Situation."
                },
                "country": {
                  "type": "string",
                  "description": "Country of origin of the source of the Situation. IANA code."
                },
                "name": {
                  "type": "string",
                  "description": "Name of the source."
                },
                "sourceType": {
                  "type": "string",
                  "enum": [
                    "directReport",
                    "email",
                    "phone",
                    "fax",
                    "post",
                    "feed",
                    "radio",
                    "tv",
                    "web",
                    "pager",
                    "text",
                    "other"
                  ],
                  "description": "Describes the type of information source that provided the Situation information:\n  * directReport - Report came in person\n  * email - Report came by email \n  * phone - Report came by phone\n  * fax - Report came by fax\n  * post - Report came by post\n  * feed - Report came by automated feed\n  * radio - Report came from radio\n  * tv - Report came from tv\n  * web - Report came from web site\n  * pager - Report came by pager\n  * text - Report came by text message\n  * other - Report came by other means "
                },
                "sourceMethodType": {
                  "type": "string",
                  "enum": [
                    "automobileClubPatrol",
                    "cameraObservation",
                    "freightVehicleOperator",
                    "inductionLoopMonitoringStation",
                    "microwavedMonitoringStation",
                    "mobileTelephoneCaller",
                    "nonPoliceEmergencyServicesPatrol",
                    "otherInformation",
                    "otherOfficialVehicle",
                    "policePatrol",
                    "privateBreakdownService",
                    "publicAndPrivateUtilities",
                    "registeredMobileObserver",
                    "roadAuthorities",
                    "roadOperatorPatrol",
                    "roadsideTelephoneCaller",
                    "spotterAircraft",
                    "trafficMonitoringStation",
                    "transitOperator",
                    "vehicleProbeMeasurement",
                    "videoProcessingMonitoringStation"
                  ],
                  "description": "Describes the type of information source that detected the Situation information:\n  * automobileClubPatrol - Source was an Automobile Club Patrol\n  * cameraObservation - Source was a Camera Observation\n  * freightVehicleOperator - Source was a Freight Vehicle Operator\n  * inductionLoopMonitoringStation - Source was an Induction Loop Monitoring Station\n  * microwavedMonitoringStation - Source was a Microwaved Monitoring Station\n  * mobileTelephoneCaller - Source was a Mobile Telephone Caller\n  * nonPoliceEmergencyServicesPatrol - Source was a Non Police Emergency Services Patrol\n  * otherInformation - Source was Other\n  * otherOfficialVehicle - Source was an Official Vehicle other than a police patrol\n  * policePatrol - Source was a Police Patrol\n  * privateBreakdownService - Source was a Private Breakdown Service\n  * publicAndPrivateUtilities - Source was a Public And Private Utility\n  * registeredMobileObserver - Source was a Registered Mobile Observer\n  * roadAuthorities - Source was a Road Authority\n  * roadOperatorPatrol - Source was a Road Operator Patrol\n  * roadsideTelephoneCaller - Roadside Telephone Caller\n  * spotterAircraft - Source was a Spotter Aircraft\n  * trafficMonitoringStation - Source was a Traffic Monitoring Station\n  * transitOperator - Source was a Transit Operator\n  * vehicleProbeMeasurement - Source was a Vehicle Probe Measurement\n  * videoProcessingMonitoringStation - Source was a Video Processing Monitoring Station"
                },
                "phone": {
                  "type": "string",
                  "description": "Phone number of the Supplier of information."
                },
                "fax": {
                  "type": "string",
                  "description": "Fax number of the Supplier of information."
                },
                "web": {
                  "type": "string",
                  "description": "Link URL of the Supplier of information."
                },
                "other": {
                  "type": "string",
                  "description": "Other information about the source of the Situation."
                }
              },
              "required": [
                "sourceType",
                "externalCode",
                "agentReference"
              ]
            },
            "keywords": {
              "type": "array",
              "description": "Arbitrary application specific classifiers.",
              "items": {
                "type": "string"
              }
            },
            "affects": {
              "type": "object",
              "description": "The scope of the situation or consequence.",
              "properties": {
                "allOperators": {
                  "type": "boolean",
                  "description": "All operators are effected (Empty)",
                  "default": false
                },
                "operators": {
                  "type": "array",
                  "description": "Operators scope.",
                  "items": {
                    "type": "object",
                    "description": "Annotated Reference to Operator & Unit.",
                    "properties": {
                      "operatorRef": {
                        "type": "string",
                        "description": "Identifier of Operator."
                      },
                      "operatorName": {
                        "type": "string",
                        "description": "Name of Operator."
                      },
                      "operatorShortName": {
                        "type": "string",
                        "description": "ShortName for Operator."
                      },
                      "operationalUnitRef": {
                        "type": "string",
                        "description": "Identifier of Operational unit responsible for managing services."
                      }
                    }
                  }
                },
                "stopPoints": {
                  "type": "array",
                  "description": "Stop Points scope.",
                  "items": {
                    "type": "object",
                    "description": "Annotated Reference to Stop Point",
                    "properties": {
                      "stopPointRef": {
                        "type": "string",
                        "description": "Identifier of Stop Point."
                      },
                      "stopPointName": {
                        "type": "string",
                        "description": "Name of Stop Point."
                      },
                      "location": {
                        "type": "object",
                        "description": "Point Projection to use for stop point.",
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                          },
                          "longitude": {
                            "type": "number",
                            "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                          },
                          "precision": {
                            "type": "number",
                            "description": "Precision for point measurement. In meters."
                          }
                        }
                      },
                      "affectedModes": {
                        "type": "array",
                        "description": "Affected transport modes for the Stop Point",
                        "items": {
                          "type": "string",
                          "enum": [
                            "unknown",
                            "railwayService",
                            "coachService",
                            "suburbanRailwayService",
                            "urbanRailwayService",
                            "metroService",
                            "undergroundService",
                            "busService",
                            "trolleyBusService",
                            "tramService",
                            "waterTransportService",
                            "airService",
                            "ferryService",
                            "telecabinService",
                            "funicularService",
                            "taxiService",
                            "selfDrive"
                          ],
                          "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                        }
                      },
                      "placeRef": {
                        "type": "string",
                        "description": "Identifier of Place in which Stop lies."
                      },
                      "placeName": {
                        "type": "string",
                        "description": "Name of Stop."
                      },
                      "accessibilityAssessment": {
                        "type": "object",
                        "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                        "properties": {
                          "mobilityImpairedAccess": {
                            "type": "boolean",
                            "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                          },
                          "limitation": {
                            "type": "object",
                            "description": "Limitation of entity.",
                            "properties": {
                              "wheelchairAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place is wheelchair accessible."
                              },
                              "stepFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has step free access."
                              },
                              "escalatorAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has escalator free access."
                              },
                              "liftFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has lift free access."
                              },
                              "audibleSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has Audible signals for the visually impaired."
                              },
                              "visualSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has visual signals for the hearing impaired."
                              }
                            }
                          },
                          "suitabilities": {
                            "type": "array",
                            "description": "Suitabilities of facility for specific passenger needs.",
                            "items": {
                              "type": "object",
                              "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                              "properties": {
                                "suitable": {
                                  "type": "string",
                                  "enum": [
                                    "suitable",
                                    "notSuitable",
                                    "unknown"
                                  ],
                                  "description": "Suitability for specified user need."
                                },
                                "userNeed": {
                                  "type": "object",
                                  "description": "Only one of the following",
                                  "properties": {
                                    "mobilityNeed": {
                                      "type": "string",
                                      "enum": [
                                        "wheelchair",
                                        "motorizedWheelchair",
                                        "walkingFrame",
                                        "restrictedMobility",
                                        "otherSpecificNeed"
                                      ],
                                      "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                    },
                                    "medicalNeed": {
                                      "type": "string",
                                      "enum": [
                                        "allergic",
                                        "heartCondition"
                                      ],
                                      "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                    },
                                    "psychoSensoryNeed": {
                                      "type": "string",
                                      "enum": [
                                        "visualImpairment",
                                        "auditoryImpairment",
                                        "cognitiveImpairment",
                                        "averseToLifts",
                                        "averseToEscalators",
                                        "averseToConfinedSpaces",
                                        "averseToCrowds",
                                        "otherSensoryNeed"
                                      ],
                                      "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                    },
                                    "encumbranceNeed": {
                                      "type": "string",
                                      "enum": [
                                        "luggageEncumbered",
                                        "pushchair",
                                        "baggageTrolley",
                                        "oversizeBaggage",
                                        "guideDog",
                                        "otherAnimal",
                                        "otherEncumbrance"
                                      ],
                                      "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "connectionLinks": {
                        "type": "array",
                        "description": "Connection links affected by Situation.",
                        "items": {
                          "type": "object",
                          "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                          "properties": {
                            "connectionLinkRef": {
                              "type": "string",
                              "description": "Reference to a Connection link affected by a Situation."
                            },
                            "connectionName": {
                              "type": "string",
                              "description": "Name of a Connection link affected by a Situation."
                            },
                            "location": {
                              "type": "object",
                              "description": "Point Projection to use for stop point.",
                              "properties": {
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                },
                                "precision": {
                                  "type": "number",
                                  "description": "Precision for point measurement. In meters."
                                }
                              }
                            },
                            "lines": {
                              "type": "array",
                              "description": "Lines to which link connects.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "lineRef": {
                                    "type": "string",
                                    "description": "Reference to a Line."
                                  }
                                }
                              }
                            },
                            "connectingStopPointRef": {
                              "type": "string",
                              "description": "Identifier of connecting Stop Point."
                            },
                            "connectingStopPointName": {
                              "type": "string",
                              "description": "Name of connecting Stop Point."
                            },
                            "connectionDirection": {
                              "type": "string",
                              "enum": [
                                "from",
                                "to",
                                "both"
                              ],
                              "default": "both",
                              "description": "Direction of connection. Default is both."
                            },
                            "affectedPathLinks": {
                              "type": "array",
                              "description": "Path Links affected by a Situation.",
                              "items": {
                                "type": "object",
                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                "properties": {
                                  "linkRef": {
                                    "type": "string",
                                    "description": "Identifier of Connection link."
                                  },
                                  "linkName": {
                                    "type": "string",
                                    "description": "Name of Connection link."
                                  },
                                  "accessibilityFeature": {
                                    "type": "string",
                                    "enum": [
                                      "lift",
                                      "stairs",
                                      "seriesOfStairs",
                                      "escalator",
                                      "travelator",
                                      "ramp",
                                      "shuttle",
                                      "barrier",
                                      "narrowEntrance",
                                      "confinedSpace",
                                      "queueManagement",
                                      "none",
                                      "unknown",
                                      "other"
                                    ],
                                    "description": "Nature of Connection link."
                                  },
                                  "linkDirection": {
                                    "type": "string",
                                    "description": "Description of a Direction of Connection link."
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "networks": {
                  "type": "array",
                  "description": "Networks scope.",
                  "items": {
                    "type": "object",
                    "description": "The AffectedNetwork element groups information about the Modes, Networks and any Lines affected by the situation.",
                    "properties": {
                      "operators": {
                        "type": "array",
                        "description": "Reference to Operators of services affected by situation",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to Operator & Unit.",
                          "properties": {
                            "operatorRef": {
                              "type": "string",
                              "description": "Identifier of Operator."
                            },
                            "operatorName": {
                              "type": "string",
                              "description": "Name of Operator."
                            },
                            "operatorShortName": {
                              "type": "string",
                              "description": "ShortName for Operator."
                            },
                            "operationalUnitRef": {
                              "type": "string",
                              "description": "Identifier of Operational unit responsible for managing services."
                            }
                          }
                        }
                      },
                      "networkRef": {
                        "type": "string",
                        "description": "Network of affected Lines."
                      },
                      "networkName": {
                        "type": "string",
                        "description": "Name of Network."
                      },
                      "routesAffected": {
                        "type": "string",
                        "description": "Textual description of overall routes affected. Should correspond to any structured description."
                      },
                      "vehicleModes": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "enum": [
                            "unknown",
                            "railwayService",
                            "coachService",
                            "suburbanRailwayService",
                            "urbanRailwayService",
                            "metroService",
                            "undergroundService",
                            "busService",
                            "trolleyBusService",
                            "tramService",
                            "waterTransportService",
                            "airService",
                            "ferryService",
                            "telecabinService",
                            "funicularService",
                            "taxiService",
                            "selfDrive"
                          ],
                          "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                        }
                      },
                      "allLines": {
                        "type": "boolean",
                        "description": "All lines in the network are affected.",
                        "default": false
                      },
                      "selectedRoutes": {
                        "type": "boolean",
                        "description": "Only some routes are affected, line level information not available. See the AffectedRoutes element for textual description.",
                        "default": false
                      },
                      "lines": {
                        "type": "array",
                        "description": "Lines affected by the Situation.",
                        "items": {
                          "type": "object",
                          "description": "The AffectedLine element groups information about the LINEs affected by the situation.",
                          "properties": {
                            "operators": {
                              "type": "array",
                              "description": "Annotated reference to Operators of services affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to Operator & Unit.",
                                "properties": {
                                  "operatorRef": {
                                    "type": "string",
                                    "description": "Identifier of Operator."
                                  },
                                  "operatorName": {
                                    "type": "string",
                                    "description": "Name of Operator."
                                  },
                                  "operatorShortName": {
                                    "type": "string",
                                    "description": "ShortName for Operator."
                                  },
                                  "operationalUnitRef": {
                                    "type": "string",
                                    "description": "Identifier of Operational unit responsible for managing services."
                                  }
                                }
                              }
                            },
                            "lineRef": {
                              "type": "string",
                              "description": "Identifier of the Line."
                            },
                            "publishedLineName": {
                              "type": "string",
                              "description": "Public Number or Name of the Line."
                            },
                            "destinations": {
                              "type": "array",
                              "description": "Annotated reference to destination Stop Points affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to Stop Point",
                                "properties": {
                                  "stopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of Stop Point."
                                  },
                                  "stopPointName": {
                                    "type": "string",
                                    "description": "Name of Stop Point."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "affectedModes": {
                                    "type": "array",
                                    "description": "Affected transport modes for the Stop Point",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "unknown",
                                        "railwayService",
                                        "coachService",
                                        "suburbanRailwayService",
                                        "urbanRailwayService",
                                        "metroService",
                                        "undergroundService",
                                        "busService",
                                        "trolleyBusService",
                                        "tramService",
                                        "waterTransportService",
                                        "airService",
                                        "ferryService",
                                        "telecabinService",
                                        "funicularService",
                                        "taxiService",
                                        "selfDrive"
                                      ],
                                      "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                    }
                                  },
                                  "placeRef": {
                                    "type": "string",
                                    "description": "Identifier of Place in which Stop lies."
                                  },
                                  "placeName": {
                                    "type": "string",
                                    "description": "Name of Stop."
                                  },
                                  "accessibilityAssessment": {
                                    "type": "object",
                                    "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                    "properties": {
                                      "mobilityImpairedAccess": {
                                        "type": "boolean",
                                        "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                      },
                                      "limitation": {
                                        "type": "object",
                                        "description": "Limitation of entity.",
                                        "properties": {
                                          "wheelchairAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place is wheelchair accessible."
                                          },
                                          "stepFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has step free access."
                                          },
                                          "escalatorAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has escalator free access."
                                          },
                                          "liftFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has lift free access."
                                          },
                                          "audibleSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has Audible signals for the visually impaired."
                                          },
                                          "visualSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has visual signals for the hearing impaired."
                                          }
                                        }
                                      },
                                      "suitabilities": {
                                        "type": "array",
                                        "description": "Suitabilities of facility for specific passenger needs.",
                                        "items": {
                                          "type": "object",
                                          "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                          "properties": {
                                            "suitable": {
                                              "type": "string",
                                              "enum": [
                                                "suitable",
                                                "notSuitable",
                                                "unknown"
                                              ],
                                              "description": "Suitability for specified user need."
                                            },
                                            "userNeed": {
                                              "type": "object",
                                              "description": "Only one of the following",
                                              "properties": {
                                                "mobilityNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "wheelchair",
                                                    "motorizedWheelchair",
                                                    "walkingFrame",
                                                    "restrictedMobility",
                                                    "otherSpecificNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                                },
                                                "medicalNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "allergic",
                                                    "heartCondition"
                                                  ],
                                                  "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                                },
                                                "psychoSensoryNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "visualImpairment",
                                                    "auditoryImpairment",
                                                    "cognitiveImpairment",
                                                    "averseToLifts",
                                                    "averseToEscalators",
                                                    "averseToConfinedSpaces",
                                                    "averseToCrowds",
                                                    "otherSensoryNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                                },
                                                "encumbranceNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "luggageEncumbered",
                                                    "pushchair",
                                                    "baggageTrolley",
                                                    "oversizeBaggage",
                                                    "guideDog",
                                                    "otherAnimal",
                                                    "otherEncumbrance"
                                                  ],
                                                  "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "connectionLinks": {
                                    "type": "array",
                                    "description": "Connection links affected by Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "connectionLinkRef": {
                                          "type": "string",
                                          "description": "Reference to a Connection link affected by a Situation."
                                        },
                                        "connectionName": {
                                          "type": "string",
                                          "description": "Name of a Connection link affected by a Situation."
                                        },
                                        "location": {
                                          "type": "object",
                                          "description": "Point Projection to use for stop point.",
                                          "properties": {
                                            "latitude": {
                                              "type": "number",
                                              "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                            },
                                            "longitude": {
                                              "type": "number",
                                              "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                            },
                                            "precision": {
                                              "type": "number",
                                              "description": "Precision for point measurement. In meters."
                                            }
                                          }
                                        },
                                        "lines": {
                                          "type": "array",
                                          "description": "Lines to which link connects.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "lineRef": {
                                                "type": "string",
                                                "description": "Reference to a Line."
                                              }
                                            }
                                          }
                                        },
                                        "connectingStopPointRef": {
                                          "type": "string",
                                          "description": "Identifier of connecting Stop Point."
                                        },
                                        "connectingStopPointName": {
                                          "type": "string",
                                          "description": "Name of connecting Stop Point."
                                        },
                                        "connectionDirection": {
                                          "type": "string",
                                          "enum": [
                                            "from",
                                            "to",
                                            "both"
                                          ],
                                          "default": "both",
                                          "description": "Direction of connection. Default is both."
                                        },
                                        "affectedPathLinks": {
                                          "type": "array",
                                          "description": "Path Links affected by a Situation.",
                                          "items": {
                                            "type": "object",
                                            "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                            "properties": {
                                              "linkRef": {
                                                "type": "string",
                                                "description": "Identifier of Connection link."
                                              },
                                              "linkName": {
                                                "type": "string",
                                                "description": "Name of Connection link."
                                              },
                                              "accessibilityFeature": {
                                                "type": "string",
                                                "enum": [
                                                  "lift",
                                                  "stairs",
                                                  "seriesOfStairs",
                                                  "escalator",
                                                  "travelator",
                                                  "ramp",
                                                  "shuttle",
                                                  "barrier",
                                                  "narrowEntrance",
                                                  "confinedSpace",
                                                  "queueManagement",
                                                  "none",
                                                  "unknown",
                                                  "other"
                                                ],
                                                "description": "Nature of Connection link."
                                              },
                                              "linkDirection": {
                                                "type": "string",
                                                "description": "Description of a Direction of Connection link."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "directions": {
                              "type": "array",
                              "description": "Directions affected by the Situation.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "directionRef": {
                                    "type": "string",
                                    "description": "Identifier of Direction."
                                  },
                                  "directionName": {
                                    "type": "string",
                                    "description": "Name of Direction."
                                  }
                                }
                              }
                            },
                            "routes": {
                              "type": "array",
                              "description": "Routes affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to a Route",
                                "properties": {
                                  "routeRef": {
                                    "type": "string",
                                    "description": "Reference to a ROUTE affected by SITUATION."
                                  },
                                  "directions": {
                                    "type": "array",
                                    "description": "Directions affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "directionRef": {
                                          "type": "string",
                                          "description": "Identifier of Direction."
                                        },
                                        "directionName": {
                                          "type": "string",
                                          "description": "Name of Direction."
                                        }
                                      }
                                    }
                                  },
                                  "routeLinks": {
                                    "type": "array",
                                    "description": "Route Links affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Reference to a Route Link.",
                                      "properties": {
                                        "routeLinkRef": {
                                          "type": "string",
                                          "description": "Identifier of a Route Link."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "vehicleMode": {
                              "type": "string",
                              "enum": [
                                "unknown",
                                "railwayService",
                                "coachService",
                                "suburbanRailwayService",
                                "urbanRailwayService",
                                "metroService",
                                "undergroundService",
                                "busService",
                                "trolleyBusService",
                                "tramService",
                                "waterTransportService",
                                "airService",
                                "ferryService",
                                "telecabinService",
                                "funicularService",
                                "taxiService",
                                "selfDrive"
                              ],
                              "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "lines": {
                  "type": "array",
                  "description": "Lines scope.",
                  "items": {
                    "type": "object",
                    "description": "The AffectedLine element groups information about the LINEs affected by the situation.",
                    "properties": {
                      "operators": {
                        "type": "array",
                        "description": "Annotated reference to Operators of services affected by the Situation.",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to Operator & Unit.",
                          "properties": {
                            "operatorRef": {
                              "type": "string",
                              "description": "Identifier of Operator."
                            },
                            "operatorName": {
                              "type": "string",
                              "description": "Name of Operator."
                            },
                            "operatorShortName": {
                              "type": "string",
                              "description": "ShortName for Operator."
                            },
                            "operationalUnitRef": {
                              "type": "string",
                              "description": "Identifier of Operational unit responsible for managing services."
                            }
                          }
                        }
                      },
                      "lineRef": {
                        "type": "string",
                        "description": "Identifier of the Line."
                      },
                      "publishedLineName": {
                        "type": "string",
                        "description": "Public Number or Name of the Line."
                      },
                      "destinations": {
                        "type": "array",
                        "description": "Annotated reference to destination Stop Points affected by the Situation.",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to Stop Point",
                          "properties": {
                            "stopPointRef": {
                              "type": "string",
                              "description": "Identifier of Stop Point."
                            },
                            "stopPointName": {
                              "type": "string",
                              "description": "Name of Stop Point."
                            },
                            "location": {
                              "type": "object",
                              "description": "Point Projection to use for stop point.",
                              "properties": {
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                },
                                "precision": {
                                  "type": "number",
                                  "description": "Precision for point measurement. In meters."
                                }
                              }
                            },
                            "affectedModes": {
                              "type": "array",
                              "description": "Affected transport modes for the Stop Point",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "railwayService",
                                  "coachService",
                                  "suburbanRailwayService",
                                  "urbanRailwayService",
                                  "metroService",
                                  "undergroundService",
                                  "busService",
                                  "trolleyBusService",
                                  "tramService",
                                  "waterTransportService",
                                  "airService",
                                  "ferryService",
                                  "telecabinService",
                                  "funicularService",
                                  "taxiService",
                                  "selfDrive"
                                ],
                                "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                              }
                            },
                            "placeRef": {
                              "type": "string",
                              "description": "Identifier of Place in which Stop lies."
                            },
                            "placeName": {
                              "type": "string",
                              "description": "Name of Stop."
                            },
                            "accessibilityAssessment": {
                              "type": "object",
                              "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                              "properties": {
                                "mobilityImpairedAccess": {
                                  "type": "boolean",
                                  "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                },
                                "limitation": {
                                  "type": "object",
                                  "description": "Limitation of entity.",
                                  "properties": {
                                    "wheelchairAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place is wheelchair accessible."
                                    },
                                    "stepFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has step free access."
                                    },
                                    "escalatorAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has escalator free access."
                                    },
                                    "liftFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has lift free access."
                                    },
                                    "audibleSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has Audible signals for the visually impaired."
                                    },
                                    "visualSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has visual signals for the hearing impaired."
                                    }
                                  }
                                },
                                "suitabilities": {
                                  "type": "array",
                                  "description": "Suitabilities of facility for specific passenger needs.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                    "properties": {
                                      "suitable": {
                                        "type": "string",
                                        "enum": [
                                          "suitable",
                                          "notSuitable",
                                          "unknown"
                                        ],
                                        "description": "Suitability for specified user need."
                                      },
                                      "userNeed": {
                                        "type": "object",
                                        "description": "Only one of the following",
                                        "properties": {
                                          "mobilityNeed": {
                                            "type": "string",
                                            "enum": [
                                              "wheelchair",
                                              "motorizedWheelchair",
                                              "walkingFrame",
                                              "restrictedMobility",
                                              "otherSpecificNeed"
                                            ],
                                            "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                          },
                                          "medicalNeed": {
                                            "type": "string",
                                            "enum": [
                                              "allergic",
                                              "heartCondition"
                                            ],
                                            "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                          },
                                          "psychoSensoryNeed": {
                                            "type": "string",
                                            "enum": [
                                              "visualImpairment",
                                              "auditoryImpairment",
                                              "cognitiveImpairment",
                                              "averseToLifts",
                                              "averseToEscalators",
                                              "averseToConfinedSpaces",
                                              "averseToCrowds",
                                              "otherSensoryNeed"
                                            ],
                                            "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                          },
                                          "encumbranceNeed": {
                                            "type": "string",
                                            "enum": [
                                              "luggageEncumbered",
                                              "pushchair",
                                              "baggageTrolley",
                                              "oversizeBaggage",
                                              "guideDog",
                                              "otherAnimal",
                                              "otherEncumbrance"
                                            ],
                                            "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "connectionLinks": {
                              "type": "array",
                              "description": "Connection links affected by Situation.",
                              "items": {
                                "type": "object",
                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                "properties": {
                                  "connectionLinkRef": {
                                    "type": "string",
                                    "description": "Reference to a Connection link affected by a Situation."
                                  },
                                  "connectionName": {
                                    "type": "string",
                                    "description": "Name of a Connection link affected by a Situation."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "lines": {
                                    "type": "array",
                                    "description": "Lines to which link connects.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "lineRef": {
                                          "type": "string",
                                          "description": "Reference to a Line."
                                        }
                                      }
                                    }
                                  },
                                  "connectingStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of connecting Stop Point."
                                  },
                                  "connectingStopPointName": {
                                    "type": "string",
                                    "description": "Name of connecting Stop Point."
                                  },
                                  "connectionDirection": {
                                    "type": "string",
                                    "enum": [
                                      "from",
                                      "to",
                                      "both"
                                    ],
                                    "default": "both",
                                    "description": "Direction of connection. Default is both."
                                  },
                                  "affectedPathLinks": {
                                    "type": "array",
                                    "description": "Path Links affected by a Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "linkRef": {
                                          "type": "string",
                                          "description": "Identifier of Connection link."
                                        },
                                        "linkName": {
                                          "type": "string",
                                          "description": "Name of Connection link."
                                        },
                                        "accessibilityFeature": {
                                          "type": "string",
                                          "enum": [
                                            "lift",
                                            "stairs",
                                            "seriesOfStairs",
                                            "escalator",
                                            "travelator",
                                            "ramp",
                                            "shuttle",
                                            "barrier",
                                            "narrowEntrance",
                                            "confinedSpace",
                                            "queueManagement",
                                            "none",
                                            "unknown",
                                            "other"
                                          ],
                                          "description": "Nature of Connection link."
                                        },
                                        "linkDirection": {
                                          "type": "string",
                                          "description": "Description of a Direction of Connection link."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "directions": {
                        "type": "array",
                        "description": "Directions affected by the Situation.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "directionRef": {
                              "type": "string",
                              "description": "Identifier of Direction."
                            },
                            "directionName": {
                              "type": "string",
                              "description": "Name of Direction."
                            }
                          }
                        }
                      },
                      "routes": {
                        "type": "array",
                        "description": "Routes affected by the Situation.",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to a Route",
                          "properties": {
                            "routeRef": {
                              "type": "string",
                              "description": "Reference to a ROUTE affected by SITUATION."
                            },
                            "directions": {
                              "type": "array",
                              "description": "Directions affected by the Situation.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "directionRef": {
                                    "type": "string",
                                    "description": "Identifier of Direction."
                                  },
                                  "directionName": {
                                    "type": "string",
                                    "description": "Name of Direction."
                                  }
                                }
                              }
                            },
                            "routeLinks": {
                              "type": "array",
                              "description": "Route Links affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Reference to a Route Link.",
                                "properties": {
                                  "routeLinkRef": {
                                    "type": "string",
                                    "description": "Identifier of a Route Link."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "vehicleMode": {
                        "type": "string",
                        "enum": [
                          "unknown",
                          "railwayService",
                          "coachService",
                          "suburbanRailwayService",
                          "urbanRailwayService",
                          "metroService",
                          "undergroundService",
                          "busService",
                          "trolleyBusService",
                          "tramService",
                          "waterTransportService",
                          "airService",
                          "ferryService",
                          "telecabinService",
                          "funicularService",
                          "taxiService",
                          "selfDrive"
                        ],
                        "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                      }
                    }
                  }
                },
                "vehicleJourneys": {
                  "type": "array",
                  "description": "Vehicle Journeys scope.",
                  "items": {
                    "type": "object",
                    "description": "Information about the Vehicle Journeys affected by the situation.",
                    "properties": {
                      "vehicleJourneyRef": {
                        "type": "string",
                        "description": "Reference to a service Vehicle Journey affected by a Situation."
                      },
                      "datedVehicleJourneyRef": {
                        "type": "string",
                        "description": "Reference to a specific Dated Vehicle Journey affected by a Situation."
                      },
                      "journeyName": {
                        "type": "string",
                        "description": "Name of journey affected by a Situation."
                      },
                      "operator": {
                        "type": "object",
                        "description": "Annotated Reference to Operator & Unit.",
                        "properties": {
                          "operatorRef": {
                            "type": "string",
                            "description": "Identifier of Operator."
                          },
                          "operatorName": {
                            "type": "string",
                            "description": "Name of Operator."
                          },
                          "operatorShortName": {
                            "type": "string",
                            "description": "ShortName for Operator."
                          },
                          "operationalUnitRef": {
                            "type": "string",
                            "description": "Identifier of Operational unit responsible for managing services."
                          }
                        }
                      },
                      "lineRef": {
                        "type": "string",
                        "description": "Reference to the Line of the Journey affected by a Situation."
                      },
                      "publishedLineName": {
                        "type": "string",
                        "description": "Public Number or Name of the Line."
                      },
                      "directionRef": {
                        "type": "string",
                        "description": "Direction of Line in which Journey runs."
                      },
                      "blockRef": {
                        "type": "string",
                        "description": "Block which Journey runs."
                      },
                      "trainNumbers": {
                        "type": "array",
                        "description": "Train Numbers for Journey.",
                        "items": {
                          "type": "string",
                          "description": "Train Number assigned to Vehicle Journey."
                        }
                      },
                      "origins": {
                        "type": "array",
                        "description": "Origin Stop Points from which the Line runs.",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to Stop Point",
                          "properties": {
                            "stopPointRef": {
                              "type": "string",
                              "description": "Identifier of Stop Point."
                            },
                            "stopPointName": {
                              "type": "string",
                              "description": "Name of Stop Point."
                            },
                            "location": {
                              "type": "object",
                              "description": "Point Projection to use for stop point.",
                              "properties": {
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                },
                                "precision": {
                                  "type": "number",
                                  "description": "Precision for point measurement. In meters."
                                }
                              }
                            },
                            "affectedModes": {
                              "type": "array",
                              "description": "Affected transport modes for the Stop Point",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "railwayService",
                                  "coachService",
                                  "suburbanRailwayService",
                                  "urbanRailwayService",
                                  "metroService",
                                  "undergroundService",
                                  "busService",
                                  "trolleyBusService",
                                  "tramService",
                                  "waterTransportService",
                                  "airService",
                                  "ferryService",
                                  "telecabinService",
                                  "funicularService",
                                  "taxiService",
                                  "selfDrive"
                                ],
                                "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                              }
                            },
                            "placeRef": {
                              "type": "string",
                              "description": "Identifier of Place in which Stop lies."
                            },
                            "placeName": {
                              "type": "string",
                              "description": "Name of Stop."
                            },
                            "accessibilityAssessment": {
                              "type": "object",
                              "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                              "properties": {
                                "mobilityImpairedAccess": {
                                  "type": "boolean",
                                  "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                },
                                "limitation": {
                                  "type": "object",
                                  "description": "Limitation of entity.",
                                  "properties": {
                                    "wheelchairAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place is wheelchair accessible."
                                    },
                                    "stepFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has step free access."
                                    },
                                    "escalatorAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has escalator free access."
                                    },
                                    "liftFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has lift free access."
                                    },
                                    "audibleSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has Audible signals for the visually impaired."
                                    },
                                    "visualSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has visual signals for the hearing impaired."
                                    }
                                  }
                                },
                                "suitabilities": {
                                  "type": "array",
                                  "description": "Suitabilities of facility for specific passenger needs.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                    "properties": {
                                      "suitable": {
                                        "type": "string",
                                        "enum": [
                                          "suitable",
                                          "notSuitable",
                                          "unknown"
                                        ],
                                        "description": "Suitability for specified user need."
                                      },
                                      "userNeed": {
                                        "type": "object",
                                        "description": "Only one of the following",
                                        "properties": {
                                          "mobilityNeed": {
                                            "type": "string",
                                            "enum": [
                                              "wheelchair",
                                              "motorizedWheelchair",
                                              "walkingFrame",
                                              "restrictedMobility",
                                              "otherSpecificNeed"
                                            ],
                                            "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                          },
                                          "medicalNeed": {
                                            "type": "string",
                                            "enum": [
                                              "allergic",
                                              "heartCondition"
                                            ],
                                            "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                          },
                                          "psychoSensoryNeed": {
                                            "type": "string",
                                            "enum": [
                                              "visualImpairment",
                                              "auditoryImpairment",
                                              "cognitiveImpairment",
                                              "averseToLifts",
                                              "averseToEscalators",
                                              "averseToConfinedSpaces",
                                              "averseToCrowds",
                                              "otherSensoryNeed"
                                            ],
                                            "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                          },
                                          "encumbranceNeed": {
                                            "type": "string",
                                            "enum": [
                                              "luggageEncumbered",
                                              "pushchair",
                                              "baggageTrolley",
                                              "oversizeBaggage",
                                              "guideDog",
                                              "otherAnimal",
                                              "otherEncumbrance"
                                            ],
                                            "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "connectionLinks": {
                              "type": "array",
                              "description": "Connection links affected by Situation.",
                              "items": {
                                "type": "object",
                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                "properties": {
                                  "connectionLinkRef": {
                                    "type": "string",
                                    "description": "Reference to a Connection link affected by a Situation."
                                  },
                                  "connectionName": {
                                    "type": "string",
                                    "description": "Name of a Connection link affected by a Situation."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "lines": {
                                    "type": "array",
                                    "description": "Lines to which link connects.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "lineRef": {
                                          "type": "string",
                                          "description": "Reference to a Line."
                                        }
                                      }
                                    }
                                  },
                                  "connectingStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of connecting Stop Point."
                                  },
                                  "connectingStopPointName": {
                                    "type": "string",
                                    "description": "Name of connecting Stop Point."
                                  },
                                  "connectionDirection": {
                                    "type": "string",
                                    "enum": [
                                      "from",
                                      "to",
                                      "both"
                                    ],
                                    "default": "both",
                                    "description": "Direction of connection. Default is both."
                                  },
                                  "affectedPathLinks": {
                                    "type": "array",
                                    "description": "Path Links affected by a Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "linkRef": {
                                          "type": "string",
                                          "description": "Identifier of Connection link."
                                        },
                                        "linkName": {
                                          "type": "string",
                                          "description": "Name of Connection link."
                                        },
                                        "accessibilityFeature": {
                                          "type": "string",
                                          "enum": [
                                            "lift",
                                            "stairs",
                                            "seriesOfStairs",
                                            "escalator",
                                            "travelator",
                                            "ramp",
                                            "shuttle",
                                            "barrier",
                                            "narrowEntrance",
                                            "confinedSpace",
                                            "queueManagement",
                                            "none",
                                            "unknown",
                                            "other"
                                          ],
                                          "description": "Nature of Connection link."
                                        },
                                        "linkDirection": {
                                          "type": "string",
                                          "description": "Description of a Direction of Connection link."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "destinations": {
                        "type": "array",
                        "description": "Destination Stop Points to which the Line runs.",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to Stop Point",
                          "properties": {
                            "stopPointRef": {
                              "type": "string",
                              "description": "Identifier of Stop Point."
                            },
                            "stopPointName": {
                              "type": "string",
                              "description": "Name of Stop Point."
                            },
                            "location": {
                              "type": "object",
                              "description": "Point Projection to use for stop point.",
                              "properties": {
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                },
                                "precision": {
                                  "type": "number",
                                  "description": "Precision for point measurement. In meters."
                                }
                              }
                            },
                            "affectedModes": {
                              "type": "array",
                              "description": "Affected transport modes for the Stop Point",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "railwayService",
                                  "coachService",
                                  "suburbanRailwayService",
                                  "urbanRailwayService",
                                  "metroService",
                                  "undergroundService",
                                  "busService",
                                  "trolleyBusService",
                                  "tramService",
                                  "waterTransportService",
                                  "airService",
                                  "ferryService",
                                  "telecabinService",
                                  "funicularService",
                                  "taxiService",
                                  "selfDrive"
                                ],
                                "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                              }
                            },
                            "placeRef": {
                              "type": "string",
                              "description": "Identifier of Place in which Stop lies."
                            },
                            "placeName": {
                              "type": "string",
                              "description": "Name of Stop."
                            },
                            "accessibilityAssessment": {
                              "type": "object",
                              "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                              "properties": {
                                "mobilityImpairedAccess": {
                                  "type": "boolean",
                                  "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                },
                                "limitation": {
                                  "type": "object",
                                  "description": "Limitation of entity.",
                                  "properties": {
                                    "wheelchairAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place is wheelchair accessible."
                                    },
                                    "stepFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has step free access."
                                    },
                                    "escalatorAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has escalator free access."
                                    },
                                    "liftFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has lift free access."
                                    },
                                    "audibleSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has Audible signals for the visually impaired."
                                    },
                                    "visualSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has visual signals for the hearing impaired."
                                    }
                                  }
                                },
                                "suitabilities": {
                                  "type": "array",
                                  "description": "Suitabilities of facility for specific passenger needs.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                    "properties": {
                                      "suitable": {
                                        "type": "string",
                                        "enum": [
                                          "suitable",
                                          "notSuitable",
                                          "unknown"
                                        ],
                                        "description": "Suitability for specified user need."
                                      },
                                      "userNeed": {
                                        "type": "object",
                                        "description": "Only one of the following",
                                        "properties": {
                                          "mobilityNeed": {
                                            "type": "string",
                                            "enum": [
                                              "wheelchair",
                                              "motorizedWheelchair",
                                              "walkingFrame",
                                              "restrictedMobility",
                                              "otherSpecificNeed"
                                            ],
                                            "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                          },
                                          "medicalNeed": {
                                            "type": "string",
                                            "enum": [
                                              "allergic",
                                              "heartCondition"
                                            ],
                                            "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                          },
                                          "psychoSensoryNeed": {
                                            "type": "string",
                                            "enum": [
                                              "visualImpairment",
                                              "auditoryImpairment",
                                              "cognitiveImpairment",
                                              "averseToLifts",
                                              "averseToEscalators",
                                              "averseToConfinedSpaces",
                                              "averseToCrowds",
                                              "otherSensoryNeed"
                                            ],
                                            "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                          },
                                          "encumbranceNeed": {
                                            "type": "string",
                                            "enum": [
                                              "luggageEncumbered",
                                              "pushchair",
                                              "baggageTrolley",
                                              "oversizeBaggage",
                                              "guideDog",
                                              "otherAnimal",
                                              "otherEncumbrance"
                                            ],
                                            "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "connectionLinks": {
                              "type": "array",
                              "description": "Connection links affected by Situation.",
                              "items": {
                                "type": "object",
                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                "properties": {
                                  "connectionLinkRef": {
                                    "type": "string",
                                    "description": "Reference to a Connection link affected by a Situation."
                                  },
                                  "connectionName": {
                                    "type": "string",
                                    "description": "Name of a Connection link affected by a Situation."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "lines": {
                                    "type": "array",
                                    "description": "Lines to which link connects.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "lineRef": {
                                          "type": "string",
                                          "description": "Reference to a Line."
                                        }
                                      }
                                    }
                                  },
                                  "connectingStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of connecting Stop Point."
                                  },
                                  "connectingStopPointName": {
                                    "type": "string",
                                    "description": "Name of connecting Stop Point."
                                  },
                                  "connectionDirection": {
                                    "type": "string",
                                    "enum": [
                                      "from",
                                      "to",
                                      "both"
                                    ],
                                    "default": "both",
                                    "description": "Direction of connection. Default is both."
                                  },
                                  "affectedPathLinks": {
                                    "type": "array",
                                    "description": "Path Links affected by a Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "linkRef": {
                                          "type": "string",
                                          "description": "Identifier of Connection link."
                                        },
                                        "linkName": {
                                          "type": "string",
                                          "description": "Name of Connection link."
                                        },
                                        "accessibilityFeature": {
                                          "type": "string",
                                          "enum": [
                                            "lift",
                                            "stairs",
                                            "seriesOfStairs",
                                            "escalator",
                                            "travelator",
                                            "ramp",
                                            "shuttle",
                                            "barrier",
                                            "narrowEntrance",
                                            "confinedSpace",
                                            "queueManagement",
                                            "none",
                                            "unknown",
                                            "other"
                                          ],
                                          "description": "Nature of Connection link."
                                        },
                                        "linkDirection": {
                                          "type": "string",
                                          "description": "Description of a Direction of Connection link."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "route": {
                        "type": "object",
                        "description": "Annotated Reference to a Route",
                        "properties": {
                          "routeRef": {
                            "type": "string",
                            "description": "Reference to a ROUTE affected by SITUATION."
                          },
                          "directions": {
                            "type": "array",
                            "description": "Directions affected by the Situation.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "directionRef": {
                                  "type": "string",
                                  "description": "Identifier of Direction."
                                },
                                "directionName": {
                                  "type": "string",
                                  "description": "Name of Direction."
                                }
                              }
                            }
                          },
                          "routeLinks": {
                            "type": "array",
                            "description": "Route Links affected by the Situation.",
                            "items": {
                              "type": "object",
                              "description": "Reference to a Route Link.",
                              "properties": {
                                "routeLinkRef": {
                                  "type": "string",
                                  "description": "Identifier of a Route Link."
                                }
                              }
                            }
                          }
                        }
                      },
                      "originAimedDepartureTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timetabled departure time of Journey from Origin."
                      },
                      "destinationAimedArrivalTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Timetabled arrival time of journey at Destination."
                      },
                      "accessibilityAssessment": {
                        "type": "object",
                        "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                        "properties": {
                          "mobilityImpairedAccess": {
                            "type": "boolean",
                            "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                          },
                          "limitation": {
                            "type": "object",
                            "description": "Limitation of entity.",
                            "properties": {
                              "wheelchairAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place is wheelchair accessible."
                              },
                              "stepFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has step free access."
                              },
                              "escalatorAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has escalator free access."
                              },
                              "liftFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has lift free access."
                              },
                              "audibleSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has Audible signals for the visually impaired."
                              },
                              "visualSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has visual signals for the hearing impaired."
                              }
                            }
                          },
                          "suitabilities": {
                            "type": "array",
                            "description": "Suitabilities of facility for specific passenger needs.",
                            "items": {
                              "type": "object",
                              "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                              "properties": {
                                "suitable": {
                                  "type": "string",
                                  "enum": [
                                    "suitable",
                                    "notSuitable",
                                    "unknown"
                                  ],
                                  "description": "Suitability for specified user need."
                                },
                                "userNeed": {
                                  "type": "object",
                                  "description": "Only one of the following",
                                  "properties": {
                                    "mobilityNeed": {
                                      "type": "string",
                                      "enum": [
                                        "wheelchair",
                                        "motorizedWheelchair",
                                        "walkingFrame",
                                        "restrictedMobility",
                                        "otherSpecificNeed"
                                      ],
                                      "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                    },
                                    "medicalNeed": {
                                      "type": "string",
                                      "enum": [
                                        "allergic",
                                        "heartCondition"
                                      ],
                                      "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                    },
                                    "psychoSensoryNeed": {
                                      "type": "string",
                                      "enum": [
                                        "visualImpairment",
                                        "auditoryImpairment",
                                        "cognitiveImpairment",
                                        "averseToLifts",
                                        "averseToEscalators",
                                        "averseToConfinedSpaces",
                                        "averseToCrowds",
                                        "otherSensoryNeed"
                                      ],
                                      "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                    },
                                    "encumbranceNeed": {
                                      "type": "string",
                                      "enum": [
                                        "luggageEncumbered",
                                        "pushchair",
                                        "baggageTrolley",
                                        "oversizeBaggage",
                                        "guideDog",
                                        "otherAnimal",
                                        "otherEncumbrance"
                                      ],
                                      "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "journeyConditions": {
                        "type": "array",
                        "description": "Status of service for the Vehicle Journey. Multiple Condtions can be valid at the same time.",
                        "items": {
                          "type": "string",
                          "enum": [
                            "unknown",
                            "altered",
                            "cancelled",
                            "delayed",
                            "diverted",
                            "noService",
                            "disrupted",
                            "additionalService",
                            "specialService",
                            "onTime",
                            "normalService",
                            "intermittentService",
                            "shortFormedService",
                            "fullLengthService",
                            "extendedService",
                            "splittingTrain",
                            "replacementTransport",
                            "arrivesEarly",
                            "shuttleService",
                            "replacementService",
                            "undefinedServiceInformation"
                          ],
                          "description": "Values for Service Condition. Corresponds to TPEG Pti13 Service Condition values:\n  * unknown - Unknown (pti13_0)\n  * altered - Altered (pti13_1)\n  * cancelled - Cancelled (pti13_2)\n  * delayed - Delayed (pti13_3)\n  * diverted - Diverted (pti13_4)\n  * noService - No Service (pti13_5)\n  * disrupted - Disrupted (pti13_6)\n  * additionalService - Additional Service (pti13_7)\n  * specialService - Special Service (pti13_8)\n  * onTime - On Time (pti13_9)\n  * normalService - Normal Service (pti13_10)\n  * intermittentService - Intermittent Service (pti13_11)\n  * shortFormedService - Short Formed Service (pti13_12)\n  * fullLengthService - Full Length Service (pti13_13)\n  * extendedService - Extended Service (pti13_14)\n  * splittingTrain - Splitting Train (pti13_15)\n  * replacementTransport - Replacement Transport (pti13_16)\n  * arrivesEarly - Arrives Early (pti13_17)\n  * shuttleService - Shuttle Service (pti13_18)\n  * replacementService - Replacement Service (pti13_19)\n  * undefinedServiceInformation - Undefined Service Information (pti13_255)"
                        }
                      },
                      "calls": {
                        "type": "array",
                        "description": "Scope within Journey.",
                        "items": {
                          "type": "object",
                          "description": "Information about a Call affected by a Situation.",
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Annotated Reference to Stop Point",
                              "properties": {
                                "stopPointRef": {
                                  "type": "string",
                                  "description": "Identifier of Stop Point."
                                },
                                "stopPointName": {
                                  "type": "string",
                                  "description": "Name of Stop Point."
                                },
                                "location": {
                                  "type": "object",
                                  "description": "Point Projection to use for stop point.",
                                  "properties": {
                                    "latitude": {
                                      "type": "number",
                                      "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                    },
                                    "precision": {
                                      "type": "number",
                                      "description": "Precision for point measurement. In meters."
                                    }
                                  }
                                },
                                "affectedModes": {
                                  "type": "array",
                                  "description": "Affected transport modes for the Stop Point",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "unknown",
                                      "railwayService",
                                      "coachService",
                                      "suburbanRailwayService",
                                      "urbanRailwayService",
                                      "metroService",
                                      "undergroundService",
                                      "busService",
                                      "trolleyBusService",
                                      "tramService",
                                      "waterTransportService",
                                      "airService",
                                      "ferryService",
                                      "telecabinService",
                                      "funicularService",
                                      "taxiService",
                                      "selfDrive"
                                    ],
                                    "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                  }
                                },
                                "placeRef": {
                                  "type": "string",
                                  "description": "Identifier of Place in which Stop lies."
                                },
                                "placeName": {
                                  "type": "string",
                                  "description": "Name of Stop."
                                },
                                "accessibilityAssessment": {
                                  "type": "object",
                                  "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                  "properties": {
                                    "mobilityImpairedAccess": {
                                      "type": "boolean",
                                      "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                    },
                                    "limitation": {
                                      "type": "object",
                                      "description": "Limitation of entity.",
                                      "properties": {
                                        "wheelchairAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place is wheelchair accessible."
                                        },
                                        "stepFreeAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has step free access."
                                        },
                                        "escalatorAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has escalator free access."
                                        },
                                        "liftFreeAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has lift free access."
                                        },
                                        "audibleSignsAvailable": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has Audible signals for the visually impaired."
                                        },
                                        "visualSignsAvailable": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has visual signals for the hearing impaired."
                                        }
                                      }
                                    },
                                    "suitabilities": {
                                      "type": "array",
                                      "description": "Suitabilities of facility for specific passenger needs.",
                                      "items": {
                                        "type": "object",
                                        "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                        "properties": {
                                          "suitable": {
                                            "type": "string",
                                            "enum": [
                                              "suitable",
                                              "notSuitable",
                                              "unknown"
                                            ],
                                            "description": "Suitability for specified user need."
                                          },
                                          "userNeed": {
                                            "type": "object",
                                            "description": "Only one of the following",
                                            "properties": {
                                              "mobilityNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "wheelchair",
                                                  "motorizedWheelchair",
                                                  "walkingFrame",
                                                  "restrictedMobility",
                                                  "otherSpecificNeed"
                                                ],
                                                "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                              },
                                              "medicalNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "allergic",
                                                  "heartCondition"
                                                ],
                                                "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                              },
                                              "psychoSensoryNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "visualImpairment",
                                                  "auditoryImpairment",
                                                  "cognitiveImpairment",
                                                  "averseToLifts",
                                                  "averseToEscalators",
                                                  "averseToConfinedSpaces",
                                                  "averseToCrowds",
                                                  "otherSensoryNeed"
                                                ],
                                                "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                              },
                                              "encumbranceNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "luggageEncumbered",
                                                  "pushchair",
                                                  "baggageTrolley",
                                                  "oversizeBaggage",
                                                  "guideDog",
                                                  "otherAnimal",
                                                  "otherEncumbrance"
                                                ],
                                                "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "connectionLinks": {
                                  "type": "array",
                                  "description": "Connection links affected by Situation.",
                                  "items": {
                                    "type": "object",
                                    "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                    "properties": {
                                      "connectionLinkRef": {
                                        "type": "string",
                                        "description": "Reference to a Connection link affected by a Situation."
                                      },
                                      "connectionName": {
                                        "type": "string",
                                        "description": "Name of a Connection link affected by a Situation."
                                      },
                                      "location": {
                                        "type": "object",
                                        "description": "Point Projection to use for stop point.",
                                        "properties": {
                                          "latitude": {
                                            "type": "number",
                                            "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                          },
                                          "longitude": {
                                            "type": "number",
                                            "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                          },
                                          "precision": {
                                            "type": "number",
                                            "description": "Precision for point measurement. In meters."
                                          }
                                        }
                                      },
                                      "lines": {
                                        "type": "array",
                                        "description": "Lines to which link connects.",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "lineRef": {
                                              "type": "string",
                                              "description": "Reference to a Line."
                                            }
                                          }
                                        }
                                      },
                                      "connectingStopPointRef": {
                                        "type": "string",
                                        "description": "Identifier of connecting Stop Point."
                                      },
                                      "connectingStopPointName": {
                                        "type": "string",
                                        "description": "Name of connecting Stop Point."
                                      },
                                      "connectionDirection": {
                                        "type": "string",
                                        "enum": [
                                          "from",
                                          "to",
                                          "both"
                                        ],
                                        "default": "both",
                                        "description": "Direction of connection. Default is both."
                                      },
                                      "affectedPathLinks": {
                                        "type": "array",
                                        "description": "Path Links affected by a Situation.",
                                        "items": {
                                          "type": "object",
                                          "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                          "properties": {
                                            "linkRef": {
                                              "type": "string",
                                              "description": "Identifier of Connection link."
                                            },
                                            "linkName": {
                                              "type": "string",
                                              "description": "Name of Connection link."
                                            },
                                            "accessibilityFeature": {
                                              "type": "string",
                                              "enum": [
                                                "lift",
                                                "stairs",
                                                "seriesOfStairs",
                                                "escalator",
                                                "travelator",
                                                "ramp",
                                                "shuttle",
                                                "barrier",
                                                "narrowEntrance",
                                                "confinedSpace",
                                                "queueManagement",
                                                "none",
                                                "unknown",
                                                "other"
                                              ],
                                              "description": "Nature of Connection link."
                                            },
                                            "linkDirection": {
                                              "type": "string",
                                              "description": "Description of a Direction of Connection link."
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Real-time Call properties.",
                              "properties": {
                                "vehicleAtStop": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "Whether Vehicle is currently at stop. Default is false."
                                },
                                "vehicleLocationAtStop": {
                                  "type": "object",
                                  "description": "Point Projection to use for stop point.",
                                  "properties": {
                                    "latitude": {
                                      "type": "number",
                                      "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                    },
                                    "longitude": {
                                      "type": "number",
                                      "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                    },
                                    "precision": {
                                      "type": "number",
                                      "description": "Precision for point measurement. In meters."
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Elements describing Call properties. Values for these elements can be specified on an production Vehicle Journey Call. Each real-time Journey Call takes its values from the corresponding Dated Vehicle Journey Call. The absence of a value on an real-time Call indicates that the value should be inherited (i) from any recent preceding update message for the same entity, or if there is no previous override,  (ii) from its immediate parent entity.",
                              "properties": {
                                "timingPoint": {
                                  "type": "boolean",
                                  "default": true,
                                  "description": "Whether the stop is a TIMING POINT. Times for stops that are not timing points are sometimes interpolated crudely from the timing points, and may represent a lower level of accuracy. Default is 'true'."
                                },
                                "boardingStretch": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "Whether this is a Hail and Ride Stop. Default is 'false'."
                                },
                                "requestStop": {
                                  "type": "boolean",
                                  "default": false,
                                  "description": "Whether Vehicle stops only if requested explicitly by passenger. Default is 'false'."
                                },
                                "originDisplay": {
                                  "type": "string",
                                  "description": "Origin to show for the Vehicle at the specific stop (vehicle signage), if different to the Origin Name for the full journey."
                                },
                                "destinationdisplay": {
                                  "type": "string",
                                  "description": "Destination to show for the VEHICLE at the specific stop (vehicle signage), if different to the Destination Name for the full journey."
                                }
                              }
                            },
                            {
                              "type": "object",
                              "description": "Elements describing the arrival of a Vehicle at a Stop Point.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "description": "Arrival times for Call.",
                                  "properties": {
                                    "aimedArrivalTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Target arrival time of Vehicle according to latest working timetable."
                                    },
                                    "actualArrivalTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Observed time of arrival of Vehicle."
                                    },
                                    "expectedArrivalTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Estimated time of arrival of Vehicle."
                                    }
                                  }
                                },
                                {
                                  "properties": {
                                    "arrivalStatus": {
                                      "type": "string",
                                      "enum": [
                                        "onTime",
                                        "early",
                                        "delayed",
                                        "cancelled",
                                        "arrived",
                                        "departed",
                                        "missed",
                                        "noReport",
                                        "notExpected"
                                      ],
                                      "description": "Classification of the timeliness of the Call, according to a fixed list of values. This may reflect a presentation policy, for example Calls less than one minute behind target time are still classified as on-time. Applications may use this to guide their own presentation of times. Allowed values:\n  * onTime - Service is on time.\n  * early - Service is earlier than expected.\n  * delayed - Service is delayed.\n  * cancelled - Service is cancelled.\n  * arrived - Service has arrived.\n  * departed - Service has departed.\n  * missed - Stop has been missed out but service is not cancelled.\n  * noReport - There is no information about the service.\n  * notExpected - Service is not expected to call this stop. For instance a flexible service that has not yet been preordered."
                                    },
                                    "arrivalPlatformName": {
                                      "type": "string",
                                      "description": "Bay or platform name. Inheritable property. Can be omitted if the same as the DeparturePlatformName If there is no arrival platform name separate from the departure platform name, the precedence is (i) any arrival platform on any related dated timetable element, (ii) any departure platform name on this estimated element; (iii) any departure platform name on any related dated timetable Call."
                                    },
                                    "arrivalBoardingActivity": {
                                      "type": "string",
                                      "enum": [
                                        "alighting",
                                        "noAlighting",
                                        "passThru"
                                      ],
                                      "default": "alighting",
                                      "description": "Type of boarding and alighting allowed at stop. Default is 'alighting'. Allowed values:\n  * alighting - Passengers may alight.\n  * noAlighting - Passengers may not alight.\n  * passThru - Vehicle does not stop."
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "description": "Elements describing the the departure of a Vehicle from a Stop Point.",
                              "allOf": [
                                {
                                  "type": "object",
                                  "description": "Departure times for Call.",
                                  "properties": {
                                    "aimedDepartureTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Target departure time of Vehicle according to latest working timetable."
                                    },
                                    "actualDepartureTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Observed time of departure of Vehicle from Stop."
                                    },
                                    "expectedDepartureTime": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Estimated time of departure of Vehicle from stop. May include waiting time. For people on a Vehicle this is the time that would normally be shown."
                                    }
                                  }
                                },
                                {
                                  "properties": {
                                    "departureStatus": {
                                      "type": "string",
                                      "enum": [
                                        "onTime",
                                        "early",
                                        "delayed",
                                        "cancelled",
                                        "arrived",
                                        "departed",
                                        "missed",
                                        "noReport",
                                        "notExpected"
                                      ],
                                      "description": "Classification of the timeliness of the Call, according to a fixed list of values. This may reflect a presentation policy, for example Calls less than one minute behind target time are still classified as on-time. Applications may use this to guide their own presentation of times. Allowed values:\n  * onTime - Service is on time.\n  * early - Service is earlier than expected.\n  * delayed - Service is delayed.\n  * cancelled - Service is cancelled.\n  * arrived - Service has arrived.\n  * departed - Service has departed.\n  * missed - Stop has been missed out but service is not cancelled.\n  * noReport - There is no information about the service.\n  * notExpected - Service is not expected to call this stop. For instance a flexible service that has not yet been preordered."
                                    },
                                    "departurePlatformName": {
                                      "type": "string",
                                      "description": "Departure Quay (Bay or Platform) name. Inheritable property."
                                    },
                                    "departureBoardingActivity": {
                                      "type": "string",
                                      "enum": [
                                        "boarding",
                                        "noBoarding",
                                        "passThru"
                                      ],
                                      "default": "boarding",
                                      "description": "Nature of boarding allowed at stop. Default is 'boarding'. Allowed values:\n  * boarding - Passengers may board.\n  * noBoarding - Passengers may not board.\n  * passThru - Vehicle does not stop."
                                    }
                                  }
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "description": "Elements describing the Headway Intervals.",
                              "properties": {
                                "aimedHeadwayInterval": {
                                  "type": "string",
                                  "format": "duration",
                                  "description": "For frequency based services, target interval between vehicles at stop. Duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations). Milliseconds should not be used. Must be positive. e.g. 'PT5M'"
                                },
                                "expectedHeadwayInterval": {
                                  "type": "string",
                                  "format": "duration",
                                  "description": "For frequency based services, expected interval between vehicles at stop. Duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations). Milliseconds should not be used. Must be positive. e.g. 'PT5M'"
                                }
                              }
                            },
                            {
                              "properties": {
                                "order": {
                                  "type": "integer",
                                  "minimum": 1,
                                  "description": "Order of visit to Stop within Journey Pattern of Journey."
                                },
                                "callCondition": {
                                  "type": "string",
                                  "enum": [
                                    "unknown",
                                    "startPoint",
                                    "destination",
                                    "stop",
                                    "via",
                                    "notStopping",
                                    "temporaryStop",
                                    "temporarilyNotStopping",
                                    "exceptionalStop",
                                    "additionalStop",
                                    "requestStop",
                                    "frontTrainDestination",
                                    "rearTrainDestination",
                                    "throughServiceDestination",
                                    "notVia",
                                    "alteredStartPoint",
                                    "alteredDestination",
                                    "undefinedRoutePoint"
                                  ],
                                  "description": "Values fo Route Point Type. Corresponds to TPEG Pti15 Route Point Type values:\n  * unknown - Unknown (pti15_0)\n  * startPoint - Start Point (pti15_1)\n  * destination - Destination (pti15_2)\n  * stop - Stop (pti15_3)\n  * via - Via (pti15_4)\n  * notStopping - Not Stopping (pti15_5)\n  * temporaryStop - Temporary Stop (pti15_6)\n  * temporarilyNotStopping - Temporarily Not Stopping (pti15_7)\n  * exceptionalStop - Exceptional Stop (pti15_8)\n  * additionalStop - Additional Stop (pti15_9)\n  * requestStop - Request Stop (pti15_10)\n  * frontTrainDestination - Front Train Destination (pti15_11)\n  * rearTrainDestination - Rear Train Destination (pti15_12)\n  * throughServiceDestination - Through Service Destination (pti15_13)\n  * notVia - Not Via (pti15_14)\n  * alteredStartPoint - Altered Start Point (pti15_15)\n  * alteredDestination - Altered Destination (pti15_16)\n  * undefinedRoutePoint - Undefined Route Point (pti15_255)"
                                },
                                "affectedInterchanges": {
                                  "type": "array",
                                  "description": "Journey Interchanges affected by Situation",
                                  "items": {
                                    "type": "object",
                                    "description": "Information about a Service Journey Interchange at Connection link from a given Stop Point.",
                                    "properties": {
                                      "interchangeRef": {
                                        "type": "string",
                                        "description": "Reference to a Service Journey Interchange affected by a Situation."
                                      },
                                      "interchangeStopPointRef": {
                                        "type": "string",
                                        "description": "Identifier of Stop Point at which Vehicle Journey meets for Interchange. If blank, same stop as destination."
                                      },
                                      "interchangeStopPointName": {
                                        "type": "string",
                                        "description": "Name of Interchange Stop Point."
                                      },
                                      "connectingVehicleJourneyRef": {
                                        "type": "string",
                                        "description": "Reference to connecting Vehicle Journey affected by a Situation."
                                      },
                                      "interchangeStatusType": {
                                        "type": "string",
                                        "enum": [
                                          "unknown",
                                          "connection",
                                          "replacement",
                                          "alternative",
                                          "connectionNotHeld",
                                          "connectionHeld",
                                          "statusOfConenctionUndecided",
                                          "undefinedCrossReferenceInformation"
                                        ],
                                        "description": "Status of a Service Journey Interchange. Coresponds to TPEG pti31 cross reference type values:\n  * unknown - Unknown (pti31_0)\n  * connection - Connection (pti31_1)\n  * replacement - Replacement (pti31_2)\n  * alternative - Alternative (pti31_3)\n  * connectionNotHeld - Connection not held (pti31_4)\n  * connectionHeld - Connection held (pti31_5)\n  * statusOfConenctionUndecided - Status of connection undecided (pti31_6)\n  * undefinedCrossReferenceInformation - Undefined cross reference information (pti31_255)"
                                      },
                                      "connectionLinks": {
                                        "type": "array",
                                        "description": "Connection Links affected by a Situation",
                                        "items": {
                                          "type": "object",
                                          "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                          "properties": {
                                            "connectionLinkRef": {
                                              "type": "string",
                                              "description": "Reference to a Connection link affected by a Situation."
                                            },
                                            "connectionName": {
                                              "type": "string",
                                              "description": "Name of a Connection link affected by a Situation."
                                            },
                                            "location": {
                                              "type": "object",
                                              "description": "Point Projection to use for stop point.",
                                              "properties": {
                                                "latitude": {
                                                  "type": "number",
                                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                                },
                                                "longitude": {
                                                  "type": "number",
                                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                                },
                                                "precision": {
                                                  "type": "number",
                                                  "description": "Precision for point measurement. In meters."
                                                }
                                              }
                                            },
                                            "lines": {
                                              "type": "array",
                                              "description": "Lines to which link connects.",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "lineRef": {
                                                    "type": "string",
                                                    "description": "Reference to a Line."
                                                  }
                                                }
                                              }
                                            },
                                            "connectingStopPointRef": {
                                              "type": "string",
                                              "description": "Identifier of connecting Stop Point."
                                            },
                                            "connectingStopPointName": {
                                              "type": "string",
                                              "description": "Name of connecting Stop Point."
                                            },
                                            "connectionDirection": {
                                              "type": "string",
                                              "enum": [
                                                "from",
                                                "to",
                                                "both"
                                              ],
                                              "default": "both",
                                              "description": "Direction of connection. Default is both."
                                            },
                                            "affectedPathLinks": {
                                              "type": "array",
                                              "description": "Path Links affected by a Situation.",
                                              "items": {
                                                "type": "object",
                                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                                "properties": {
                                                  "linkRef": {
                                                    "type": "string",
                                                    "description": "Identifier of Connection link."
                                                  },
                                                  "linkName": {
                                                    "type": "string",
                                                    "description": "Name of Connection link."
                                                  },
                                                  "accessibilityFeature": {
                                                    "type": "string",
                                                    "enum": [
                                                      "lift",
                                                      "stairs",
                                                      "seriesOfStairs",
                                                      "escalator",
                                                      "travelator",
                                                      "ramp",
                                                      "shuttle",
                                                      "barrier",
                                                      "narrowEntrance",
                                                      "confinedSpace",
                                                      "queueManagement",
                                                      "none",
                                                      "unknown",
                                                      "other"
                                                    ],
                                                    "description": "Nature of Connection link."
                                                  },
                                                  "linkDirection": {
                                                    "type": "string",
                                                    "description": "Description of a Direction of Connection link."
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "facilities": {
                        "type": "array",
                        "description": "Facilities available for Vehicle Journey.",
                        "items": {
                          "type": "object",
                          "description": "Type for information about a Facility affected by a Situation.",
                          "properties": {
                            "facilityRef": {
                              "type": "string",
                              "description": "Reference to a Facility."
                            },
                            "startStopPointRef": {
                              "type": "string",
                              "description": "Identifier of stop point at which availability first applies."
                            },
                            "endStopPointRef": {
                              "type": "string",
                              "description": "Identifier of stop point at which availability last applies."
                            },
                            "facilityName": {
                              "type": "string",
                              "description": "Name of facility."
                            },
                            "facilityStatus": {
                              "type": "string",
                              "enum": [
                                "unknown",
                                "available",
                                "notAvailable",
                                "partiallyAvailable",
                                "added",
                                "removed"
                              ],
                              "description": "Allowed values for the status of a Monitored Facility:\n  * unknown - Unknown\n  * available - Available\n  * notAvailable - Not Available\n  * partiallyAvailable - Partially Available\n  * added - Added\n  * removed - Removed"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "stopPlaces": {
                  "type": "array",
                  "description": "Stop Places scope(Empty)",
                  "items": {
                    "type": "object",
                    "description": "Information about the Stop Places affected by a Situation.",
                    "properties": {
                      "accessibilityAssessment": {
                        "type": "object",
                        "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                        "properties": {
                          "mobilityImpairedAccess": {
                            "type": "boolean",
                            "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                          },
                          "limitation": {
                            "type": "object",
                            "description": "Limitation of entity.",
                            "properties": {
                              "wheelchairAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place is wheelchair accessible."
                              },
                              "stepFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has step free access."
                              },
                              "escalatorAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has escalator free access."
                              },
                              "liftFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has lift free access."
                              },
                              "audibleSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has Audible signals for the visually impaired."
                              },
                              "visualSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has visual signals for the hearing impaired."
                              }
                            }
                          },
                          "suitabilities": {
                            "type": "array",
                            "description": "Suitabilities of facility for specific passenger needs.",
                            "items": {
                              "type": "object",
                              "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                              "properties": {
                                "suitable": {
                                  "type": "string",
                                  "enum": [
                                    "suitable",
                                    "notSuitable",
                                    "unknown"
                                  ],
                                  "description": "Suitability for specified user need."
                                },
                                "userNeed": {
                                  "type": "object",
                                  "description": "Only one of the following",
                                  "properties": {
                                    "mobilityNeed": {
                                      "type": "string",
                                      "enum": [
                                        "wheelchair",
                                        "motorizedWheelchair",
                                        "walkingFrame",
                                        "restrictedMobility",
                                        "otherSpecificNeed"
                                      ],
                                      "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                    },
                                    "medicalNeed": {
                                      "type": "string",
                                      "enum": [
                                        "allergic",
                                        "heartCondition"
                                      ],
                                      "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                    },
                                    "psychoSensoryNeed": {
                                      "type": "string",
                                      "enum": [
                                        "visualImpairment",
                                        "auditoryImpairment",
                                        "cognitiveImpairment",
                                        "averseToLifts",
                                        "averseToEscalators",
                                        "averseToConfinedSpaces",
                                        "averseToCrowds",
                                        "otherSensoryNeed"
                                      ],
                                      "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                    },
                                    "encumbranceNeed": {
                                      "type": "string",
                                      "enum": [
                                        "luggageEncumbered",
                                        "pushchair",
                                        "baggageTrolley",
                                        "oversizeBaggage",
                                        "guideDog",
                                        "otherAnimal",
                                        "otherEncumbrance"
                                      ],
                                      "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "stopPlaceRef": {
                        "type": "string",
                        "description": "Identifier of Stop Place affected by the Situation."
                      },
                      "stopPlaceName": {
                        "type": "string",
                        "description": "Name of stop place."
                      },
                      "stopPlaceType": {
                        "type": "string",
                        "enum": [
                          "airport",
                          "railStation",
                          "metroStation",
                          "coachStation",
                          "busStation",
                          "shipPort",
                          "ferryPort",
                          "ferryStop",
                          "onStreetBus",
                          "onStreetTram",
                          "skiLift",
                          "other"
                        ],
                        "description": "Describes the type of the Stop Place. The values are from IFOPT:\n  * airport - Airport\n  * railStation - Rail Station\n  * metroStation - Metro Station\n  * coachStation - Coach Station\n  * busStation - Bus Station\n  * shipPort - Ship Port\n  * ferryPort - Ferry Port\n  * ferryStop - Ferry Stop\n  * onStreetBus - On Street Bus\n  * onStreetTram - On Street Tram\n  * skiLift - Ski Lift\n  * other - Other "
                      },
                      "affectedFacilities": {
                        "type": "array",
                        "description": "Facilities available for Vehicle Journey.",
                        "items": {
                          "type": "object",
                          "description": "Type for information about a Facility affected by a Situation.",
                          "properties": {
                            "facilityRef": {
                              "type": "string",
                              "description": "Reference to a Facility."
                            },
                            "startStopPointRef": {
                              "type": "string",
                              "description": "Identifier of stop point at which availability first applies."
                            },
                            "endStopPointRef": {
                              "type": "string",
                              "description": "Identifier of stop point at which availability last applies."
                            },
                            "facilityName": {
                              "type": "string",
                              "description": "Name of facility."
                            },
                            "facilityStatus": {
                              "type": "string",
                              "enum": [
                                "unknown",
                                "available",
                                "notAvailable",
                                "partiallyAvailable",
                                "added",
                                "removed"
                              ],
                              "description": "Allowed values for the status of a Monitored Facility:\n  * unknown - Unknown\n  * available - Available\n  * notAvailable - Not Available\n  * partiallyAvailable - Partially Available\n  * added - Added\n  * removed - Removed"
                            }
                          }
                        }
                      },
                      "affectedComponents": {
                        "type": "array",
                        "description": "Quays affected by the Situation.",
                        "items": {
                          "type": "object",
                          "description": "Information about the quays affected by the Situation.",
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Defines geospatial data elements for a zone such that it can be projected.",
                              "properties": {
                                "pointProjection": {
                                  "type": "object",
                                  "description": "Geospatial Position of a Point. May be expressed in concrete WGS 84 Coordinates.",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "WGS84 Coordinates.",
                                      "properties": {
                                        "longitude": {
                                          "type": "number",
                                          "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                        },
                                        "latitude": {
                                          "type": "number",
                                          "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                        },
                                        "altitude": {
                                          "type": "number",
                                          "description": "Altitude."
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "features": {
                                          "type": "array",
                                          "description": "GIS Features that this element projects onto.",
                                          "items": {
                                            "type": "string",
                                            "description": "Identifier of a Feature in a GIS data system."
                                          }
                                        },
                                        "precision": {
                                          "type": "number",
                                          "description": "Precision for point measurement. In meters."
                                        }
                                      }
                                    }
                                  ]
                                },
                                "linkProjection": {
                                  "type": "object",
                                  "description": "Projection as a geospatial polyline.",
                                  "properties": {
                                    "features": {
                                      "type": "array",
                                      "description": "GIS Features that this element projects onto.",
                                      "items": {
                                        "type": "string",
                                        "description": "Identifier of a Feature in a GIS data system."
                                      }
                                    },
                                    "line": {
                                      "type": "array",
                                      "minItems": 2,
                                      "description": "Ordered sequence of points. There must always be a start and end point.",
                                      "items": {
                                        "type": "object",
                                        "description": "Geospatial Position of a Point. May be expressed in concrete WGS 84 Coordinates.",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "WGS84 Coordinates.",
                                            "properties": {
                                              "longitude": {
                                                "type": "number",
                                                "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                              },
                                              "latitude": {
                                                "type": "number",
                                                "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                              },
                                              "altitude": {
                                                "type": "number",
                                                "description": "Altitude."
                                              }
                                            }
                                          },
                                          {
                                            "properties": {
                                              "features": {
                                                "type": "array",
                                                "description": "GIS Features that this element projects onto.",
                                                "items": {
                                                  "type": "string",
                                                  "description": "Identifier of a Feature in a GIS data system."
                                                }
                                              },
                                              "precision": {
                                                "type": "number",
                                                "description": "Precision for point measurement. In meters."
                                              }
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "zoneProjection": {
                                  "type": "object",
                                  "description": "Projection as a geospatial zone.",
                                  "properties": {
                                    "features": {
                                      "type": "array",
                                      "description": "GIS Features that this element projects onto.",
                                      "items": {
                                        "type": "string",
                                        "description": "Identifier of a Feature in a GIS data system."
                                      }
                                    },
                                    "boundaries": {
                                      "type": "array",
                                      "description": "Boundary lines of zone",
                                      "items": {
                                        "type": "array",
                                        "minItems": 3,
                                        "description": "Boundary line of Zone as an ordered set of points.",
                                        "items": {
                                          "type": "object",
                                          "description": "Geospatial Position of a Point. May be expressed in concrete WGS 84 Coordinates.",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "description": "WGS84 Coordinates.",
                                              "properties": {
                                                "longitude": {
                                                  "type": "number",
                                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                                },
                                                "latitude": {
                                                  "type": "number",
                                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                                },
                                                "altitude": {
                                                  "type": "number",
                                                  "description": "Altitude."
                                                }
                                              }
                                            },
                                            {
                                              "properties": {
                                                "features": {
                                                  "type": "array",
                                                  "description": "GIS Features that this element projects onto.",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "Identifier of a Feature in a GIS data system."
                                                  }
                                                },
                                                "precision": {
                                                  "type": "number",
                                                  "description": "Precision for point measurement. In meters."
                                                }
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            {
                              "properties": {
                                "accessibilityAssessment": {
                                  "type": "object",
                                  "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                  "properties": {
                                    "mobilityImpairedAccess": {
                                      "type": "boolean",
                                      "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                    },
                                    "limitation": {
                                      "type": "object",
                                      "description": "Limitation of entity.",
                                      "properties": {
                                        "wheelchairAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place is wheelchair accessible."
                                        },
                                        "stepFreeAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has step free access."
                                        },
                                        "escalatorAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has escalator free access."
                                        },
                                        "liftFreeAccess": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has lift free access."
                                        },
                                        "audibleSignsAvailable": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has Audible signals for the visually impaired."
                                        },
                                        "visualSignsAvailable": {
                                          "type": "string",
                                          "enum": [
                                            true,
                                            false,
                                            "unknown"
                                          ],
                                          "description": "Whether a Place has visual signals for the hearing impaired."
                                        }
                                      }
                                    },
                                    "suitabilities": {
                                      "type": "array",
                                      "description": "Suitabilities of facility for specific passenger needs.",
                                      "items": {
                                        "type": "object",
                                        "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                        "properties": {
                                          "suitable": {
                                            "type": "string",
                                            "enum": [
                                              "suitable",
                                              "notSuitable",
                                              "unknown"
                                            ],
                                            "description": "Suitability for specified user need."
                                          },
                                          "userNeed": {
                                            "type": "object",
                                            "description": "Only one of the following",
                                            "properties": {
                                              "mobilityNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "wheelchair",
                                                  "motorizedWheelchair",
                                                  "walkingFrame",
                                                  "restrictedMobility",
                                                  "otherSpecificNeed"
                                                ],
                                                "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                              },
                                              "medicalNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "allergic",
                                                  "heartCondition"
                                                ],
                                                "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                              },
                                              "psychoSensoryNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "visualImpairment",
                                                  "auditoryImpairment",
                                                  "cognitiveImpairment",
                                                  "averseToLifts",
                                                  "averseToEscalators",
                                                  "averseToConfinedSpaces",
                                                  "averseToCrowds",
                                                  "otherSensoryNeed"
                                                ],
                                                "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                              },
                                              "encumbranceNeed": {
                                                "type": "string",
                                                "enum": [
                                                  "luggageEncumbered",
                                                  "pushchair",
                                                  "baggageTrolley",
                                                  "oversizeBaggage",
                                                  "guideDog",
                                                  "otherAnimal",
                                                  "otherEncumbrance"
                                                ],
                                                "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "componentRef": {
                                  "type": "string",
                                  "description": "Reference to a Stop Place Component."
                                },
                                "conponentName": {
                                  "type": "string",
                                  "description": "Name of Component."
                                },
                                "componentType": {
                                  "type": "string",
                                  "enum": [
                                    "quay",
                                    "accessSpace",
                                    "boardingPosition",
                                    "stoppingPlace",
                                    "stoppingPosition",
                                    "entrance",
                                    "stopPathLink",
                                    "accessPathLink",
                                    "other"
                                  ],
                                  "description": "Describes the type of the StopPlaceComponent. The values are from IFOPT:\n  * quay - Quay\n  * accessSpace - Access Space\n  * boardingPosition - Boarding Position\n  * stoppingPlace - Stopping Place\n  * stoppingPosition - Stopping Position\n  * entrance - Entrance\n  * stopPathLink - Stop Path Link\n  * accessPathLink - Access Path Link\n  * other - Other "
                                },
                                "accessFeatureType": {
                                  "type": "string",
                                  "enum": [
                                    "lift",
                                    "escalator",
                                    "travelator",
                                    "ramp",
                                    "stairs",
                                    "shuttle",
                                    "barrier",
                                    "narrowEntrance",
                                    "confinedSpace",
                                    "queueManagement",
                                    "unknown"
                                  ],
                                  "description": "Describes the access feature type of the StopPlaceComponent. The values are from IFOPT:\n  * lift - Lift\n  * escalator - Escalator\n  * travelator - Travelator\n  * ramp - Ramp\n  * stairs - Stairs\n  * shuttle - Shuttle\n  * barrier - Barrier\n  * narrowEntrance - Narrow Entrance\n  * confinedSpace - Confined Space\n  * queueManagement - Queue Management\n  * unknown - Unknown "
                                },
                                "affectedFacilities": {
                                  "type": "array",
                                  "description": "Facilities available for Vehicle Journey.",
                                  "items": {
                                    "type": "object",
                                    "description": "Type for information about a Facility affected by a Situation.",
                                    "properties": {
                                      "facilityRef": {
                                        "type": "string",
                                        "description": "Reference to a Facility."
                                      },
                                      "startStopPointRef": {
                                        "type": "string",
                                        "description": "Identifier of stop point at which availability first applies."
                                      },
                                      "endStopPointRef": {
                                        "type": "string",
                                        "description": "Identifier of stop point at which availability last applies."
                                      },
                                      "facilityName": {
                                        "type": "string",
                                        "description": "Name of facility."
                                      },
                                      "facilityStatus": {
                                        "type": "string",
                                        "enum": [
                                          "unknown",
                                          "available",
                                          "notAvailable",
                                          "partiallyAvailable",
                                          "added",
                                          "removed"
                                        ],
                                        "description": "Allowed values for the status of a Monitored Facility:\n  * unknown - Unknown\n  * available - Available\n  * notAvailable - Not Available\n  * partiallyAvailable - Partially Available\n  * added - Added\n  * removed - Removed"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ]
                        }
                      },
                      "affectedNavigationPaths": {
                        "type": "array",
                        "description": "Navigation Paths affected by the Situation.",
                        "items": {
                          "type": "string",
                          "description": "Identifier of a path affected by the Situation."
                        }
                      }
                    }
                  }
                },
                "places": {
                  "type": "array",
                  "description": "Places scope(Empty)",
                  "items": {
                    "type": "object",
                    "description": "Type for annotated references to a Topographic Place.",
                    "properties": {
                      "placeRef": {
                        "type": "string",
                        "description": "Reference to a Site or Topographic Place (Locality)."
                      },
                      "privateCode": {
                        "type": "string",
                        "description": "Alternative identifier of Site or Topographic Place"
                      },
                      "placeName": {
                        "type": "string",
                        "description": "Name of Site or Topographic Place."
                      },
                      "location": {
                        "type": "object",
                        "description": "Point Projection to use for stop point.",
                        "properties": {
                          "latitude": {
                            "type": "number",
                            "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                          },
                          "longitude": {
                            "type": "number",
                            "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                          },
                          "precision": {
                            "type": "number",
                            "description": "Precision for point measurement. In meters."
                          }
                        }
                      },
                      "placeCategory": {
                        "type": "string",
                        "description": "Category of Topographic Place or Site."
                      },
                      "equipments": {
                        "type": "array",
                        "description": "Equipments found at location.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "equipmentRef": {
                              "type": "string",
                              "description": "Reference to an Equipment found at location."
                            }
                          }
                        }
                      },
                      "accessibilityAssessment": {
                        "type": "object",
                        "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                        "properties": {
                          "mobilityImpairedAccess": {
                            "type": "boolean",
                            "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                          },
                          "limitation": {
                            "type": "object",
                            "description": "Limitation of entity.",
                            "properties": {
                              "wheelchairAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place is wheelchair accessible."
                              },
                              "stepFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has step free access."
                              },
                              "escalatorAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has escalator free access."
                              },
                              "liftFreeAccess": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has lift free access."
                              },
                              "audibleSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has Audible signals for the visually impaired."
                              },
                              "visualSignsAvailable": {
                                "type": "string",
                                "enum": [
                                  true,
                                  false,
                                  "unknown"
                                ],
                                "description": "Whether a Place has visual signals for the hearing impaired."
                              }
                            }
                          },
                          "suitabilities": {
                            "type": "array",
                            "description": "Suitabilities of facility for specific passenger needs.",
                            "items": {
                              "type": "object",
                              "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                              "properties": {
                                "suitable": {
                                  "type": "string",
                                  "enum": [
                                    "suitable",
                                    "notSuitable",
                                    "unknown"
                                  ],
                                  "description": "Suitability for specified user need."
                                },
                                "userNeed": {
                                  "type": "object",
                                  "description": "Only one of the following",
                                  "properties": {
                                    "mobilityNeed": {
                                      "type": "string",
                                      "enum": [
                                        "wheelchair",
                                        "motorizedWheelchair",
                                        "walkingFrame",
                                        "restrictedMobility",
                                        "otherSpecificNeed"
                                      ],
                                      "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                    },
                                    "medicalNeed": {
                                      "type": "string",
                                      "enum": [
                                        "allergic",
                                        "heartCondition"
                                      ],
                                      "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                    },
                                    "psychoSensoryNeed": {
                                      "type": "string",
                                      "enum": [
                                        "visualImpairment",
                                        "auditoryImpairment",
                                        "cognitiveImpairment",
                                        "averseToLifts",
                                        "averseToEscalators",
                                        "averseToConfinedSpaces",
                                        "averseToCrowds",
                                        "otherSensoryNeed"
                                      ],
                                      "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                    },
                                    "encumbranceNeed": {
                                      "type": "string",
                                      "enum": [
                                        "luggageEncumbered",
                                        "pushchair",
                                        "baggageTrolley",
                                        "oversizeBaggage",
                                        "guideDog",
                                        "otherAnimal",
                                        "otherEncumbrance"
                                      ],
                                      "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "consequences": {
              "type": "array",
              "description": "List of consequences, nature of the effect to disrupt (or restore) service, and further details.",
              "items": {
                "type": "object",
                "description": "Nature of the effect to disrupt (or restore) service, and further details.",
                "properties": {
                  "period": {
                    "type": "object",
                    "description": "Type for a range of date times. Start time must be specified, end time is optional.",
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The (inclusive) start time stamp."
                      },
                      "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The (inclusive) end time stamp. If omitted, the range end is open-ended, that is, it should be interpreted as defined by end time status."
                      },
                      "endTimeStatus": {
                        "type": "string",
                        "enum": [
                          "undefined",
                          "longTerm",
                          "shortTerm"
                        ],
                        "default": "undefined",
                        "description": "If end time not provided, whethhr to interpret range as long, term, short term or unknown length of situation. Default is undefined. Allowed values for EndTime Status:\n  * undefined - Undefined\n  * longTerm - Long Term\n  * shortTerm - Short Term"
                      }
                    }
                  },
                  "conditions": {
                    "type": "array",
                    "description": "Effects on service.",
                    "items": {
                      "type": "string",
                      "enum": [
                        "unknown",
                        "altered",
                        "cancelled",
                        "delayed",
                        "diverted",
                        "noService",
                        "disrupted",
                        "additionalService",
                        "specialService",
                        "onTime",
                        "normalService",
                        "intermittentService",
                        "shortFormedService",
                        "fullLengthService",
                        "extendedService",
                        "splittingTrain",
                        "replacementTransport",
                        "arrivesEarly",
                        "shuttleService",
                        "replacementService",
                        "undefinedServiceInformation"
                      ],
                      "description": "Values for Service Condition. Corresponds to TPEG Pti13 Service Condition values:\n  * unknown - Unknown (pti13_0)\n  * altered - Altered (pti13_1)\n  * cancelled - Cancelled (pti13_2)\n  * delayed - Delayed (pti13_3)\n  * diverted - Diverted (pti13_4)\n  * noService - No Service (pti13_5)\n  * disrupted - Disrupted (pti13_6)\n  * additionalService - Additional Service (pti13_7)\n  * specialService - Special Service (pti13_8)\n  * onTime - On Time (pti13_9)\n  * normalService - Normal Service (pti13_10)\n  * intermittentService - Intermittent Service (pti13_11)\n  * shortFormedService - Short Formed Service (pti13_12)\n  * fullLengthService - Full Length Service (pti13_13)\n  * extendedService - Extended Service (pti13_14)\n  * splittingTrain - Splitting Train (pti13_15)\n  * replacementTransport - Replacement Transport (pti13_16)\n  * arrivesEarly - Arrives Early (pti13_17)\n  * shuttleService - Shuttle Service (pti13_18)\n  * replacementService - Replacement Service (pti13_19)\n  * undefinedServiceInformation - Undefined Service Information (pti13_255)"
                    }
                  },
                  "severity": {
                    "type": "string",
                    "enum": [
                      "unknown",
                      "verySlight",
                      "slight",
                      "normal",
                      "severe",
                      "verySevere",
                      "noImpact"
                    ],
                    "default": "normal",
                    "description": "Severity of the Situation. Corresponds to TPEG Pti26 severities:\n  * unknown - Unknown (pti26_0)\n  * verySlight - Very Slight (pti26_1)\n  * slight - Slight (pti26_2)\n  * normal - Normal (pti26_3)\n  * severe - Severe (pti26_4)\n  * verySevere - Very severe (pti26_5)\n  * noImpact - No impact (pti26_6)\n  * normal - Normal (pti26_255)"
                  },
                  "affects": {
                    "type": "object",
                    "description": "The scope of the situation or consequence.",
                    "properties": {
                      "allOperators": {
                        "type": "boolean",
                        "description": "All operators are effected (Empty)",
                        "default": false
                      },
                      "operators": {
                        "type": "array",
                        "description": "Operators scope.",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to Operator & Unit.",
                          "properties": {
                            "operatorRef": {
                              "type": "string",
                              "description": "Identifier of Operator."
                            },
                            "operatorName": {
                              "type": "string",
                              "description": "Name of Operator."
                            },
                            "operatorShortName": {
                              "type": "string",
                              "description": "ShortName for Operator."
                            },
                            "operationalUnitRef": {
                              "type": "string",
                              "description": "Identifier of Operational unit responsible for managing services."
                            }
                          }
                        }
                      },
                      "stopPoints": {
                        "type": "array",
                        "description": "Stop Points scope.",
                        "items": {
                          "type": "object",
                          "description": "Annotated Reference to Stop Point",
                          "properties": {
                            "stopPointRef": {
                              "type": "string",
                              "description": "Identifier of Stop Point."
                            },
                            "stopPointName": {
                              "type": "string",
                              "description": "Name of Stop Point."
                            },
                            "location": {
                              "type": "object",
                              "description": "Point Projection to use for stop point.",
                              "properties": {
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                },
                                "precision": {
                                  "type": "number",
                                  "description": "Precision for point measurement. In meters."
                                }
                              }
                            },
                            "affectedModes": {
                              "type": "array",
                              "description": "Affected transport modes for the Stop Point",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "railwayService",
                                  "coachService",
                                  "suburbanRailwayService",
                                  "urbanRailwayService",
                                  "metroService",
                                  "undergroundService",
                                  "busService",
                                  "trolleyBusService",
                                  "tramService",
                                  "waterTransportService",
                                  "airService",
                                  "ferryService",
                                  "telecabinService",
                                  "funicularService",
                                  "taxiService",
                                  "selfDrive"
                                ],
                                "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                              }
                            },
                            "placeRef": {
                              "type": "string",
                              "description": "Identifier of Place in which Stop lies."
                            },
                            "placeName": {
                              "type": "string",
                              "description": "Name of Stop."
                            },
                            "accessibilityAssessment": {
                              "type": "object",
                              "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                              "properties": {
                                "mobilityImpairedAccess": {
                                  "type": "boolean",
                                  "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                },
                                "limitation": {
                                  "type": "object",
                                  "description": "Limitation of entity.",
                                  "properties": {
                                    "wheelchairAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place is wheelchair accessible."
                                    },
                                    "stepFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has step free access."
                                    },
                                    "escalatorAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has escalator free access."
                                    },
                                    "liftFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has lift free access."
                                    },
                                    "audibleSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has Audible signals for the visually impaired."
                                    },
                                    "visualSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has visual signals for the hearing impaired."
                                    }
                                  }
                                },
                                "suitabilities": {
                                  "type": "array",
                                  "description": "Suitabilities of facility for specific passenger needs.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                    "properties": {
                                      "suitable": {
                                        "type": "string",
                                        "enum": [
                                          "suitable",
                                          "notSuitable",
                                          "unknown"
                                        ],
                                        "description": "Suitability for specified user need."
                                      },
                                      "userNeed": {
                                        "type": "object",
                                        "description": "Only one of the following",
                                        "properties": {
                                          "mobilityNeed": {
                                            "type": "string",
                                            "enum": [
                                              "wheelchair",
                                              "motorizedWheelchair",
                                              "walkingFrame",
                                              "restrictedMobility",
                                              "otherSpecificNeed"
                                            ],
                                            "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                          },
                                          "medicalNeed": {
                                            "type": "string",
                                            "enum": [
                                              "allergic",
                                              "heartCondition"
                                            ],
                                            "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                          },
                                          "psychoSensoryNeed": {
                                            "type": "string",
                                            "enum": [
                                              "visualImpairment",
                                              "auditoryImpairment",
                                              "cognitiveImpairment",
                                              "averseToLifts",
                                              "averseToEscalators",
                                              "averseToConfinedSpaces",
                                              "averseToCrowds",
                                              "otherSensoryNeed"
                                            ],
                                            "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                          },
                                          "encumbranceNeed": {
                                            "type": "string",
                                            "enum": [
                                              "luggageEncumbered",
                                              "pushchair",
                                              "baggageTrolley",
                                              "oversizeBaggage",
                                              "guideDog",
                                              "otherAnimal",
                                              "otherEncumbrance"
                                            ],
                                            "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "connectionLinks": {
                              "type": "array",
                              "description": "Connection links affected by Situation.",
                              "items": {
                                "type": "object",
                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                "properties": {
                                  "connectionLinkRef": {
                                    "type": "string",
                                    "description": "Reference to a Connection link affected by a Situation."
                                  },
                                  "connectionName": {
                                    "type": "string",
                                    "description": "Name of a Connection link affected by a Situation."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "lines": {
                                    "type": "array",
                                    "description": "Lines to which link connects.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "lineRef": {
                                          "type": "string",
                                          "description": "Reference to a Line."
                                        }
                                      }
                                    }
                                  },
                                  "connectingStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of connecting Stop Point."
                                  },
                                  "connectingStopPointName": {
                                    "type": "string",
                                    "description": "Name of connecting Stop Point."
                                  },
                                  "connectionDirection": {
                                    "type": "string",
                                    "enum": [
                                      "from",
                                      "to",
                                      "both"
                                    ],
                                    "default": "both",
                                    "description": "Direction of connection. Default is both."
                                  },
                                  "affectedPathLinks": {
                                    "type": "array",
                                    "description": "Path Links affected by a Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "linkRef": {
                                          "type": "string",
                                          "description": "Identifier of Connection link."
                                        },
                                        "linkName": {
                                          "type": "string",
                                          "description": "Name of Connection link."
                                        },
                                        "accessibilityFeature": {
                                          "type": "string",
                                          "enum": [
                                            "lift",
                                            "stairs",
                                            "seriesOfStairs",
                                            "escalator",
                                            "travelator",
                                            "ramp",
                                            "shuttle",
                                            "barrier",
                                            "narrowEntrance",
                                            "confinedSpace",
                                            "queueManagement",
                                            "none",
                                            "unknown",
                                            "other"
                                          ],
                                          "description": "Nature of Connection link."
                                        },
                                        "linkDirection": {
                                          "type": "string",
                                          "description": "Description of a Direction of Connection link."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "networks": {
                        "type": "array",
                        "description": "Networks scope.",
                        "items": {
                          "type": "object",
                          "description": "The AffectedNetwork element groups information about the Modes, Networks and any Lines affected by the situation.",
                          "properties": {
                            "operators": {
                              "type": "array",
                              "description": "Reference to Operators of services affected by situation",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to Operator & Unit.",
                                "properties": {
                                  "operatorRef": {
                                    "type": "string",
                                    "description": "Identifier of Operator."
                                  },
                                  "operatorName": {
                                    "type": "string",
                                    "description": "Name of Operator."
                                  },
                                  "operatorShortName": {
                                    "type": "string",
                                    "description": "ShortName for Operator."
                                  },
                                  "operationalUnitRef": {
                                    "type": "string",
                                    "description": "Identifier of Operational unit responsible for managing services."
                                  }
                                }
                              }
                            },
                            "networkRef": {
                              "type": "string",
                              "description": "Network of affected Lines."
                            },
                            "networkName": {
                              "type": "string",
                              "description": "Name of Network."
                            },
                            "routesAffected": {
                              "type": "string",
                              "description": "Textual description of overall routes affected. Should correspond to any structured description."
                            },
                            "vehicleModes": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "railwayService",
                                  "coachService",
                                  "suburbanRailwayService",
                                  "urbanRailwayService",
                                  "metroService",
                                  "undergroundService",
                                  "busService",
                                  "trolleyBusService",
                                  "tramService",
                                  "waterTransportService",
                                  "airService",
                                  "ferryService",
                                  "telecabinService",
                                  "funicularService",
                                  "taxiService",
                                  "selfDrive"
                                ],
                                "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                              }
                            },
                            "allLines": {
                              "type": "boolean",
                              "description": "All lines in the network are affected.",
                              "default": false
                            },
                            "selectedRoutes": {
                              "type": "boolean",
                              "description": "Only some routes are affected, line level information not available. See the AffectedRoutes element for textual description.",
                              "default": false
                            },
                            "lines": {
                              "type": "array",
                              "description": "Lines affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "The AffectedLine element groups information about the LINEs affected by the situation.",
                                "properties": {
                                  "operators": {
                                    "type": "array",
                                    "description": "Annotated reference to Operators of services affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Annotated Reference to Operator & Unit.",
                                      "properties": {
                                        "operatorRef": {
                                          "type": "string",
                                          "description": "Identifier of Operator."
                                        },
                                        "operatorName": {
                                          "type": "string",
                                          "description": "Name of Operator."
                                        },
                                        "operatorShortName": {
                                          "type": "string",
                                          "description": "ShortName for Operator."
                                        },
                                        "operationalUnitRef": {
                                          "type": "string",
                                          "description": "Identifier of Operational unit responsible for managing services."
                                        }
                                      }
                                    }
                                  },
                                  "lineRef": {
                                    "type": "string",
                                    "description": "Identifier of the Line."
                                  },
                                  "publishedLineName": {
                                    "type": "string",
                                    "description": "Public Number or Name of the Line."
                                  },
                                  "destinations": {
                                    "type": "array",
                                    "description": "Annotated reference to destination Stop Points affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Annotated Reference to Stop Point",
                                      "properties": {
                                        "stopPointRef": {
                                          "type": "string",
                                          "description": "Identifier of Stop Point."
                                        },
                                        "stopPointName": {
                                          "type": "string",
                                          "description": "Name of Stop Point."
                                        },
                                        "location": {
                                          "type": "object",
                                          "description": "Point Projection to use for stop point.",
                                          "properties": {
                                            "latitude": {
                                              "type": "number",
                                              "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                            },
                                            "longitude": {
                                              "type": "number",
                                              "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                            },
                                            "precision": {
                                              "type": "number",
                                              "description": "Precision for point measurement. In meters."
                                            }
                                          }
                                        },
                                        "affectedModes": {
                                          "type": "array",
                                          "description": "Affected transport modes for the Stop Point",
                                          "items": {
                                            "type": "string",
                                            "enum": [
                                              "unknown",
                                              "railwayService",
                                              "coachService",
                                              "suburbanRailwayService",
                                              "urbanRailwayService",
                                              "metroService",
                                              "undergroundService",
                                              "busService",
                                              "trolleyBusService",
                                              "tramService",
                                              "waterTransportService",
                                              "airService",
                                              "ferryService",
                                              "telecabinService",
                                              "funicularService",
                                              "taxiService",
                                              "selfDrive"
                                            ],
                                            "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                          }
                                        },
                                        "placeRef": {
                                          "type": "string",
                                          "description": "Identifier of Place in which Stop lies."
                                        },
                                        "placeName": {
                                          "type": "string",
                                          "description": "Name of Stop."
                                        },
                                        "accessibilityAssessment": {
                                          "type": "object",
                                          "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                          "properties": {
                                            "mobilityImpairedAccess": {
                                              "type": "boolean",
                                              "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                            },
                                            "limitation": {
                                              "type": "object",
                                              "description": "Limitation of entity.",
                                              "properties": {
                                                "wheelchairAccess": {
                                                  "type": "string",
                                                  "enum": [
                                                    true,
                                                    false,
                                                    "unknown"
                                                  ],
                                                  "description": "Whether a Place is wheelchair accessible."
                                                },
                                                "stepFreeAccess": {
                                                  "type": "string",
                                                  "enum": [
                                                    true,
                                                    false,
                                                    "unknown"
                                                  ],
                                                  "description": "Whether a Place has step free access."
                                                },
                                                "escalatorAccess": {
                                                  "type": "string",
                                                  "enum": [
                                                    true,
                                                    false,
                                                    "unknown"
                                                  ],
                                                  "description": "Whether a Place has escalator free access."
                                                },
                                                "liftFreeAccess": {
                                                  "type": "string",
                                                  "enum": [
                                                    true,
                                                    false,
                                                    "unknown"
                                                  ],
                                                  "description": "Whether a Place has lift free access."
                                                },
                                                "audibleSignsAvailable": {
                                                  "type": "string",
                                                  "enum": [
                                                    true,
                                                    false,
                                                    "unknown"
                                                  ],
                                                  "description": "Whether a Place has Audible signals for the visually impaired."
                                                },
                                                "visualSignsAvailable": {
                                                  "type": "string",
                                                  "enum": [
                                                    true,
                                                    false,
                                                    "unknown"
                                                  ],
                                                  "description": "Whether a Place has visual signals for the hearing impaired."
                                                }
                                              }
                                            },
                                            "suitabilities": {
                                              "type": "array",
                                              "description": "Suitabilities of facility for specific passenger needs.",
                                              "items": {
                                                "type": "object",
                                                "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                                "properties": {
                                                  "suitable": {
                                                    "type": "string",
                                                    "enum": [
                                                      "suitable",
                                                      "notSuitable",
                                                      "unknown"
                                                    ],
                                                    "description": "Suitability for specified user need."
                                                  },
                                                  "userNeed": {
                                                    "type": "object",
                                                    "description": "Only one of the following",
                                                    "properties": {
                                                      "mobilityNeed": {
                                                        "type": "string",
                                                        "enum": [
                                                          "wheelchair",
                                                          "motorizedWheelchair",
                                                          "walkingFrame",
                                                          "restrictedMobility",
                                                          "otherSpecificNeed"
                                                        ],
                                                        "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                                      },
                                                      "medicalNeed": {
                                                        "type": "string",
                                                        "enum": [
                                                          "allergic",
                                                          "heartCondition"
                                                        ],
                                                        "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                                      },
                                                      "psychoSensoryNeed": {
                                                        "type": "string",
                                                        "enum": [
                                                          "visualImpairment",
                                                          "auditoryImpairment",
                                                          "cognitiveImpairment",
                                                          "averseToLifts",
                                                          "averseToEscalators",
                                                          "averseToConfinedSpaces",
                                                          "averseToCrowds",
                                                          "otherSensoryNeed"
                                                        ],
                                                        "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                                      },
                                                      "encumbranceNeed": {
                                                        "type": "string",
                                                        "enum": [
                                                          "luggageEncumbered",
                                                          "pushchair",
                                                          "baggageTrolley",
                                                          "oversizeBaggage",
                                                          "guideDog",
                                                          "otherAnimal",
                                                          "otherEncumbrance"
                                                        ],
                                                        "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "connectionLinks": {
                                          "type": "array",
                                          "description": "Connection links affected by Situation.",
                                          "items": {
                                            "type": "object",
                                            "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                            "properties": {
                                              "connectionLinkRef": {
                                                "type": "string",
                                                "description": "Reference to a Connection link affected by a Situation."
                                              },
                                              "connectionName": {
                                                "type": "string",
                                                "description": "Name of a Connection link affected by a Situation."
                                              },
                                              "location": {
                                                "type": "object",
                                                "description": "Point Projection to use for stop point.",
                                                "properties": {
                                                  "latitude": {
                                                    "type": "number",
                                                    "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                                  },
                                                  "longitude": {
                                                    "type": "number",
                                                    "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                                  },
                                                  "precision": {
                                                    "type": "number",
                                                    "description": "Precision for point measurement. In meters."
                                                  }
                                                }
                                              },
                                              "lines": {
                                                "type": "array",
                                                "description": "Lines to which link connects.",
                                                "items": {
                                                  "type": "object",
                                                  "properties": {
                                                    "lineRef": {
                                                      "type": "string",
                                                      "description": "Reference to a Line."
                                                    }
                                                  }
                                                }
                                              },
                                              "connectingStopPointRef": {
                                                "type": "string",
                                                "description": "Identifier of connecting Stop Point."
                                              },
                                              "connectingStopPointName": {
                                                "type": "string",
                                                "description": "Name of connecting Stop Point."
                                              },
                                              "connectionDirection": {
                                                "type": "string",
                                                "enum": [
                                                  "from",
                                                  "to",
                                                  "both"
                                                ],
                                                "default": "both",
                                                "description": "Direction of connection. Default is both."
                                              },
                                              "affectedPathLinks": {
                                                "type": "array",
                                                "description": "Path Links affected by a Situation.",
                                                "items": {
                                                  "type": "object",
                                                  "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                                  "properties": {
                                                    "linkRef": {
                                                      "type": "string",
                                                      "description": "Identifier of Connection link."
                                                    },
                                                    "linkName": {
                                                      "type": "string",
                                                      "description": "Name of Connection link."
                                                    },
                                                    "accessibilityFeature": {
                                                      "type": "string",
                                                      "enum": [
                                                        "lift",
                                                        "stairs",
                                                        "seriesOfStairs",
                                                        "escalator",
                                                        "travelator",
                                                        "ramp",
                                                        "shuttle",
                                                        "barrier",
                                                        "narrowEntrance",
                                                        "confinedSpace",
                                                        "queueManagement",
                                                        "none",
                                                        "unknown",
                                                        "other"
                                                      ],
                                                      "description": "Nature of Connection link."
                                                    },
                                                    "linkDirection": {
                                                      "type": "string",
                                                      "description": "Description of a Direction of Connection link."
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "directions": {
                                    "type": "array",
                                    "description": "Directions affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "directionRef": {
                                          "type": "string",
                                          "description": "Identifier of Direction."
                                        },
                                        "directionName": {
                                          "type": "string",
                                          "description": "Name of Direction."
                                        }
                                      }
                                    }
                                  },
                                  "routes": {
                                    "type": "array",
                                    "description": "Routes affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Annotated Reference to a Route",
                                      "properties": {
                                        "routeRef": {
                                          "type": "string",
                                          "description": "Reference to a ROUTE affected by SITUATION."
                                        },
                                        "directions": {
                                          "type": "array",
                                          "description": "Directions affected by the Situation.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "directionRef": {
                                                "type": "string",
                                                "description": "Identifier of Direction."
                                              },
                                              "directionName": {
                                                "type": "string",
                                                "description": "Name of Direction."
                                              }
                                            }
                                          }
                                        },
                                        "routeLinks": {
                                          "type": "array",
                                          "description": "Route Links affected by the Situation.",
                                          "items": {
                                            "type": "object",
                                            "description": "Reference to a Route Link.",
                                            "properties": {
                                              "routeLinkRef": {
                                                "type": "string",
                                                "description": "Identifier of a Route Link."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "vehicleMode": {
                                    "type": "string",
                                    "enum": [
                                      "unknown",
                                      "railwayService",
                                      "coachService",
                                      "suburbanRailwayService",
                                      "urbanRailwayService",
                                      "metroService",
                                      "undergroundService",
                                      "busService",
                                      "trolleyBusService",
                                      "tramService",
                                      "waterTransportService",
                                      "airService",
                                      "ferryService",
                                      "telecabinService",
                                      "funicularService",
                                      "taxiService",
                                      "selfDrive"
                                    ],
                                    "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "lines": {
                        "type": "array",
                        "description": "Lines scope.",
                        "items": {
                          "type": "object",
                          "description": "The AffectedLine element groups information about the LINEs affected by the situation.",
                          "properties": {
                            "operators": {
                              "type": "array",
                              "description": "Annotated reference to Operators of services affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to Operator & Unit.",
                                "properties": {
                                  "operatorRef": {
                                    "type": "string",
                                    "description": "Identifier of Operator."
                                  },
                                  "operatorName": {
                                    "type": "string",
                                    "description": "Name of Operator."
                                  },
                                  "operatorShortName": {
                                    "type": "string",
                                    "description": "ShortName for Operator."
                                  },
                                  "operationalUnitRef": {
                                    "type": "string",
                                    "description": "Identifier of Operational unit responsible for managing services."
                                  }
                                }
                              }
                            },
                            "lineRef": {
                              "type": "string",
                              "description": "Identifier of the Line."
                            },
                            "publishedLineName": {
                              "type": "string",
                              "description": "Public Number or Name of the Line."
                            },
                            "destinations": {
                              "type": "array",
                              "description": "Annotated reference to destination Stop Points affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to Stop Point",
                                "properties": {
                                  "stopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of Stop Point."
                                  },
                                  "stopPointName": {
                                    "type": "string",
                                    "description": "Name of Stop Point."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "affectedModes": {
                                    "type": "array",
                                    "description": "Affected transport modes for the Stop Point",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "unknown",
                                        "railwayService",
                                        "coachService",
                                        "suburbanRailwayService",
                                        "urbanRailwayService",
                                        "metroService",
                                        "undergroundService",
                                        "busService",
                                        "trolleyBusService",
                                        "tramService",
                                        "waterTransportService",
                                        "airService",
                                        "ferryService",
                                        "telecabinService",
                                        "funicularService",
                                        "taxiService",
                                        "selfDrive"
                                      ],
                                      "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                    }
                                  },
                                  "placeRef": {
                                    "type": "string",
                                    "description": "Identifier of Place in which Stop lies."
                                  },
                                  "placeName": {
                                    "type": "string",
                                    "description": "Name of Stop."
                                  },
                                  "accessibilityAssessment": {
                                    "type": "object",
                                    "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                    "properties": {
                                      "mobilityImpairedAccess": {
                                        "type": "boolean",
                                        "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                      },
                                      "limitation": {
                                        "type": "object",
                                        "description": "Limitation of entity.",
                                        "properties": {
                                          "wheelchairAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place is wheelchair accessible."
                                          },
                                          "stepFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has step free access."
                                          },
                                          "escalatorAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has escalator free access."
                                          },
                                          "liftFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has lift free access."
                                          },
                                          "audibleSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has Audible signals for the visually impaired."
                                          },
                                          "visualSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has visual signals for the hearing impaired."
                                          }
                                        }
                                      },
                                      "suitabilities": {
                                        "type": "array",
                                        "description": "Suitabilities of facility for specific passenger needs.",
                                        "items": {
                                          "type": "object",
                                          "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                          "properties": {
                                            "suitable": {
                                              "type": "string",
                                              "enum": [
                                                "suitable",
                                                "notSuitable",
                                                "unknown"
                                              ],
                                              "description": "Suitability for specified user need."
                                            },
                                            "userNeed": {
                                              "type": "object",
                                              "description": "Only one of the following",
                                              "properties": {
                                                "mobilityNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "wheelchair",
                                                    "motorizedWheelchair",
                                                    "walkingFrame",
                                                    "restrictedMobility",
                                                    "otherSpecificNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                                },
                                                "medicalNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "allergic",
                                                    "heartCondition"
                                                  ],
                                                  "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                                },
                                                "psychoSensoryNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "visualImpairment",
                                                    "auditoryImpairment",
                                                    "cognitiveImpairment",
                                                    "averseToLifts",
                                                    "averseToEscalators",
                                                    "averseToConfinedSpaces",
                                                    "averseToCrowds",
                                                    "otherSensoryNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                                },
                                                "encumbranceNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "luggageEncumbered",
                                                    "pushchair",
                                                    "baggageTrolley",
                                                    "oversizeBaggage",
                                                    "guideDog",
                                                    "otherAnimal",
                                                    "otherEncumbrance"
                                                  ],
                                                  "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "connectionLinks": {
                                    "type": "array",
                                    "description": "Connection links affected by Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "connectionLinkRef": {
                                          "type": "string",
                                          "description": "Reference to a Connection link affected by a Situation."
                                        },
                                        "connectionName": {
                                          "type": "string",
                                          "description": "Name of a Connection link affected by a Situation."
                                        },
                                        "location": {
                                          "type": "object",
                                          "description": "Point Projection to use for stop point.",
                                          "properties": {
                                            "latitude": {
                                              "type": "number",
                                              "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                            },
                                            "longitude": {
                                              "type": "number",
                                              "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                            },
                                            "precision": {
                                              "type": "number",
                                              "description": "Precision for point measurement. In meters."
                                            }
                                          }
                                        },
                                        "lines": {
                                          "type": "array",
                                          "description": "Lines to which link connects.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "lineRef": {
                                                "type": "string",
                                                "description": "Reference to a Line."
                                              }
                                            }
                                          }
                                        },
                                        "connectingStopPointRef": {
                                          "type": "string",
                                          "description": "Identifier of connecting Stop Point."
                                        },
                                        "connectingStopPointName": {
                                          "type": "string",
                                          "description": "Name of connecting Stop Point."
                                        },
                                        "connectionDirection": {
                                          "type": "string",
                                          "enum": [
                                            "from",
                                            "to",
                                            "both"
                                          ],
                                          "default": "both",
                                          "description": "Direction of connection. Default is both."
                                        },
                                        "affectedPathLinks": {
                                          "type": "array",
                                          "description": "Path Links affected by a Situation.",
                                          "items": {
                                            "type": "object",
                                            "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                            "properties": {
                                              "linkRef": {
                                                "type": "string",
                                                "description": "Identifier of Connection link."
                                              },
                                              "linkName": {
                                                "type": "string",
                                                "description": "Name of Connection link."
                                              },
                                              "accessibilityFeature": {
                                                "type": "string",
                                                "enum": [
                                                  "lift",
                                                  "stairs",
                                                  "seriesOfStairs",
                                                  "escalator",
                                                  "travelator",
                                                  "ramp",
                                                  "shuttle",
                                                  "barrier",
                                                  "narrowEntrance",
                                                  "confinedSpace",
                                                  "queueManagement",
                                                  "none",
                                                  "unknown",
                                                  "other"
                                                ],
                                                "description": "Nature of Connection link."
                                              },
                                              "linkDirection": {
                                                "type": "string",
                                                "description": "Description of a Direction of Connection link."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "directions": {
                              "type": "array",
                              "description": "Directions affected by the Situation.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "directionRef": {
                                    "type": "string",
                                    "description": "Identifier of Direction."
                                  },
                                  "directionName": {
                                    "type": "string",
                                    "description": "Name of Direction."
                                  }
                                }
                              }
                            },
                            "routes": {
                              "type": "array",
                              "description": "Routes affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to a Route",
                                "properties": {
                                  "routeRef": {
                                    "type": "string",
                                    "description": "Reference to a ROUTE affected by SITUATION."
                                  },
                                  "directions": {
                                    "type": "array",
                                    "description": "Directions affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "directionRef": {
                                          "type": "string",
                                          "description": "Identifier of Direction."
                                        },
                                        "directionName": {
                                          "type": "string",
                                          "description": "Name of Direction."
                                        }
                                      }
                                    }
                                  },
                                  "routeLinks": {
                                    "type": "array",
                                    "description": "Route Links affected by the Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Reference to a Route Link.",
                                      "properties": {
                                        "routeLinkRef": {
                                          "type": "string",
                                          "description": "Identifier of a Route Link."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "vehicleMode": {
                              "type": "string",
                              "enum": [
                                "unknown",
                                "railwayService",
                                "coachService",
                                "suburbanRailwayService",
                                "urbanRailwayService",
                                "metroService",
                                "undergroundService",
                                "busService",
                                "trolleyBusService",
                                "tramService",
                                "waterTransportService",
                                "airService",
                                "ferryService",
                                "telecabinService",
                                "funicularService",
                                "taxiService",
                                "selfDrive"
                              ],
                              "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                            }
                          }
                        }
                      },
                      "vehicleJourneys": {
                        "type": "array",
                        "description": "Vehicle Journeys scope.",
                        "items": {
                          "type": "object",
                          "description": "Information about the Vehicle Journeys affected by the situation.",
                          "properties": {
                            "vehicleJourneyRef": {
                              "type": "string",
                              "description": "Reference to a service Vehicle Journey affected by a Situation."
                            },
                            "datedVehicleJourneyRef": {
                              "type": "string",
                              "description": "Reference to a specific Dated Vehicle Journey affected by a Situation."
                            },
                            "journeyName": {
                              "type": "string",
                              "description": "Name of journey affected by a Situation."
                            },
                            "operator": {
                              "type": "object",
                              "description": "Annotated Reference to Operator & Unit.",
                              "properties": {
                                "operatorRef": {
                                  "type": "string",
                                  "description": "Identifier of Operator."
                                },
                                "operatorName": {
                                  "type": "string",
                                  "description": "Name of Operator."
                                },
                                "operatorShortName": {
                                  "type": "string",
                                  "description": "ShortName for Operator."
                                },
                                "operationalUnitRef": {
                                  "type": "string",
                                  "description": "Identifier of Operational unit responsible for managing services."
                                }
                              }
                            },
                            "lineRef": {
                              "type": "string",
                              "description": "Reference to the Line of the Journey affected by a Situation."
                            },
                            "publishedLineName": {
                              "type": "string",
                              "description": "Public Number or Name of the Line."
                            },
                            "directionRef": {
                              "type": "string",
                              "description": "Direction of Line in which Journey runs."
                            },
                            "blockRef": {
                              "type": "string",
                              "description": "Block which Journey runs."
                            },
                            "trainNumbers": {
                              "type": "array",
                              "description": "Train Numbers for Journey.",
                              "items": {
                                "type": "string",
                                "description": "Train Number assigned to Vehicle Journey."
                              }
                            },
                            "origins": {
                              "type": "array",
                              "description": "Origin Stop Points from which the Line runs.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to Stop Point",
                                "properties": {
                                  "stopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of Stop Point."
                                  },
                                  "stopPointName": {
                                    "type": "string",
                                    "description": "Name of Stop Point."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "affectedModes": {
                                    "type": "array",
                                    "description": "Affected transport modes for the Stop Point",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "unknown",
                                        "railwayService",
                                        "coachService",
                                        "suburbanRailwayService",
                                        "urbanRailwayService",
                                        "metroService",
                                        "undergroundService",
                                        "busService",
                                        "trolleyBusService",
                                        "tramService",
                                        "waterTransportService",
                                        "airService",
                                        "ferryService",
                                        "telecabinService",
                                        "funicularService",
                                        "taxiService",
                                        "selfDrive"
                                      ],
                                      "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                    }
                                  },
                                  "placeRef": {
                                    "type": "string",
                                    "description": "Identifier of Place in which Stop lies."
                                  },
                                  "placeName": {
                                    "type": "string",
                                    "description": "Name of Stop."
                                  },
                                  "accessibilityAssessment": {
                                    "type": "object",
                                    "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                    "properties": {
                                      "mobilityImpairedAccess": {
                                        "type": "boolean",
                                        "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                      },
                                      "limitation": {
                                        "type": "object",
                                        "description": "Limitation of entity.",
                                        "properties": {
                                          "wheelchairAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place is wheelchair accessible."
                                          },
                                          "stepFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has step free access."
                                          },
                                          "escalatorAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has escalator free access."
                                          },
                                          "liftFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has lift free access."
                                          },
                                          "audibleSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has Audible signals for the visually impaired."
                                          },
                                          "visualSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has visual signals for the hearing impaired."
                                          }
                                        }
                                      },
                                      "suitabilities": {
                                        "type": "array",
                                        "description": "Suitabilities of facility for specific passenger needs.",
                                        "items": {
                                          "type": "object",
                                          "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                          "properties": {
                                            "suitable": {
                                              "type": "string",
                                              "enum": [
                                                "suitable",
                                                "notSuitable",
                                                "unknown"
                                              ],
                                              "description": "Suitability for specified user need."
                                            },
                                            "userNeed": {
                                              "type": "object",
                                              "description": "Only one of the following",
                                              "properties": {
                                                "mobilityNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "wheelchair",
                                                    "motorizedWheelchair",
                                                    "walkingFrame",
                                                    "restrictedMobility",
                                                    "otherSpecificNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                                },
                                                "medicalNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "allergic",
                                                    "heartCondition"
                                                  ],
                                                  "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                                },
                                                "psychoSensoryNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "visualImpairment",
                                                    "auditoryImpairment",
                                                    "cognitiveImpairment",
                                                    "averseToLifts",
                                                    "averseToEscalators",
                                                    "averseToConfinedSpaces",
                                                    "averseToCrowds",
                                                    "otherSensoryNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                                },
                                                "encumbranceNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "luggageEncumbered",
                                                    "pushchair",
                                                    "baggageTrolley",
                                                    "oversizeBaggage",
                                                    "guideDog",
                                                    "otherAnimal",
                                                    "otherEncumbrance"
                                                  ],
                                                  "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "connectionLinks": {
                                    "type": "array",
                                    "description": "Connection links affected by Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "connectionLinkRef": {
                                          "type": "string",
                                          "description": "Reference to a Connection link affected by a Situation."
                                        },
                                        "connectionName": {
                                          "type": "string",
                                          "description": "Name of a Connection link affected by a Situation."
                                        },
                                        "location": {
                                          "type": "object",
                                          "description": "Point Projection to use for stop point.",
                                          "properties": {
                                            "latitude": {
                                              "type": "number",
                                              "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                            },
                                            "longitude": {
                                              "type": "number",
                                              "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                            },
                                            "precision": {
                                              "type": "number",
                                              "description": "Precision for point measurement. In meters."
                                            }
                                          }
                                        },
                                        "lines": {
                                          "type": "array",
                                          "description": "Lines to which link connects.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "lineRef": {
                                                "type": "string",
                                                "description": "Reference to a Line."
                                              }
                                            }
                                          }
                                        },
                                        "connectingStopPointRef": {
                                          "type": "string",
                                          "description": "Identifier of connecting Stop Point."
                                        },
                                        "connectingStopPointName": {
                                          "type": "string",
                                          "description": "Name of connecting Stop Point."
                                        },
                                        "connectionDirection": {
                                          "type": "string",
                                          "enum": [
                                            "from",
                                            "to",
                                            "both"
                                          ],
                                          "default": "both",
                                          "description": "Direction of connection. Default is both."
                                        },
                                        "affectedPathLinks": {
                                          "type": "array",
                                          "description": "Path Links affected by a Situation.",
                                          "items": {
                                            "type": "object",
                                            "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                            "properties": {
                                              "linkRef": {
                                                "type": "string",
                                                "description": "Identifier of Connection link."
                                              },
                                              "linkName": {
                                                "type": "string",
                                                "description": "Name of Connection link."
                                              },
                                              "accessibilityFeature": {
                                                "type": "string",
                                                "enum": [
                                                  "lift",
                                                  "stairs",
                                                  "seriesOfStairs",
                                                  "escalator",
                                                  "travelator",
                                                  "ramp",
                                                  "shuttle",
                                                  "barrier",
                                                  "narrowEntrance",
                                                  "confinedSpace",
                                                  "queueManagement",
                                                  "none",
                                                  "unknown",
                                                  "other"
                                                ],
                                                "description": "Nature of Connection link."
                                              },
                                              "linkDirection": {
                                                "type": "string",
                                                "description": "Description of a Direction of Connection link."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "destinations": {
                              "type": "array",
                              "description": "Destination Stop Points to which the Line runs.",
                              "items": {
                                "type": "object",
                                "description": "Annotated Reference to Stop Point",
                                "properties": {
                                  "stopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of Stop Point."
                                  },
                                  "stopPointName": {
                                    "type": "string",
                                    "description": "Name of Stop Point."
                                  },
                                  "location": {
                                    "type": "object",
                                    "description": "Point Projection to use for stop point.",
                                    "properties": {
                                      "latitude": {
                                        "type": "number",
                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                      },
                                      "longitude": {
                                        "type": "number",
                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                      },
                                      "precision": {
                                        "type": "number",
                                        "description": "Precision for point measurement. In meters."
                                      }
                                    }
                                  },
                                  "affectedModes": {
                                    "type": "array",
                                    "description": "Affected transport modes for the Stop Point",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "unknown",
                                        "railwayService",
                                        "coachService",
                                        "suburbanRailwayService",
                                        "urbanRailwayService",
                                        "metroService",
                                        "undergroundService",
                                        "busService",
                                        "trolleyBusService",
                                        "tramService",
                                        "waterTransportService",
                                        "airService",
                                        "ferryService",
                                        "telecabinService",
                                        "funicularService",
                                        "taxiService",
                                        "selfDrive"
                                      ],
                                      "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                    }
                                  },
                                  "placeRef": {
                                    "type": "string",
                                    "description": "Identifier of Place in which Stop lies."
                                  },
                                  "placeName": {
                                    "type": "string",
                                    "description": "Name of Stop."
                                  },
                                  "accessibilityAssessment": {
                                    "type": "object",
                                    "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                    "properties": {
                                      "mobilityImpairedAccess": {
                                        "type": "boolean",
                                        "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                      },
                                      "limitation": {
                                        "type": "object",
                                        "description": "Limitation of entity.",
                                        "properties": {
                                          "wheelchairAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place is wheelchair accessible."
                                          },
                                          "stepFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has step free access."
                                          },
                                          "escalatorAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has escalator free access."
                                          },
                                          "liftFreeAccess": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has lift free access."
                                          },
                                          "audibleSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has Audible signals for the visually impaired."
                                          },
                                          "visualSignsAvailable": {
                                            "type": "string",
                                            "enum": [
                                              true,
                                              false,
                                              "unknown"
                                            ],
                                            "description": "Whether a Place has visual signals for the hearing impaired."
                                          }
                                        }
                                      },
                                      "suitabilities": {
                                        "type": "array",
                                        "description": "Suitabilities of facility for specific passenger needs.",
                                        "items": {
                                          "type": "object",
                                          "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                          "properties": {
                                            "suitable": {
                                              "type": "string",
                                              "enum": [
                                                "suitable",
                                                "notSuitable",
                                                "unknown"
                                              ],
                                              "description": "Suitability for specified user need."
                                            },
                                            "userNeed": {
                                              "type": "object",
                                              "description": "Only one of the following",
                                              "properties": {
                                                "mobilityNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "wheelchair",
                                                    "motorizedWheelchair",
                                                    "walkingFrame",
                                                    "restrictedMobility",
                                                    "otherSpecificNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                                },
                                                "medicalNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "allergic",
                                                    "heartCondition"
                                                  ],
                                                  "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                                },
                                                "psychoSensoryNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "visualImpairment",
                                                    "auditoryImpairment",
                                                    "cognitiveImpairment",
                                                    "averseToLifts",
                                                    "averseToEscalators",
                                                    "averseToConfinedSpaces",
                                                    "averseToCrowds",
                                                    "otherSensoryNeed"
                                                  ],
                                                  "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                                },
                                                "encumbranceNeed": {
                                                  "type": "string",
                                                  "enum": [
                                                    "luggageEncumbered",
                                                    "pushchair",
                                                    "baggageTrolley",
                                                    "oversizeBaggage",
                                                    "guideDog",
                                                    "otherAnimal",
                                                    "otherEncumbrance"
                                                  ],
                                                  "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "connectionLinks": {
                                    "type": "array",
                                    "description": "Connection links affected by Situation.",
                                    "items": {
                                      "type": "object",
                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                      "properties": {
                                        "connectionLinkRef": {
                                          "type": "string",
                                          "description": "Reference to a Connection link affected by a Situation."
                                        },
                                        "connectionName": {
                                          "type": "string",
                                          "description": "Name of a Connection link affected by a Situation."
                                        },
                                        "location": {
                                          "type": "object",
                                          "description": "Point Projection to use for stop point.",
                                          "properties": {
                                            "latitude": {
                                              "type": "number",
                                              "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                            },
                                            "longitude": {
                                              "type": "number",
                                              "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                            },
                                            "precision": {
                                              "type": "number",
                                              "description": "Precision for point measurement. In meters."
                                            }
                                          }
                                        },
                                        "lines": {
                                          "type": "array",
                                          "description": "Lines to which link connects.",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "lineRef": {
                                                "type": "string",
                                                "description": "Reference to a Line."
                                              }
                                            }
                                          }
                                        },
                                        "connectingStopPointRef": {
                                          "type": "string",
                                          "description": "Identifier of connecting Stop Point."
                                        },
                                        "connectingStopPointName": {
                                          "type": "string",
                                          "description": "Name of connecting Stop Point."
                                        },
                                        "connectionDirection": {
                                          "type": "string",
                                          "enum": [
                                            "from",
                                            "to",
                                            "both"
                                          ],
                                          "default": "both",
                                          "description": "Direction of connection. Default is both."
                                        },
                                        "affectedPathLinks": {
                                          "type": "array",
                                          "description": "Path Links affected by a Situation.",
                                          "items": {
                                            "type": "object",
                                            "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                            "properties": {
                                              "linkRef": {
                                                "type": "string",
                                                "description": "Identifier of Connection link."
                                              },
                                              "linkName": {
                                                "type": "string",
                                                "description": "Name of Connection link."
                                              },
                                              "accessibilityFeature": {
                                                "type": "string",
                                                "enum": [
                                                  "lift",
                                                  "stairs",
                                                  "seriesOfStairs",
                                                  "escalator",
                                                  "travelator",
                                                  "ramp",
                                                  "shuttle",
                                                  "barrier",
                                                  "narrowEntrance",
                                                  "confinedSpace",
                                                  "queueManagement",
                                                  "none",
                                                  "unknown",
                                                  "other"
                                                ],
                                                "description": "Nature of Connection link."
                                              },
                                              "linkDirection": {
                                                "type": "string",
                                                "description": "Description of a Direction of Connection link."
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "route": {
                              "type": "object",
                              "description": "Annotated Reference to a Route",
                              "properties": {
                                "routeRef": {
                                  "type": "string",
                                  "description": "Reference to a ROUTE affected by SITUATION."
                                },
                                "directions": {
                                  "type": "array",
                                  "description": "Directions affected by the Situation.",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "directionRef": {
                                        "type": "string",
                                        "description": "Identifier of Direction."
                                      },
                                      "directionName": {
                                        "type": "string",
                                        "description": "Name of Direction."
                                      }
                                    }
                                  }
                                },
                                "routeLinks": {
                                  "type": "array",
                                  "description": "Route Links affected by the Situation.",
                                  "items": {
                                    "type": "object",
                                    "description": "Reference to a Route Link.",
                                    "properties": {
                                      "routeLinkRef": {
                                        "type": "string",
                                        "description": "Identifier of a Route Link."
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "originAimedDepartureTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timetabled departure time of Journey from Origin."
                            },
                            "destinationAimedArrivalTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Timetabled arrival time of journey at Destination."
                            },
                            "accessibilityAssessment": {
                              "type": "object",
                              "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                              "properties": {
                                "mobilityImpairedAccess": {
                                  "type": "boolean",
                                  "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                },
                                "limitation": {
                                  "type": "object",
                                  "description": "Limitation of entity.",
                                  "properties": {
                                    "wheelchairAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place is wheelchair accessible."
                                    },
                                    "stepFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has step free access."
                                    },
                                    "escalatorAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has escalator free access."
                                    },
                                    "liftFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has lift free access."
                                    },
                                    "audibleSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has Audible signals for the visually impaired."
                                    },
                                    "visualSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has visual signals for the hearing impaired."
                                    }
                                  }
                                },
                                "suitabilities": {
                                  "type": "array",
                                  "description": "Suitabilities of facility for specific passenger needs.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                    "properties": {
                                      "suitable": {
                                        "type": "string",
                                        "enum": [
                                          "suitable",
                                          "notSuitable",
                                          "unknown"
                                        ],
                                        "description": "Suitability for specified user need."
                                      },
                                      "userNeed": {
                                        "type": "object",
                                        "description": "Only one of the following",
                                        "properties": {
                                          "mobilityNeed": {
                                            "type": "string",
                                            "enum": [
                                              "wheelchair",
                                              "motorizedWheelchair",
                                              "walkingFrame",
                                              "restrictedMobility",
                                              "otherSpecificNeed"
                                            ],
                                            "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                          },
                                          "medicalNeed": {
                                            "type": "string",
                                            "enum": [
                                              "allergic",
                                              "heartCondition"
                                            ],
                                            "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                          },
                                          "psychoSensoryNeed": {
                                            "type": "string",
                                            "enum": [
                                              "visualImpairment",
                                              "auditoryImpairment",
                                              "cognitiveImpairment",
                                              "averseToLifts",
                                              "averseToEscalators",
                                              "averseToConfinedSpaces",
                                              "averseToCrowds",
                                              "otherSensoryNeed"
                                            ],
                                            "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                          },
                                          "encumbranceNeed": {
                                            "type": "string",
                                            "enum": [
                                              "luggageEncumbered",
                                              "pushchair",
                                              "baggageTrolley",
                                              "oversizeBaggage",
                                              "guideDog",
                                              "otherAnimal",
                                              "otherEncumbrance"
                                            ],
                                            "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "journeyConditions": {
                              "type": "array",
                              "description": "Status of service for the Vehicle Journey. Multiple Condtions can be valid at the same time.",
                              "items": {
                                "type": "string",
                                "enum": [
                                  "unknown",
                                  "altered",
                                  "cancelled",
                                  "delayed",
                                  "diverted",
                                  "noService",
                                  "disrupted",
                                  "additionalService",
                                  "specialService",
                                  "onTime",
                                  "normalService",
                                  "intermittentService",
                                  "shortFormedService",
                                  "fullLengthService",
                                  "extendedService",
                                  "splittingTrain",
                                  "replacementTransport",
                                  "arrivesEarly",
                                  "shuttleService",
                                  "replacementService",
                                  "undefinedServiceInformation"
                                ],
                                "description": "Values for Service Condition. Corresponds to TPEG Pti13 Service Condition values:\n  * unknown - Unknown (pti13_0)\n  * altered - Altered (pti13_1)\n  * cancelled - Cancelled (pti13_2)\n  * delayed - Delayed (pti13_3)\n  * diverted - Diverted (pti13_4)\n  * noService - No Service (pti13_5)\n  * disrupted - Disrupted (pti13_6)\n  * additionalService - Additional Service (pti13_7)\n  * specialService - Special Service (pti13_8)\n  * onTime - On Time (pti13_9)\n  * normalService - Normal Service (pti13_10)\n  * intermittentService - Intermittent Service (pti13_11)\n  * shortFormedService - Short Formed Service (pti13_12)\n  * fullLengthService - Full Length Service (pti13_13)\n  * extendedService - Extended Service (pti13_14)\n  * splittingTrain - Splitting Train (pti13_15)\n  * replacementTransport - Replacement Transport (pti13_16)\n  * arrivesEarly - Arrives Early (pti13_17)\n  * shuttleService - Shuttle Service (pti13_18)\n  * replacementService - Replacement Service (pti13_19)\n  * undefinedServiceInformation - Undefined Service Information (pti13_255)"
                              }
                            },
                            "calls": {
                              "type": "array",
                              "description": "Scope within Journey.",
                              "items": {
                                "type": "object",
                                "description": "Information about a Call affected by a Situation.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Annotated Reference to Stop Point",
                                    "properties": {
                                      "stopPointRef": {
                                        "type": "string",
                                        "description": "Identifier of Stop Point."
                                      },
                                      "stopPointName": {
                                        "type": "string",
                                        "description": "Name of Stop Point."
                                      },
                                      "location": {
                                        "type": "object",
                                        "description": "Point Projection to use for stop point.",
                                        "properties": {
                                          "latitude": {
                                            "type": "number",
                                            "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                          },
                                          "longitude": {
                                            "type": "number",
                                            "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                          },
                                          "precision": {
                                            "type": "number",
                                            "description": "Precision for point measurement. In meters."
                                          }
                                        }
                                      },
                                      "affectedModes": {
                                        "type": "array",
                                        "description": "Affected transport modes for the Stop Point",
                                        "items": {
                                          "type": "string",
                                          "enum": [
                                            "unknown",
                                            "railwayService",
                                            "coachService",
                                            "suburbanRailwayService",
                                            "urbanRailwayService",
                                            "metroService",
                                            "undergroundService",
                                            "busService",
                                            "trolleyBusService",
                                            "tramService",
                                            "waterTransportService",
                                            "airService",
                                            "ferryService",
                                            "telecabinService",
                                            "funicularService",
                                            "taxiService",
                                            "selfDrive"
                                          ],
                                          "description": "TPEG pti01 Transport modes. Allowed values:\n  * unknown - (pti01_0)\n  * railwayService - (pti01_1)\n  * coachService - (pti01_2)\n  * suburbanRailwayService - (pti01_3)\n  * urbanRailwayService - (pti01_4)\n  * metroService - (pti01_5)\n  * undergroundService - (pti01_6)\n  * busService - (pti01_7)\n  * trolleyBusService - (pti01_8)\n  * tramService - (pti01_9)\n  * waterTransportService - (pti01_10)\n  * airService - (pti01_11)\n  * ferryService - (pti01_12)\n  * telecabinService - (pti01_13)\n  * funicularService - (pti01_14)\n  * taxiService - (pti01_15)\n  * selfDrive - (pti01_16)"
                                        }
                                      },
                                      "placeRef": {
                                        "type": "string",
                                        "description": "Identifier of Place in which Stop lies."
                                      },
                                      "placeName": {
                                        "type": "string",
                                        "description": "Name of Stop."
                                      },
                                      "accessibilityAssessment": {
                                        "type": "object",
                                        "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                        "properties": {
                                          "mobilityImpairedAccess": {
                                            "type": "boolean",
                                            "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                          },
                                          "limitation": {
                                            "type": "object",
                                            "description": "Limitation of entity.",
                                            "properties": {
                                              "wheelchairAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place is wheelchair accessible."
                                              },
                                              "stepFreeAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has step free access."
                                              },
                                              "escalatorAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has escalator free access."
                                              },
                                              "liftFreeAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has lift free access."
                                              },
                                              "audibleSignsAvailable": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has Audible signals for the visually impaired."
                                              },
                                              "visualSignsAvailable": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has visual signals for the hearing impaired."
                                              }
                                            }
                                          },
                                          "suitabilities": {
                                            "type": "array",
                                            "description": "Suitabilities of facility for specific passenger needs.",
                                            "items": {
                                              "type": "object",
                                              "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                              "properties": {
                                                "suitable": {
                                                  "type": "string",
                                                  "enum": [
                                                    "suitable",
                                                    "notSuitable",
                                                    "unknown"
                                                  ],
                                                  "description": "Suitability for specified user need."
                                                },
                                                "userNeed": {
                                                  "type": "object",
                                                  "description": "Only one of the following",
                                                  "properties": {
                                                    "mobilityNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "wheelchair",
                                                        "motorizedWheelchair",
                                                        "walkingFrame",
                                                        "restrictedMobility",
                                                        "otherSpecificNeed"
                                                      ],
                                                      "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                                    },
                                                    "medicalNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "allergic",
                                                        "heartCondition"
                                                      ],
                                                      "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                                    },
                                                    "psychoSensoryNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "visualImpairment",
                                                        "auditoryImpairment",
                                                        "cognitiveImpairment",
                                                        "averseToLifts",
                                                        "averseToEscalators",
                                                        "averseToConfinedSpaces",
                                                        "averseToCrowds",
                                                        "otherSensoryNeed"
                                                      ],
                                                      "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                                    },
                                                    "encumbranceNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "luggageEncumbered",
                                                        "pushchair",
                                                        "baggageTrolley",
                                                        "oversizeBaggage",
                                                        "guideDog",
                                                        "otherAnimal",
                                                        "otherEncumbrance"
                                                      ],
                                                      "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "connectionLinks": {
                                        "type": "array",
                                        "description": "Connection links affected by Situation.",
                                        "items": {
                                          "type": "object",
                                          "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                          "properties": {
                                            "connectionLinkRef": {
                                              "type": "string",
                                              "description": "Reference to a Connection link affected by a Situation."
                                            },
                                            "connectionName": {
                                              "type": "string",
                                              "description": "Name of a Connection link affected by a Situation."
                                            },
                                            "location": {
                                              "type": "object",
                                              "description": "Point Projection to use for stop point.",
                                              "properties": {
                                                "latitude": {
                                                  "type": "number",
                                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                                },
                                                "longitude": {
                                                  "type": "number",
                                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                                },
                                                "precision": {
                                                  "type": "number",
                                                  "description": "Precision for point measurement. In meters."
                                                }
                                              }
                                            },
                                            "lines": {
                                              "type": "array",
                                              "description": "Lines to which link connects.",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "lineRef": {
                                                    "type": "string",
                                                    "description": "Reference to a Line."
                                                  }
                                                }
                                              }
                                            },
                                            "connectingStopPointRef": {
                                              "type": "string",
                                              "description": "Identifier of connecting Stop Point."
                                            },
                                            "connectingStopPointName": {
                                              "type": "string",
                                              "description": "Name of connecting Stop Point."
                                            },
                                            "connectionDirection": {
                                              "type": "string",
                                              "enum": [
                                                "from",
                                                "to",
                                                "both"
                                              ],
                                              "default": "both",
                                              "description": "Direction of connection. Default is both."
                                            },
                                            "affectedPathLinks": {
                                              "type": "array",
                                              "description": "Path Links affected by a Situation.",
                                              "items": {
                                                "type": "object",
                                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                                "properties": {
                                                  "linkRef": {
                                                    "type": "string",
                                                    "description": "Identifier of Connection link."
                                                  },
                                                  "linkName": {
                                                    "type": "string",
                                                    "description": "Name of Connection link."
                                                  },
                                                  "accessibilityFeature": {
                                                    "type": "string",
                                                    "enum": [
                                                      "lift",
                                                      "stairs",
                                                      "seriesOfStairs",
                                                      "escalator",
                                                      "travelator",
                                                      "ramp",
                                                      "shuttle",
                                                      "barrier",
                                                      "narrowEntrance",
                                                      "confinedSpace",
                                                      "queueManagement",
                                                      "none",
                                                      "unknown",
                                                      "other"
                                                    ],
                                                    "description": "Nature of Connection link."
                                                  },
                                                  "linkDirection": {
                                                    "type": "string",
                                                    "description": "Description of a Direction of Connection link."
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Real-time Call properties.",
                                    "properties": {
                                      "vehicleAtStop": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Whether Vehicle is currently at stop. Default is false."
                                      },
                                      "vehicleLocationAtStop": {
                                        "type": "object",
                                        "description": "Point Projection to use for stop point.",
                                        "properties": {
                                          "latitude": {
                                            "type": "number",
                                            "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                          },
                                          "longitude": {
                                            "type": "number",
                                            "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                          },
                                          "precision": {
                                            "type": "number",
                                            "description": "Precision for point measurement. In meters."
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Elements describing Call properties. Values for these elements can be specified on an production Vehicle Journey Call. Each real-time Journey Call takes its values from the corresponding Dated Vehicle Journey Call. The absence of a value on an real-time Call indicates that the value should be inherited (i) from any recent preceding update message for the same entity, or if there is no previous override,  (ii) from its immediate parent entity.",
                                    "properties": {
                                      "timingPoint": {
                                        "type": "boolean",
                                        "default": true,
                                        "description": "Whether the stop is a TIMING POINT. Times for stops that are not timing points are sometimes interpolated crudely from the timing points, and may represent a lower level of accuracy. Default is 'true'."
                                      },
                                      "boardingStretch": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Whether this is a Hail and Ride Stop. Default is 'false'."
                                      },
                                      "requestStop": {
                                        "type": "boolean",
                                        "default": false,
                                        "description": "Whether Vehicle stops only if requested explicitly by passenger. Default is 'false'."
                                      },
                                      "originDisplay": {
                                        "type": "string",
                                        "description": "Origin to show for the Vehicle at the specific stop (vehicle signage), if different to the Origin Name for the full journey."
                                      },
                                      "destinationdisplay": {
                                        "type": "string",
                                        "description": "Destination to show for the VEHICLE at the specific stop (vehicle signage), if different to the Destination Name for the full journey."
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "description": "Elements describing the arrival of a Vehicle at a Stop Point.",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Arrival times for Call.",
                                        "properties": {
                                          "aimedArrivalTime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Target arrival time of Vehicle according to latest working timetable."
                                          },
                                          "actualArrivalTime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Observed time of arrival of Vehicle."
                                          },
                                          "expectedArrivalTime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Estimated time of arrival of Vehicle."
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "arrivalStatus": {
                                            "type": "string",
                                            "enum": [
                                              "onTime",
                                              "early",
                                              "delayed",
                                              "cancelled",
                                              "arrived",
                                              "departed",
                                              "missed",
                                              "noReport",
                                              "notExpected"
                                            ],
                                            "description": "Classification of the timeliness of the Call, according to a fixed list of values. This may reflect a presentation policy, for example Calls less than one minute behind target time are still classified as on-time. Applications may use this to guide their own presentation of times. Allowed values:\n  * onTime - Service is on time.\n  * early - Service is earlier than expected.\n  * delayed - Service is delayed.\n  * cancelled - Service is cancelled.\n  * arrived - Service has arrived.\n  * departed - Service has departed.\n  * missed - Stop has been missed out but service is not cancelled.\n  * noReport - There is no information about the service.\n  * notExpected - Service is not expected to call this stop. For instance a flexible service that has not yet been preordered."
                                          },
                                          "arrivalPlatformName": {
                                            "type": "string",
                                            "description": "Bay or platform name. Inheritable property. Can be omitted if the same as the DeparturePlatformName If there is no arrival platform name separate from the departure platform name, the precedence is (i) any arrival platform on any related dated timetable element, (ii) any departure platform name on this estimated element; (iii) any departure platform name on any related dated timetable Call."
                                          },
                                          "arrivalBoardingActivity": {
                                            "type": "string",
                                            "enum": [
                                              "alighting",
                                              "noAlighting",
                                              "passThru"
                                            ],
                                            "default": "alighting",
                                            "description": "Type of boarding and alighting allowed at stop. Default is 'alighting'. Allowed values:\n  * alighting - Passengers may alight.\n  * noAlighting - Passengers may not alight.\n  * passThru - Vehicle does not stop."
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "description": "Elements describing the the departure of a Vehicle from a Stop Point.",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Departure times for Call.",
                                        "properties": {
                                          "aimedDepartureTime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Target departure time of Vehicle according to latest working timetable."
                                          },
                                          "actualDepartureTime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Observed time of departure of Vehicle from Stop."
                                          },
                                          "expectedDepartureTime": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Estimated time of departure of Vehicle from stop. May include waiting time. For people on a Vehicle this is the time that would normally be shown."
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "departureStatus": {
                                            "type": "string",
                                            "enum": [
                                              "onTime",
                                              "early",
                                              "delayed",
                                              "cancelled",
                                              "arrived",
                                              "departed",
                                              "missed",
                                              "noReport",
                                              "notExpected"
                                            ],
                                            "description": "Classification of the timeliness of the Call, according to a fixed list of values. This may reflect a presentation policy, for example Calls less than one minute behind target time are still classified as on-time. Applications may use this to guide their own presentation of times. Allowed values:\n  * onTime - Service is on time.\n  * early - Service is earlier than expected.\n  * delayed - Service is delayed.\n  * cancelled - Service is cancelled.\n  * arrived - Service has arrived.\n  * departed - Service has departed.\n  * missed - Stop has been missed out but service is not cancelled.\n  * noReport - There is no information about the service.\n  * notExpected - Service is not expected to call this stop. For instance a flexible service that has not yet been preordered."
                                          },
                                          "departurePlatformName": {
                                            "type": "string",
                                            "description": "Departure Quay (Bay or Platform) name. Inheritable property."
                                          },
                                          "departureBoardingActivity": {
                                            "type": "string",
                                            "enum": [
                                              "boarding",
                                              "noBoarding",
                                              "passThru"
                                            ],
                                            "default": "boarding",
                                            "description": "Nature of boarding allowed at stop. Default is 'boarding'. Allowed values:\n  * boarding - Passengers may board.\n  * noBoarding - Passengers may not board.\n  * passThru - Vehicle does not stop."
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "description": "Elements describing the Headway Intervals.",
                                    "properties": {
                                      "aimedHeadwayInterval": {
                                        "type": "string",
                                        "format": "duration",
                                        "description": "For frequency based services, target interval between vehicles at stop. Duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations). Milliseconds should not be used. Must be positive. e.g. 'PT5M'"
                                      },
                                      "expectedHeadwayInterval": {
                                        "type": "string",
                                        "format": "duration",
                                        "description": "For frequency based services, expected interval between vehicles at stop. Duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations). Milliseconds should not be used. Must be positive. e.g. 'PT5M'"
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "order": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "description": "Order of visit to Stop within Journey Pattern of Journey."
                                      },
                                      "callCondition": {
                                        "type": "string",
                                        "enum": [
                                          "unknown",
                                          "startPoint",
                                          "destination",
                                          "stop",
                                          "via",
                                          "notStopping",
                                          "temporaryStop",
                                          "temporarilyNotStopping",
                                          "exceptionalStop",
                                          "additionalStop",
                                          "requestStop",
                                          "frontTrainDestination",
                                          "rearTrainDestination",
                                          "throughServiceDestination",
                                          "notVia",
                                          "alteredStartPoint",
                                          "alteredDestination",
                                          "undefinedRoutePoint"
                                        ],
                                        "description": "Values fo Route Point Type. Corresponds to TPEG Pti15 Route Point Type values:\n  * unknown - Unknown (pti15_0)\n  * startPoint - Start Point (pti15_1)\n  * destination - Destination (pti15_2)\n  * stop - Stop (pti15_3)\n  * via - Via (pti15_4)\n  * notStopping - Not Stopping (pti15_5)\n  * temporaryStop - Temporary Stop (pti15_6)\n  * temporarilyNotStopping - Temporarily Not Stopping (pti15_7)\n  * exceptionalStop - Exceptional Stop (pti15_8)\n  * additionalStop - Additional Stop (pti15_9)\n  * requestStop - Request Stop (pti15_10)\n  * frontTrainDestination - Front Train Destination (pti15_11)\n  * rearTrainDestination - Rear Train Destination (pti15_12)\n  * throughServiceDestination - Through Service Destination (pti15_13)\n  * notVia - Not Via (pti15_14)\n  * alteredStartPoint - Altered Start Point (pti15_15)\n  * alteredDestination - Altered Destination (pti15_16)\n  * undefinedRoutePoint - Undefined Route Point (pti15_255)"
                                      },
                                      "affectedInterchanges": {
                                        "type": "array",
                                        "description": "Journey Interchanges affected by Situation",
                                        "items": {
                                          "type": "object",
                                          "description": "Information about a Service Journey Interchange at Connection link from a given Stop Point.",
                                          "properties": {
                                            "interchangeRef": {
                                              "type": "string",
                                              "description": "Reference to a Service Journey Interchange affected by a Situation."
                                            },
                                            "interchangeStopPointRef": {
                                              "type": "string",
                                              "description": "Identifier of Stop Point at which Vehicle Journey meets for Interchange. If blank, same stop as destination."
                                            },
                                            "interchangeStopPointName": {
                                              "type": "string",
                                              "description": "Name of Interchange Stop Point."
                                            },
                                            "connectingVehicleJourneyRef": {
                                              "type": "string",
                                              "description": "Reference to connecting Vehicle Journey affected by a Situation."
                                            },
                                            "interchangeStatusType": {
                                              "type": "string",
                                              "enum": [
                                                "unknown",
                                                "connection",
                                                "replacement",
                                                "alternative",
                                                "connectionNotHeld",
                                                "connectionHeld",
                                                "statusOfConenctionUndecided",
                                                "undefinedCrossReferenceInformation"
                                              ],
                                              "description": "Status of a Service Journey Interchange. Coresponds to TPEG pti31 cross reference type values:\n  * unknown - Unknown (pti31_0)\n  * connection - Connection (pti31_1)\n  * replacement - Replacement (pti31_2)\n  * alternative - Alternative (pti31_3)\n  * connectionNotHeld - Connection not held (pti31_4)\n  * connectionHeld - Connection held (pti31_5)\n  * statusOfConenctionUndecided - Status of connection undecided (pti31_6)\n  * undefinedCrossReferenceInformation - Undefined cross reference information (pti31_255)"
                                            },
                                            "connectionLinks": {
                                              "type": "array",
                                              "description": "Connection Links affected by a Situation",
                                              "items": {
                                                "type": "object",
                                                "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                                "properties": {
                                                  "connectionLinkRef": {
                                                    "type": "string",
                                                    "description": "Reference to a Connection link affected by a Situation."
                                                  },
                                                  "connectionName": {
                                                    "type": "string",
                                                    "description": "Name of a Connection link affected by a Situation."
                                                  },
                                                  "location": {
                                                    "type": "object",
                                                    "description": "Point Projection to use for stop point.",
                                                    "properties": {
                                                      "latitude": {
                                                        "type": "number",
                                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                                      },
                                                      "longitude": {
                                                        "type": "number",
                                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                                      },
                                                      "precision": {
                                                        "type": "number",
                                                        "description": "Precision for point measurement. In meters."
                                                      }
                                                    }
                                                  },
                                                  "lines": {
                                                    "type": "array",
                                                    "description": "Lines to which link connects.",
                                                    "items": {
                                                      "type": "object",
                                                      "properties": {
                                                        "lineRef": {
                                                          "type": "string",
                                                          "description": "Reference to a Line."
                                                        }
                                                      }
                                                    }
                                                  },
                                                  "connectingStopPointRef": {
                                                    "type": "string",
                                                    "description": "Identifier of connecting Stop Point."
                                                  },
                                                  "connectingStopPointName": {
                                                    "type": "string",
                                                    "description": "Name of connecting Stop Point."
                                                  },
                                                  "connectionDirection": {
                                                    "type": "string",
                                                    "enum": [
                                                      "from",
                                                      "to",
                                                      "both"
                                                    ],
                                                    "default": "both",
                                                    "description": "Direction of connection. Default is both."
                                                  },
                                                  "affectedPathLinks": {
                                                    "type": "array",
                                                    "description": "Path Links affected by a Situation.",
                                                    "items": {
                                                      "type": "object",
                                                      "description": "Information about a Connection link from a given stop that is affected by a Situation.",
                                                      "properties": {
                                                        "linkRef": {
                                                          "type": "string",
                                                          "description": "Identifier of Connection link."
                                                        },
                                                        "linkName": {
                                                          "type": "string",
                                                          "description": "Name of Connection link."
                                                        },
                                                        "accessibilityFeature": {
                                                          "type": "string",
                                                          "enum": [
                                                            "lift",
                                                            "stairs",
                                                            "seriesOfStairs",
                                                            "escalator",
                                                            "travelator",
                                                            "ramp",
                                                            "shuttle",
                                                            "barrier",
                                                            "narrowEntrance",
                                                            "confinedSpace",
                                                            "queueManagement",
                                                            "none",
                                                            "unknown",
                                                            "other"
                                                          ],
                                                          "description": "Nature of Connection link."
                                                        },
                                                        "linkDirection": {
                                                          "type": "string",
                                                          "description": "Description of a Direction of Connection link."
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "facilities": {
                              "type": "array",
                              "description": "Facilities available for Vehicle Journey.",
                              "items": {
                                "type": "object",
                                "description": "Type for information about a Facility affected by a Situation.",
                                "properties": {
                                  "facilityRef": {
                                    "type": "string",
                                    "description": "Reference to a Facility."
                                  },
                                  "startStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of stop point at which availability first applies."
                                  },
                                  "endStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of stop point at which availability last applies."
                                  },
                                  "facilityName": {
                                    "type": "string",
                                    "description": "Name of facility."
                                  },
                                  "facilityStatus": {
                                    "type": "string",
                                    "enum": [
                                      "unknown",
                                      "available",
                                      "notAvailable",
                                      "partiallyAvailable",
                                      "added",
                                      "removed"
                                    ],
                                    "description": "Allowed values for the status of a Monitored Facility:\n  * unknown - Unknown\n  * available - Available\n  * notAvailable - Not Available\n  * partiallyAvailable - Partially Available\n  * added - Added\n  * removed - Removed"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "stopPlaces": {
                        "type": "array",
                        "description": "Stop Places scope(Empty)",
                        "items": {
                          "type": "object",
                          "description": "Information about the Stop Places affected by a Situation.",
                          "properties": {
                            "accessibilityAssessment": {
                              "type": "object",
                              "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                              "properties": {
                                "mobilityImpairedAccess": {
                                  "type": "boolean",
                                  "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                },
                                "limitation": {
                                  "type": "object",
                                  "description": "Limitation of entity.",
                                  "properties": {
                                    "wheelchairAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place is wheelchair accessible."
                                    },
                                    "stepFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has step free access."
                                    },
                                    "escalatorAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has escalator free access."
                                    },
                                    "liftFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has lift free access."
                                    },
                                    "audibleSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has Audible signals for the visually impaired."
                                    },
                                    "visualSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has visual signals for the hearing impaired."
                                    }
                                  }
                                },
                                "suitabilities": {
                                  "type": "array",
                                  "description": "Suitabilities of facility for specific passenger needs.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                    "properties": {
                                      "suitable": {
                                        "type": "string",
                                        "enum": [
                                          "suitable",
                                          "notSuitable",
                                          "unknown"
                                        ],
                                        "description": "Suitability for specified user need."
                                      },
                                      "userNeed": {
                                        "type": "object",
                                        "description": "Only one of the following",
                                        "properties": {
                                          "mobilityNeed": {
                                            "type": "string",
                                            "enum": [
                                              "wheelchair",
                                              "motorizedWheelchair",
                                              "walkingFrame",
                                              "restrictedMobility",
                                              "otherSpecificNeed"
                                            ],
                                            "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                          },
                                          "medicalNeed": {
                                            "type": "string",
                                            "enum": [
                                              "allergic",
                                              "heartCondition"
                                            ],
                                            "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                          },
                                          "psychoSensoryNeed": {
                                            "type": "string",
                                            "enum": [
                                              "visualImpairment",
                                              "auditoryImpairment",
                                              "cognitiveImpairment",
                                              "averseToLifts",
                                              "averseToEscalators",
                                              "averseToConfinedSpaces",
                                              "averseToCrowds",
                                              "otherSensoryNeed"
                                            ],
                                            "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                          },
                                          "encumbranceNeed": {
                                            "type": "string",
                                            "enum": [
                                              "luggageEncumbered",
                                              "pushchair",
                                              "baggageTrolley",
                                              "oversizeBaggage",
                                              "guideDog",
                                              "otherAnimal",
                                              "otherEncumbrance"
                                            ],
                                            "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "stopPlaceRef": {
                              "type": "string",
                              "description": "Identifier of Stop Place affected by the Situation."
                            },
                            "stopPlaceName": {
                              "type": "string",
                              "description": "Name of stop place."
                            },
                            "stopPlaceType": {
                              "type": "string",
                              "enum": [
                                "airport",
                                "railStation",
                                "metroStation",
                                "coachStation",
                                "busStation",
                                "shipPort",
                                "ferryPort",
                                "ferryStop",
                                "onStreetBus",
                                "onStreetTram",
                                "skiLift",
                                "other"
                              ],
                              "description": "Describes the type of the Stop Place. The values are from IFOPT:\n  * airport - Airport\n  * railStation - Rail Station\n  * metroStation - Metro Station\n  * coachStation - Coach Station\n  * busStation - Bus Station\n  * shipPort - Ship Port\n  * ferryPort - Ferry Port\n  * ferryStop - Ferry Stop\n  * onStreetBus - On Street Bus\n  * onStreetTram - On Street Tram\n  * skiLift - Ski Lift\n  * other - Other "
                            },
                            "affectedFacilities": {
                              "type": "array",
                              "description": "Facilities available for Vehicle Journey.",
                              "items": {
                                "type": "object",
                                "description": "Type for information about a Facility affected by a Situation.",
                                "properties": {
                                  "facilityRef": {
                                    "type": "string",
                                    "description": "Reference to a Facility."
                                  },
                                  "startStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of stop point at which availability first applies."
                                  },
                                  "endStopPointRef": {
                                    "type": "string",
                                    "description": "Identifier of stop point at which availability last applies."
                                  },
                                  "facilityName": {
                                    "type": "string",
                                    "description": "Name of facility."
                                  },
                                  "facilityStatus": {
                                    "type": "string",
                                    "enum": [
                                      "unknown",
                                      "available",
                                      "notAvailable",
                                      "partiallyAvailable",
                                      "added",
                                      "removed"
                                    ],
                                    "description": "Allowed values for the status of a Monitored Facility:\n  * unknown - Unknown\n  * available - Available\n  * notAvailable - Not Available\n  * partiallyAvailable - Partially Available\n  * added - Added\n  * removed - Removed"
                                  }
                                }
                              }
                            },
                            "affectedComponents": {
                              "type": "array",
                              "description": "Quays affected by the Situation.",
                              "items": {
                                "type": "object",
                                "description": "Information about the quays affected by the Situation.",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Defines geospatial data elements for a zone such that it can be projected.",
                                    "properties": {
                                      "pointProjection": {
                                        "type": "object",
                                        "description": "Geospatial Position of a Point. May be expressed in concrete WGS 84 Coordinates.",
                                        "allOf": [
                                          {
                                            "type": "object",
                                            "description": "WGS84 Coordinates.",
                                            "properties": {
                                              "longitude": {
                                                "type": "number",
                                                "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                              },
                                              "latitude": {
                                                "type": "number",
                                                "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                              },
                                              "altitude": {
                                                "type": "number",
                                                "description": "Altitude."
                                              }
                                            }
                                          },
                                          {
                                            "properties": {
                                              "features": {
                                                "type": "array",
                                                "description": "GIS Features that this element projects onto.",
                                                "items": {
                                                  "type": "string",
                                                  "description": "Identifier of a Feature in a GIS data system."
                                                }
                                              },
                                              "precision": {
                                                "type": "number",
                                                "description": "Precision for point measurement. In meters."
                                              }
                                            }
                                          }
                                        ]
                                      },
                                      "linkProjection": {
                                        "type": "object",
                                        "description": "Projection as a geospatial polyline.",
                                        "properties": {
                                          "features": {
                                            "type": "array",
                                            "description": "GIS Features that this element projects onto.",
                                            "items": {
                                              "type": "string",
                                              "description": "Identifier of a Feature in a GIS data system."
                                            }
                                          },
                                          "line": {
                                            "type": "array",
                                            "minItems": 2,
                                            "description": "Ordered sequence of points. There must always be a start and end point.",
                                            "items": {
                                              "type": "object",
                                              "description": "Geospatial Position of a Point. May be expressed in concrete WGS 84 Coordinates.",
                                              "allOf": [
                                                {
                                                  "type": "object",
                                                  "description": "WGS84 Coordinates.",
                                                  "properties": {
                                                    "longitude": {
                                                      "type": "number",
                                                      "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                                    },
                                                    "latitude": {
                                                      "type": "number",
                                                      "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                                    },
                                                    "altitude": {
                                                      "type": "number",
                                                      "description": "Altitude."
                                                    }
                                                  }
                                                },
                                                {
                                                  "properties": {
                                                    "features": {
                                                      "type": "array",
                                                      "description": "GIS Features that this element projects onto.",
                                                      "items": {
                                                        "type": "string",
                                                        "description": "Identifier of a Feature in a GIS data system."
                                                      }
                                                    },
                                                    "precision": {
                                                      "type": "number",
                                                      "description": "Precision for point measurement. In meters."
                                                    }
                                                  }
                                                }
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "zoneProjection": {
                                        "type": "object",
                                        "description": "Projection as a geospatial zone.",
                                        "properties": {
                                          "features": {
                                            "type": "array",
                                            "description": "GIS Features that this element projects onto.",
                                            "items": {
                                              "type": "string",
                                              "description": "Identifier of a Feature in a GIS data system."
                                            }
                                          },
                                          "boundaries": {
                                            "type": "array",
                                            "description": "Boundary lines of zone",
                                            "items": {
                                              "type": "array",
                                              "minItems": 3,
                                              "description": "Boundary line of Zone as an ordered set of points.",
                                              "items": {
                                                "type": "object",
                                                "description": "Geospatial Position of a Point. May be expressed in concrete WGS 84 Coordinates.",
                                                "allOf": [
                                                  {
                                                    "type": "object",
                                                    "description": "WGS84 Coordinates.",
                                                    "properties": {
                                                      "longitude": {
                                                        "type": "number",
                                                        "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                                      },
                                                      "latitude": {
                                                        "type": "number",
                                                        "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                                      },
                                                      "altitude": {
                                                        "type": "number",
                                                        "description": "Altitude."
                                                      }
                                                    }
                                                  },
                                                  {
                                                    "properties": {
                                                      "features": {
                                                        "type": "array",
                                                        "description": "GIS Features that this element projects onto.",
                                                        "items": {
                                                          "type": "string",
                                                          "description": "Identifier of a Feature in a GIS data system."
                                                        }
                                                      },
                                                      "precision": {
                                                        "type": "number",
                                                        "description": "Precision for point measurement. In meters."
                                                      }
                                                    }
                                                  }
                                                ]
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  {
                                    "properties": {
                                      "accessibilityAssessment": {
                                        "type": "object",
                                        "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                                        "properties": {
                                          "mobilityImpairedAccess": {
                                            "type": "boolean",
                                            "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                          },
                                          "limitation": {
                                            "type": "object",
                                            "description": "Limitation of entity.",
                                            "properties": {
                                              "wheelchairAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place is wheelchair accessible."
                                              },
                                              "stepFreeAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has step free access."
                                              },
                                              "escalatorAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has escalator free access."
                                              },
                                              "liftFreeAccess": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has lift free access."
                                              },
                                              "audibleSignsAvailable": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has Audible signals for the visually impaired."
                                              },
                                              "visualSignsAvailable": {
                                                "type": "string",
                                                "enum": [
                                                  true,
                                                  false,
                                                  "unknown"
                                                ],
                                                "description": "Whether a Place has visual signals for the hearing impaired."
                                              }
                                            }
                                          },
                                          "suitabilities": {
                                            "type": "array",
                                            "description": "Suitabilities of facility for specific passenger needs.",
                                            "items": {
                                              "type": "object",
                                              "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                              "properties": {
                                                "suitable": {
                                                  "type": "string",
                                                  "enum": [
                                                    "suitable",
                                                    "notSuitable",
                                                    "unknown"
                                                  ],
                                                  "description": "Suitability for specified user need."
                                                },
                                                "userNeed": {
                                                  "type": "object",
                                                  "description": "Only one of the following",
                                                  "properties": {
                                                    "mobilityNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "wheelchair",
                                                        "motorizedWheelchair",
                                                        "walkingFrame",
                                                        "restrictedMobility",
                                                        "otherSpecificNeed"
                                                      ],
                                                      "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                                    },
                                                    "medicalNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "allergic",
                                                        "heartCondition"
                                                      ],
                                                      "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                                    },
                                                    "psychoSensoryNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "visualImpairment",
                                                        "auditoryImpairment",
                                                        "cognitiveImpairment",
                                                        "averseToLifts",
                                                        "averseToEscalators",
                                                        "averseToConfinedSpaces",
                                                        "averseToCrowds",
                                                        "otherSensoryNeed"
                                                      ],
                                                      "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                                    },
                                                    "encumbranceNeed": {
                                                      "type": "string",
                                                      "enum": [
                                                        "luggageEncumbered",
                                                        "pushchair",
                                                        "baggageTrolley",
                                                        "oversizeBaggage",
                                                        "guideDog",
                                                        "otherAnimal",
                                                        "otherEncumbrance"
                                                      ],
                                                      "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "componentRef": {
                                        "type": "string",
                                        "description": "Reference to a Stop Place Component."
                                      },
                                      "conponentName": {
                                        "type": "string",
                                        "description": "Name of Component."
                                      },
                                      "componentType": {
                                        "type": "string",
                                        "enum": [
                                          "quay",
                                          "accessSpace",
                                          "boardingPosition",
                                          "stoppingPlace",
                                          "stoppingPosition",
                                          "entrance",
                                          "stopPathLink",
                                          "accessPathLink",
                                          "other"
                                        ],
                                        "description": "Describes the type of the StopPlaceComponent. The values are from IFOPT:\n  * quay - Quay\n  * accessSpace - Access Space\n  * boardingPosition - Boarding Position\n  * stoppingPlace - Stopping Place\n  * stoppingPosition - Stopping Position\n  * entrance - Entrance\n  * stopPathLink - Stop Path Link\n  * accessPathLink - Access Path Link\n  * other - Other "
                                      },
                                      "accessFeatureType": {
                                        "type": "string",
                                        "enum": [
                                          "lift",
                                          "escalator",
                                          "travelator",
                                          "ramp",
                                          "stairs",
                                          "shuttle",
                                          "barrier",
                                          "narrowEntrance",
                                          "confinedSpace",
                                          "queueManagement",
                                          "unknown"
                                        ],
                                        "description": "Describes the access feature type of the StopPlaceComponent. The values are from IFOPT:\n  * lift - Lift\n  * escalator - Escalator\n  * travelator - Travelator\n  * ramp - Ramp\n  * stairs - Stairs\n  * shuttle - Shuttle\n  * barrier - Barrier\n  * narrowEntrance - Narrow Entrance\n  * confinedSpace - Confined Space\n  * queueManagement - Queue Management\n  * unknown - Unknown "
                                      },
                                      "affectedFacilities": {
                                        "type": "array",
                                        "description": "Facilities available for Vehicle Journey.",
                                        "items": {
                                          "type": "object",
                                          "description": "Type for information about a Facility affected by a Situation.",
                                          "properties": {
                                            "facilityRef": {
                                              "type": "string",
                                              "description": "Reference to a Facility."
                                            },
                                            "startStopPointRef": {
                                              "type": "string",
                                              "description": "Identifier of stop point at which availability first applies."
                                            },
                                            "endStopPointRef": {
                                              "type": "string",
                                              "description": "Identifier of stop point at which availability last applies."
                                            },
                                            "facilityName": {
                                              "type": "string",
                                              "description": "Name of facility."
                                            },
                                            "facilityStatus": {
                                              "type": "string",
                                              "enum": [
                                                "unknown",
                                                "available",
                                                "notAvailable",
                                                "partiallyAvailable",
                                                "added",
                                                "removed"
                                              ],
                                              "description": "Allowed values for the status of a Monitored Facility:\n  * unknown - Unknown\n  * available - Available\n  * notAvailable - Not Available\n  * partiallyAvailable - Partially Available\n  * added - Added\n  * removed - Removed"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "affectedNavigationPaths": {
                              "type": "array",
                              "description": "Navigation Paths affected by the Situation.",
                              "items": {
                                "type": "string",
                                "description": "Identifier of a path affected by the Situation."
                              }
                            }
                          }
                        }
                      },
                      "places": {
                        "type": "array",
                        "description": "Places scope(Empty)",
                        "items": {
                          "type": "object",
                          "description": "Type for annotated references to a Topographic Place.",
                          "properties": {
                            "placeRef": {
                              "type": "string",
                              "description": "Reference to a Site or Topographic Place (Locality)."
                            },
                            "privateCode": {
                              "type": "string",
                              "description": "Alternative identifier of Site or Topographic Place"
                            },
                            "placeName": {
                              "type": "string",
                              "description": "Name of Site or Topographic Place."
                            },
                            "location": {
                              "type": "object",
                              "description": "Point Projection to use for stop point.",
                              "properties": {
                                "latitude": {
                                  "type": "number",
                                  "description": "Latitude from equator. -90° (South) to +90° (North).  Decimal degrees. e.g. 56.356."
                                },
                                "longitude": {
                                  "type": "number",
                                  "description": "Longitude from Greenwich Meridian. -180° (East) to +180° (West).  Decimal degrees. e.g. 2.356."
                                },
                                "precision": {
                                  "type": "number",
                                  "description": "Precision for point measurement. In meters."
                                }
                              }
                            },
                            "placeCategory": {
                              "type": "string",
                              "description": "Category of Topographic Place or Site."
                            },
                            "equipments": {
                              "type": "array",
                              "description": "Equipments found at location.",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "equipmentRef": {
                                    "type": "string",
                                    "description": "Reference to an Equipment found at location."
                                  }
                                }
                              }
                            },
                            "accessibilityAssessment": {
                              "type": "object",
                              "description": "Assesment of current accessibilities properties of another element, such as a Stop Point, as affected by the Situation.",
                              "properties": {
                                "mobilityImpairedAccess": {
                                  "type": "boolean",
                                  "description": "Whether stop or service is accessible to mobility impaired users. This may be further qualified by one ore more Limitation & Suitability instances to specify which types of access are available."
                                },
                                "limitation": {
                                  "type": "object",
                                  "description": "Limitation of entity.",
                                  "properties": {
                                    "wheelchairAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place is wheelchair accessible."
                                    },
                                    "stepFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has step free access."
                                    },
                                    "escalatorAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has escalator free access."
                                    },
                                    "liftFreeAccess": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has lift free access."
                                    },
                                    "audibleSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has Audible signals for the visually impaired."
                                    },
                                    "visualSignsAvailable": {
                                      "type": "string",
                                      "enum": [
                                        true,
                                        false,
                                        "unknown"
                                      ],
                                      "description": "Whether a Place has visual signals for the hearing impaired."
                                    }
                                  }
                                },
                                "suitabilities": {
                                  "type": "array",
                                  "description": "Suitabilities of facility for specific passenger needs.",
                                  "items": {
                                    "type": "object",
                                    "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                                    "properties": {
                                      "suitable": {
                                        "type": "string",
                                        "enum": [
                                          "suitable",
                                          "notSuitable",
                                          "unknown"
                                        ],
                                        "description": "Suitability for specified user need."
                                      },
                                      "userNeed": {
                                        "type": "object",
                                        "description": "Only one of the following",
                                        "properties": {
                                          "mobilityNeed": {
                                            "type": "string",
                                            "enum": [
                                              "wheelchair",
                                              "motorizedWheelchair",
                                              "walkingFrame",
                                              "restrictedMobility",
                                              "otherSpecificNeed"
                                            ],
                                            "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                                          },
                                          "medicalNeed": {
                                            "type": "string",
                                            "enum": [
                                              "allergic",
                                              "heartCondition"
                                            ],
                                            "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                                          },
                                          "psychoSensoryNeed": {
                                            "type": "string",
                                            "enum": [
                                              "visualImpairment",
                                              "auditoryImpairment",
                                              "cognitiveImpairment",
                                              "averseToLifts",
                                              "averseToEscalators",
                                              "averseToConfinedSpaces",
                                              "averseToCrowds",
                                              "otherSensoryNeed"
                                            ],
                                            "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                                          },
                                          "encumbranceNeed": {
                                            "type": "string",
                                            "enum": [
                                              "luggageEncumbered",
                                              "pushchair",
                                              "baggageTrolley",
                                              "oversizeBaggage",
                                              "guideDog",
                                              "otherAnimal",
                                              "otherEncumbrance"
                                            ],
                                            "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "suitabilities": {
                    "type": "array",
                    "description": "Effects on different passenger needs.",
                    "items": {
                      "type": "object",
                      "description": "Describes the consequence of the Situation for accessibility and user special needs. The data type is the same as used in prCEN IFOPT. A Consequence can have multiple Suitability instances, each of which specifies whether the effect of the Consequence (as specified by the AffectsScope element) is a change that makes accessibility suitable or unsuitable for a specific UserNeed. Status is specified by the Suitable value for a specific UserNeed.",
                      "properties": {
                        "suitable": {
                          "type": "string",
                          "enum": [
                            "suitable",
                            "notSuitable",
                            "unknown"
                          ],
                          "description": "Suitability for specified user need."
                        },
                        "userNeed": {
                          "type": "object",
                          "description": "Only one of the following",
                          "properties": {
                            "mobilityNeed": {
                              "type": "string",
                              "enum": [
                                "wheelchair",
                                "motorizedWheelchair",
                                "walkingFrame",
                                "restrictedMobility",
                                "otherSpecificNeed"
                              ],
                              "description": "Allowed values:\n  * wheelchair - User needs wheelchair\n  * motorizedWheelchair - User needs motorized wheelchair\n  * walkingFrame - User needs walking frame\n  * restrictedMobility - User has limited mobility\n  * otherSpecificNeed - User has other need "
                            },
                            "medicalNeed": {
                              "type": "string",
                              "enum": [
                                "allergic",
                                "heartCondition"
                              ],
                              "description": "Allowed values:\n  * allergic - User has severe allergies\n  * heartCondition - User has heart condition"
                            },
                            "psychoSensoryNeed": {
                              "type": "string",
                              "enum": [
                                "visualImpairment",
                                "auditoryImpairment",
                                "cognitiveImpairment",
                                "averseToLifts",
                                "averseToEscalators",
                                "averseToConfinedSpaces",
                                "averseToCrowds",
                                "otherSensoryNeed"
                              ],
                              "description": "Allowed values:\n  * visualImpairment - User has visual impairment\n  * auditoryImpairment - User has Auditory impairment\n  * cognitiveImpairment - User has cognitive impairment\n  * averseToLifts - Use is averse to lifts\n  * averseToEscalators - User is averse to Escalators\n  * averseToConfinedSpaces - User dislikes confined spaces\n  * averseToCrowds - User dislikes Crowds\n  * otherSensoryNeed - User has other need"
                            },
                            "encumbranceNeed": {
                              "type": "string",
                              "enum": [
                                "luggageEncumbered",
                                "pushchair",
                                "baggageTrolley",
                                "oversizeBaggage",
                                "guideDog",
                                "otherAnimal",
                                "otherEncumbrance"
                              ],
                              "description": "Allowed values:\n  * luggageEncumbered - User has luggage encumbered\n  * pushchair - User has pushchair\n  * baggageTrolley - User has baggage trolley\n  * oversizeBaggage - User has oversize baggage\n  * guideDog - User has guide dog\n  * otherAnimal - User has Other animal\n  * otherEncumbrance - User has Other encumbrance"
                            }
                          }
                        }
                      }
                    }
                  },
                  "advice": {
                    "type": "object",
                    "description": "Advice to passengers.",
                    "properties": {
                      "adviceRef": {
                        "type": "string",
                        "description": "Reference to a standard advisory Notice to be given to passengers if a particular condition arises."
                      },
                      "details": {
                        "type": "string",
                        "description": "Further Textual advice to passengers."
                      }
                    }
                  },
                  "blocking": {
                    "type": "object",
                    "description": "How Disruption should be handled in Info systems.",
                    "properties": {
                      "journeyPlanner": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether information about parts of the network identified by Affects should be blocked from computation made by a Journey Planner that has a real-time feed of the Situations. Default is 'false'; do not suppress."
                      },
                      "realTime": {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether information about parts of the network identified by Affects should be blocked from real-time departure info systems. Default is 'false'; do not suppress."
                      }
                    }
                  },
                  "boarding": {
                    "type": "object",
                    "description": "Change to normal boarding activity allowed at stop.",
                    "properties": {
                      "arrivalBoardingActivity": {
                        "type": "string",
                        "enum": [
                          "alighting",
                          "noAlighting",
                          "passThru"
                        ],
                        "default": "alighting",
                        "description": "Type of boarding and alighting allowed at stop. Default is 'alighting'. Allowed values:\n  * alighting - Passengers may alight.\n  * noAlighting - Passengers may not alight.\n  * passThru - Vehicle does not stop."
                      },
                      "departureBoardingActivity": {
                        "type": "string",
                        "enum": [
                          "boarding",
                          "noBoarding",
                          "passThru"
                        ],
                        "default": "boarding",
                        "description": "Nature of boarding allowed at stop. Default is 'boarding'. Allowed values:\n  * boarding - Passengers may board.\n  * noBoarding - Passengers may not board.\n  * passThru - Vehicle does not stop."
                      }
                    }
                  },
                  "delays": {
                    "type": "object",
                    "description": "Predicted delays.",
                    "properties": {
                      "delayBand": {
                        "type": "string",
                        "enum": [
                          "negligible",
                          "upToTenMinutes",
                          "betweenTenMinutesAndThirtyMinutes",
                          "betweenThirtyMinutesAndOneHour",
                          "betweenOneHourAndThreeHours",
                          "betweenThreeHoursAndSixHours",
                          "longerThanSixHours"
                        ],
                        "description": "Time band into which delay will likely fall. Allowed values of Delay Band (based on Datex2):\n  * negligible - Negligible\n  * upToTenMinutes - < 10 minutes\n  * betweenTenMinutesAndThirtyMinutes - 10 min - 30 min\n  * betweenThirtyMinutesAndOneHour - 30 min - 1 hour\n  * betweenOneHourAndThreeHours - 1-3 hours\n  * betweenThreeHoursAndSixHours - 3-6 hours\n  * longerThanSixHours - > 6 hours"
                      },
                      "delayType": {
                        "type": "string",
                        "enum": [
                          "delays",
                          "delaysOfUncertainDuration",
                          "longDelays",
                          "veryLongDelays"
                        ],
                        "description": "Category of delay. Allowed values of Delay Type (based on Datex2):\n  * delays - Material Delays\n  * delaysOfUncertainDuration - Delays of Uncertain Duration\n  * longDelays - Long Delays\n  * veryLongDelays - Very Long Delays"
                      },
                      "delay": {
                        "type": "string",
                        "format": "duration",
                        "description": "Additional journey time needed to overcome disruption. Duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations). Milliseconds should not be used. Must be positive. e.g. 'PT5M'"
                      }
                    }
                  },
                  "casualties": {
                    "type": "object",
                    "description": "Information on casualties.",
                    "properties": {
                      "numberOfDeaths": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Number of fatalities."
                      },
                      "numberOfInjured": {
                        "type": "integer",
                        "minimum": 0,
                        "description": "Number of injiured persons."
                      }
                    }
                  },
                  "easements": {
                    "type": "array",
                    "description": "Fare exceptions allowed because of disruption.",
                    "items": {
                      "type": "object",
                      "description": "Easement info.",
                      "properties": {
                        "ticketRestrictions": {
                          "type": "string",
                          "enum": [
                            "unknown",
                            "allTicketClassesValid",
                            "fullFareOnly",
                            "certainTicketsOnly",
                            "ticketWithReservation",
                            "specialFare",
                            "onlyTicketsOfSpecifiedOperator",
                            "noRestrictions",
                            "noOffPeakTickets",
                            "noWeekendReturnTickets",
                            "noReducedFareTickets",
                            "unknownTicketRestriction"
                          ],
                          "description": "Ticket restriction conditions in effect. Allowed values based on TPEG Pti25:\n  * unknown - Unknowm (pti25_0)\n  * allTicketClassesValid - All ticket classes valid (pti25_1)\n  * fullFareOnly - Full fare only (pti25_2)\n  * certainTicketsOnly - Certain tickets only (pti25_3)\n  * ticketWithReservation - Ticket with reservation (pti25_4)\n  * specialFare - Special fare (pti25_5)\n  * onlyTicketsOfSpecifiedOperator - Only tickets of specified operator (pti25_6)\n  * noRestrictions - No restrictions (pti25_7)\n  * noOffPeakTickets - No off-peak tickets (pti25_8)\n  * noWeekendReturnTickets - No weekend return tickets (pti25_9)\n  * noReducedFareTickets - No reduced fare tickets (pti25_10)\n  * unknownTicketRestriction - Unknown ticket restriction (pti25_255)"
                        },
                        "easement": {
                          "type": "string",
                          "description": "Description of fare exceptions allowed because of disruption."
                        },
                        "easementRef": {
                          "type": "string",
                          "description": "Reference to a fare exceptions code that is allowed because of the disruption. An easement may relax a fare condition, for example \"You may use your metro ticket on the bus', or 'You may use your bus ticket in the metro between these two stops'."
                        }
                      }
                    }
                  },
                  "extensions": {
                    "type": "object",
                    "description": "Other field optional.",
                    "properties": {
                      "custom": {
                        "type": "string"
                      },
                      "native": {
                        "type": "object",
                        "description": "For Consequence native object has 'description', 'numberOfPassenger', 'numberOfDisabled'",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Description."
                          },
                          "numberOfPassenger": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of Passengers"
                          },
                          "numberOfDisabled": {
                            "type": "integer",
                            "minimum": 0,
                            "description": "Number of Disableds."
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "publishingActions": {
              "type": "object",
              "description": "Structured model describing distribution actions to handle the Situation. Any actions stated completely replace those from Context. If no actions are stated, any actions from general Context are used. (Empty)",
              "properties": {
                "publishToWebAction": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Action Publish Situation To Web.",
                    "properties": {
                      "actionStatus": {
                        "type": "string",
                        "enum": [
                          "open",
                          "published",
                          "closed"
                        ],
                        "description": "Values for Processing Status of Action at time of Situation publication:\n  * open\n  * published\n  * closed"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of Action."
                      },
                      "incidents": {
                        "type": "boolean",
                        "default": true,
                        "description": "Include in Situation lists on web site. Default is 'true'."
                      },
                      "homePage": {
                        "type": "boolean",
                        "default": false,
                        "description": "Include on home page on web site. Default is 'false'."
                      },
                      "ticker": {
                        "type": "boolean",
                        "default": false,
                        "description": "Include in moving ticker band. Default is 'false'."
                      },
                      "socialNetworks": {
                        "type": "array",
                        "description": "List of social networks to notify.",
                        "items": {
                          "type": "string",
                          "description": "Include in social network indicated by this name. Possible value could be \"twitter.com\", \"facebook.com\", and so on."
                        }
                      }
                    }
                  }
                },
                "publishToMobileAction": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Action Publish Situation To Mobile Site and App.",
                    "properties": {
                      "actionStatus": {
                        "type": "string",
                        "enum": [
                          "open",
                          "published",
                          "closed"
                        ],
                        "description": "Values for Processing Status of Action at time of Situation publication:\n  * open\n  * published\n  * closed"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of Action."
                      },
                      "incidents": {
                        "type": "boolean",
                        "default": true,
                        "description": "Include in Situation lists on mobile site. Default is 'true'."
                      },
                      "homePage": {
                        "type": "boolean",
                        "default": false,
                        "description": "Include in home page on mobile site. Default is 'false'."
                      }
                    }
                  }
                },
                "publishToAlertsAction": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Action Publish Situation To Alert Service.",
                    "properties": {
                      "actionStatus": {
                        "type": "string",
                        "enum": [
                          "open",
                          "published",
                          "closed"
                        ],
                        "description": "Values for Processing Status of Action at time of Situation publication:\n  * open\n  * published\n  * closed"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of Action."
                      },
                      "beforeNotices": {
                        "type": "array",
                        "description": "Whether reminders should be sent.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "interval": {
                              "type": "string",
                              "format": "duration",
                              "description": "Intervals before validity start date to send reminders. Duration in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601#Durations)."
                            }
                          }
                        }
                      },
                      "clearNotice": {
                        "type": "boolean",
                        "description": "Whether a clearing notice should be displayed."
                      },
                      "byEmail": {
                        "type": "boolean",
                        "default": true,
                        "description": "Send as email alert."
                      },
                      "byMobile": {
                        "type": "boolean",
                        "default": true,
                        "description": "Send as mobile alert by SMS or App notification push."
                      }
                    }
                  }
                }
              }
            },
            "extensions": {
              "type": "object",
              "description": "Other field optional.",
              "properties": {
                "custom": {
                  "type": "string"
                },
                "native": {
                  "type": "object",
                  "description": "For PtsituationElement native object has 'updateTime', 'descriptionDelete', 'situationType', 'expectedStart', 'expectedEnd'. For Consequence native object has 'description', 'numberOfPassenger', 'numberOfDisabled'",
                  "properties": {
                    "updateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Update DateTime."
                    },
                    "descriptionDelete": {
                      "type": "string",
                      "description": "Textual description of the reason of cancellation of the Situation (NB: The cancelled Situation has Verification: unverified, Progress: closed, Reality: unconfirmed)."
                    },
                    "situationType": {
                      "type": "string",
                      "enum": [
                        "external",
                        "transport",
                        "vehicle",
                        "crew",
                        "traffic",
                        "infomobility"
                      ],
                      "description": "Intended the competence scope of the Situation. Allowed values:\n  *\tExternal – Situation domain of  external sources (i.e. civil protection, weather system)   \n  *\tTransport – Situation domain of Transport Management system\n  *\tVehicle - Situation domain of Vehicle Management system\n  *\tCrew - Situation domain of Crew Management system\n  *\tTraffic- Situation domain of Traffic Management system\n  *\tInfomobility - Situation domain of Infomobility Management system"
                    },
                    "expectedStart": {
                      "type": "string",
                      "format": "date-time",
                      "description": "start time stamp."
                    },
                    "expectedEnd": {
                      "type": "string",
                      "format": "date-time",
                      "description": "start time stamp."
                    }
                  }
                }
              }
            },
            "relatedItems": {
              "type": "array",
              "description": "List of related items, informations about evry element (points, lines, networks or vehicle journeys) involved.",
              "items": {
                "type": "object",
                "description": "Information about an element (points, lines, networks or vehicle journeys) involved.",
                "properties": {
                  "parent": {
                    "type": "string",
                    "description": "Identifier of the parent of the element involved."
                  },
                  "parentitemtype": {
                    "type": "string",
                    "description": "Type of the parent."
                  },
                  "child": {
                    "type": "string",
                    "description": "Identifier of the element involved."
                  },
                  "childitemtype": {
                    "type": "string",
                    "description": "Type of the element involved."
                  },
                  "source": {
                    "type": "string",
                    "description": "Type of involvement of the child (it can be affected or related)."
                  }
                }
              }
            }
          }
        }
      ]
    }
  },
  "required": [
    "headers",
    "payload"
  ]
}