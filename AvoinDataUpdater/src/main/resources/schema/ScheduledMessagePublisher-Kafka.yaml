swagger: "2.0"
info:
  version: 0.0.1
  title: Scheduled Message Publisher
  description: >-
    `ihbinf-infomobilityschedule-prc-messagepublisher` elaborates messages processed by the [ihbinf-infomobility schedule-api-scheduledmsgmngr](http://host/swagger/design/ui/?urls.primaryName=scheduledmsgmgr-kafka#) and [ihbinf-infomobilityschedule-api-monitoredjourneymsgmngr](http://host/swagger/design/ui/?urls.primaryName=monitoredjourneymsgmgr-kafka#) services. Messages are published through the kafka topic. The use of these topics is for external systems to Moova.
  contact:
    name: Matteo Alticozzi
    email: m.alticozzi@almaviva.it
host: "tbd"
schemes:
  - https
basePath: "/"
securityDefinitions:
  oauth2_dev:
    type: oauth2
    flow: password
    tokenUrl: https://host/token
# oauth2_test:
#   type: oauth2
#   flow: password
#   tokenUrl: https://host/token
# oauth2_demo:
#   type: oauth2
#   flow: password
#   tokenUrl: https://host/token
tags:
  - name: OperatorScheduledMessage
    description: Queue where are published realtime OperatorScheduledMessage
paths:
  "/ihbinf-infomobilityschedule-evl-operatorscheduledmessage":
    get:
      security:
        - oauth2_dev: []
      tags:
        - OperatorScheduledMessage
      summary: Contains all scheduled messages (related to vehicle journey and related to situations) inserted, modified and deleted by users. NOTE --> DO NOT use '/' in the topic name
      description: >-
        Contains all scheduled messages (related to vehicle journey and related to situations) inserted, modified and deleted by users. An OperatorScheduledMessage has a unique id within the Moova system. Messages are published on this topic every time the operator performs an action on the messages.
          OperatorScheduledMessage can be of two types `MONITORED_JOURNEY_SCHEDULED_MESSAGE` messages relating to a vehicle journey or `SCHEDULED_MESSAGE` messages not relating to a vehicle journey which can be associated to situations.
      produces:
        - application/json
      operationId: publishOperatorScheduledMessage
      responses:
        "200":
          description: Object to deserialize from Kafka
          schema:
            $ref: "#/definitions/OperatorScheduledMessageKafka"

definitions:
  AudioContentTypeEnum:
    description: "type of audio content"
    type: "string"
    example: "AUDIO_TEXT"
    enum:
      - AUDIO_TEXT
      - AUDIO_FILE

  AudioSchedulationTypeEnum:
    description: "type of audio schedulation"
    type: "string"
    example: "NOW"
    enum:
      - NOW
      - DELIVERY_AT
      - REPEAT_EVERY

  VideoSchedulationTypeEnum:
    description: "type of audio schedulation"
    type: "string"
    example: "WHEN"
    enum:
      - WHEN
      - CONTINUOS_VISUALIZATION

  AudioText:
    type: object
    description: "information about audio text. This part is present if the audio content type is AUDIO_TEXT"
    properties:
      language:
        type: "string"
        example: "en_GB"
        description: "identifies the language of the audio content"
      text:
        description: "audio text used for tts system"
        type: "string"
    required:
      - language
      - text

  DayOfWeek:
    description: "Day of week"
    type: "string"
    enum:
      - SUNDAY
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY

  DeliveryChannelTypeEnum:
    description: "channel on which the message is delivered. EXTERNAL is not used for MonitoredJourneyScheduledMessage"
    type: "string"
    example: "ONGROUND"
    enum:
      - ONGROUND
      - ONBOARD
      - EXTERNAL

  ExternalSystemRecipient:
    type: object
    description: "scheduled message to delivery to external system. It can delivered to _externalPoints_. This part is present if the scheduled message must be delivered on channel EXTERNAL"
    properties:
      messageContents:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/ExternalText"
      externalPoints:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/Point"
      startDateTime:
        description: "scheduling start date-time"
        type: "string"
        format: "date-time"
      endDateTime:
        description: "scheduling end date-time"
        type: "string"
        format: "date-time"
    required:
      - messageContents

  ExternalText:
    type: object
    description: "information about external text"
    properties:
      language:
        type: "string"
        description: "identifies the language of the external content"
      text:
        type: "string"
    required:
      - language
      - text

  Headers:
    type: object
    description: Mandatory header of the message
    properties:
      e2eId:
        type: string
        format: UUID
        example: "c45c7f92-5f96-4059-b0b3-20295388e4f6"
        description: Correlational event unique identifier for logging and instrumentation
      organisation:
        type: string
        example: "MOOVA"
        description: Data Type for Identifier of an OrganisationCode.
      source:
        type: string
        example: "ihbinf-infomobilityschedule-prc-scheduledmsgpublisher"
        description: Module identifier that publishes the message
      partitionKey:
        type: string
        description: kafka partition key where the message is sent in the specific topic. The message id is used
      eventType:
        type: string
        example: "OperatorScheduledMessage"
        description: Type of event
      recordedAtTime:
        type: string
        format: date-time
        example: "2022-12-14T07:30:00.000"
        description: Registration date
    required:
      - e2eId
      - eventId
      - eventType
      - source
      - recordedAtTime

  MessageContentTypeEnum:
    description: "message content type"
    type: "string"
    example: "AUDIO"
    enum:
      - AUDIO
      - VIDEO
      - AUDIO_VIDEO

  MessageTypeEnum:
    description: "type of the message. Indicates whether related with vehicle journey or not"
    type: "string"
    example: "SCHEDULED_MESSAGE"
    enum:
      - SCHEDULED_MESSAGE
      - MONITORED_JOURNEY_SCHEDULED_MESSAGE

  MonitoredJourneyAudioDeliveryRules:
    type: object
    description: "Delivery Rule for monitored journey scheduled message"
    properties:
      repetitions:
        type: "integer"
      repeatEvery:
        type: "integer"
      scheduledArrival:
        type: "boolean"
      scheduledDeparture:
        type: "boolean"
      estimatedArrival:
        type: "boolean"
      estimatedDeparture:
        type: "boolean"
      eventType:
        $ref: "#/definitions/SpecificEventTypeEnum"

  MonitoredJourneyAudioDeliveryTypeEnum:
    description: "delivery type of message associated with vehicle journeys"
    type: "string"
    enum:
      - ON_EVENT
      - ON_SCHEDULE

  MonitoredJourneyAudioText:
    type: object
    description: "audio message content to be delivered for monitored journey scheduled message"
    properties:
      language:
        type: "string"
        example: "en_GB"
        description: "identifies the language of the content"
      audioText:
        type: "string"
        description: "audio text used for tts system"
    required:
      - audioText
      - language

  MonitoredJourneyAudioMessageContents:
    type: object
    description: >-
      audio message content to be delivered for monitored journey scheduled message with delivery rules.

      Audio messages can be delivered in three delivery types specified in the _deliveryType_ field: 

      - ON_EVENT the message is delivered for vehicle journey when that vehicle journey generates a specified event for a defined Point in _deliveryPoints_ (e.g. ARRIVING)

      - ON_SCHEDULE the message is delivered on a specific vehicle journey scheduling date happens for a defined Point in _deliveryPoints_ (e.g. estimated arrival time)
    properties:
      audioTexts:
        type: "array"
        description: "list of audio message text"
        items:
          $ref: "#/definitions/MonitoredJourneyAudioText"
      deliveryRules:
        $ref: "#/definitions/MonitoredJourneyAudioDeliveryRules"
      deliveryType:
        $ref: "#/definitions/MonitoredJourneyAudioDeliveryTypeEnum"
    required:
      - audioTexts
      - deliveryRules
      - deliveryType

  MonitoredJourneyScheduledMessage:
    type: object
    description: >-
      is filled only if the message is of type MONITORED_JOURNEY_SCHEDULED_MESSAGE
    properties:
      vehicleJourney:
        $ref: "#/definitions/VehicleJourney"
      messageContentType:
        $ref: "#/definitions/MessageContentTypeEnum"
      deliveryPoints:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/Point"
      audioMessageContents:
        $ref: "#/definitions/MonitoredJourneyAudioMessageContents"
      videoTexts:
        type: "array"
        description: "list of video message for vehicle journey"
        items:
          $ref: "#/definitions/MonitoredJourneyVideoText"
    required:
      - vehicleJourney
      - messageContentType
      - deliveryPoints

  MonitoredJourneyVideoText:
    type: object
    description: "video message content to be delivered for monitored journey scheduled message"
    properties:
      language:
        type: "string"
        example: "en_GB"
        description: "identifies the language of the content"
      videoText:
        type: "string"
        description: "audio text used for tts system"
    required:
      - videoText
      - language

  OnGroundRecipient:
    type: object
    description: "scheduled message to delivery at specified _deliveryPoints_. This part is present if the scheduled message must be delivered on channel ONGROUND"
    properties:
      messageContentType:
        $ref: "#/definitions/MessageContentTypeEnum"
      deliveryPoints:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/Point"
      recipientAudioMessagesToDeliver:
        $ref: "#/definitions/RecipientAudioMessagesToDeliver"
      recipientVideoMessagesToDeliver:
        $ref: "#/definitions/RecipientVideoMessagesToDeliver"
    required:
      - messageContentType
      - deliveryPoints

  OnBoardRecipient:
    type: object
    description: "scheduled message to delivery at specified _vehicleJourneys_. This part is present if the scheduled message must be delivered on channel ONBOARD"
    properties:
      messageContentType:
        $ref: "#/definitions/MessageContentTypeEnum"
      vehicleJourneys:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/VehicleJourney"
      recipientAudioMessagesToDeliver:
        $ref: "#/definitions/RecipientAudioMessagesToDeliver"
      recipientVideoMessagesToDeliver:
        $ref: "#/definitions/RecipientVideoMessagesToDeliver"
    required:
      - messageContentType
      - vehicleJourneys

  OperatorScheduledMessage:
    type: object
    description: Object containing the information of a scheduled message inserted by an operator
    properties:
      messageId:
        type: string
        description: unique id of the message
        example: "SHM20211217103239796"
      messageVersion:
        type: integer
        description: message versioning, it is incremented at each message update
        minimum: 1
        example: "1"
      title:
        type: string
        description: title of the message
        maxLength: 255
        example: "Title message"
      messageType:
        $ref: "#/definitions/MessageTypeEnum"
      operation:
        $ref: "#/definitions/OperationTypeEnum"
      creationDateTime:
        type: "string"
        format: "date-time"
        description: "datetime, in UTC ISO8601, creation date time"
      startValidity:
        type: "string"
        format: "date-time"
        description: "datetime, in UTC ISO8601, start validity"
      endValidity:
        type: "string"
        format: "date-time"
        description: "datetime, in UTC ISO8601, end validity"
      scheduledMessage:
        $ref: "#/definitions/ScheduledMessage"
      monitoredJourneyScheduledMessage:
        $ref: "#/definitions/MonitoredJourneyScheduledMessage"
    required:
      - messageId
      - messageVersion
      - title
      - operation
      - messageType
      - creationDateTime
      - startValidity
      - endValidity

  OperatorScheduledMessageKafka:
    type: object
    description: "Container of the message"
    properties:
      headers:
        $ref: "#/definitions/Headers"
      payload:
        $ref: "#/definitions/OperatorScheduledMessage"
      extraPayload:
        type: object
        description: Optional extention of payload object
    required:
      - headers
      - payload

  OperationTypeEnum:
    description: "type of operation performed by the user on the message"
    type: "string"
    example: "INSERT"
    enum:
      - INSERT
      - UPDATE
      - DELETE

  Point:
    type: object
    description: "point where to deliver the scheduled message"
    properties:
      id:
        type: "string"
        example: "TNPNTS00000000000108"
      nameLong:
        type: "string"
        example: "Milan Central FS"
    required:
      - id

  RecipientAudioMessagesToDeliver:
    type: "object"
    description: "audio message to deliver. This part is present if the content type is AUDIO or AUDIO_VIDEO type for a ScheduledMessage"
    properties:
      audioContentType:
        $ref: "#/definitions/AudioContentTypeEnum"
      audioText:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/AudioText"
      media:
        description: "used only for audio file, in this case audio content type is AUDIO_FILE"
        type: "string"
        format: "byte"
      scheduledAudioDeliveryRules:
        $ref: "#/definitions/ScheduledAudioDeliveryRules"
    required:
      - audioContentType
      - scheduledAudioDeliveryRules

  RecipientVideoMessagesToDeliver:
    type: "object"
    description: "video message to deliver. This part is present if the content type is VIDEO or AUDIO_VIDEO type for a ScheduledMessage"
    properties:
      videoTexts:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/VideoText"
      deliveryRules:
        $ref: "#/definitions/ScheduledVideoDeliveryRules"
    required:
      - videoTexts
      - deliveryRules

  ScheduledMessage:
    type: object
    description: "it is filled only if the message is of type SCHEDULED_MESSAGE. The scheduled message can be delivered through one or more channels: ONGROUND, ONBOARD or EXTERNAL"
    properties:
      situations:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/Situation"
      deliveryChannels:
        type: "array"
        minItems: 1
        items:
          $ref: "#/definitions/DeliveryChannelTypeEnum"
      onGroundRecipient:
        $ref: "#/definitions/OnGroundRecipient"
      onBoardRecipient:
        $ref: "#/definitions/OnBoardRecipient"
      externalSystemRecipient:
        $ref: "#/definitions/ExternalSystemRecipient"
    required:
      - deliveryChannels

  ScheduledAudioDeliveryRules:
    type: object
    description: >-
      The delivery rules can be of three types: 
        - NOW the message must be delivered at the time of insertion. 
        - DELIVERY_AT the message must be delivered on the date-time _deliveryAtDateTime_. 
        - REPEAT_EVERY the message begins to be delivered from _startDateTime_ at _startTime_ to _endDateTime_ at _endTime_ evaluating the repetition conditions and _daysOfWeek_ conditions.
    properties:
      audioSchedulationType:
        $ref: "#/definitions/AudioSchedulationTypeEnum"
      repetitions:
        description: "number of times the audio message must be repeated each occurens. It is only used for REPEAT_EVERY type scheduling"
        minimum: 1
        example: 1
        type: "integer"
      repeatEvery:
        description: "period of time that must pass between an audio repetition and the next. This field is in seconds. It is only used for REPEAT_EVERY type scheduling"
        example: 600
        type: "integer"
      startDateTime:
        description: "scheduling start date. It is only used for REPEAT_EVERY type scheduling"
        type: "string"
        format: "date-time"
      endDateTime:
        description: "scheduling end date. It is only used for REPEAT_EVERY type scheduling"
        type: "string"
        format: "date-time"
      startTime:
        description: "scheduling start time. It is only used for REPEAT_EVERY type scheduling"
        type: "string"
        format: "HH:MM"
        example: "14:00"
      endTime:
        description: "scheduling end time. It is only used for REPEAT_EVERY type scheduling"
        type: "string"
        format: "HH:MM"
        example: "17:00"
      daysOfWeek:
        type: "array"
        description: "days of the week when the rule is valid. If the list is empty it is valid every day. It is only used for REPEAT_EVERY type scheduling"
        minItems: 0
        maxItems: 7
        items:
          $ref: "#/definitions/DayOfWeek"
      deliveryAtDateTime:
        type: "string"
        description: "message delivery date and time. It is only used for DELIVERY_AT type scheduling"
        format: "date-time"
    required:
      - audioSchedulationType

  ScheduledVideoDeliveryRules:
    type: object
    description: >-
      The delivery rules can be of two types: 
        - WHEN the message must be delivered to the video from the _startDateTime_ date to the _endDateTime_ date only in the time interval between the _startTime_ time and _endTime_ time for each day in the _daysOfWeek_ list
        - CONTINUOUS_VISUALIZATION the message must be delivered to the video from the _startDateTime_ date (at _startTime_ if exists) to the _endDateTime_ (at _endTime_ if exists)
    properties:
      videoSchedulationType:
        $ref: "#/definitions/VideoSchedulationTypeEnum"
      startDateTime:
        description: "scheduling start date"
        type: "string"
        format: "date-time"
      endDateTime:
        description: "scheduling end date"
        type: "string"
        format: "date-time"
      startTime:
        description: "scheduling start time. Could be null for CONTINUOS_DELIVERY type scheduling"
        type: "string"
        format: "HH:MM"
        example: "14:00"
      endTime:
        description: "scheduling end time. Could be null for CONTINUOS_DELIVERY type scheduling"
        type: "string"
        format: "HH:MM"
        example: "17:00"
      daysOfWeek:
        type: "array"
        description: "days of the week when the rule is valid. If the list is empty it is valid every day. It is only used for WHEN type scheduling"
        minItems: 0
        maxItems: 7
        items:
          $ref: "#/definitions/DayOfWeek"
    required:
      - startDateTime
      - endDateTime
      - videoSchedulationType

  Situation:
    type: object
    description: "a Scheduled message optionally can be related to a situation (SIRI)"
    properties:
      id:
        type: "string"
      name:
        type: "string"

  SpecificEventTypeEnum:
    type: "string"
    description: >-
      one of the event for messages to deliver on board
      ARRIVING
      DEPARTING
      ARRIVED
      DEPARTED

  VehicleJourney:
    type: object
    description: "vehicle journey identifiers information"
    properties:
      datedVehicleJourneyRef:
        description: "id of vehicle journey"
        type: "string"
      dataFrameRef:
        description: "unique identifier of data frame within participant service"
        type: "string"
      vehicleJourneyName:
        description: "name of vehicle journey"
        type: "string"
    required:
      - datedVehicleJourneyRef
      - dataFrameRef
      - vehicleJourneyName

  VideoText:
    type: object
    description: "information about video text"
    properties:
      language:
        type: "string"
        description: "identifies the language of the video content"
      text:
        type: "string"
    required:
      - language
      - text
